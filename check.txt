{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "A guide to XPO's REST APIs",
    "description": "\n# Introduction \nWelcome to XPO's open API explorer! Here, you have the ability to discover the possibilities that XPO has to offer through our suite of open APIs\n\nOur APIs are built on modern REST principles, and will enable you to drive success for your organization by directly integrating information from XPO's transportation ecosystem to your own applications. \n- **Key features are:** \n * On-demand access to real-time market rates, across multiple modes of transportation. \n * Ability to convert rate quotes to live orders.\n * Ability to retrieve order events, to understand the status of active orders. \n *Access to order related documents, such as BOL's and POD's.\n\nIn this page, you'll find the information regarding all of our available APIs, their operations, along with complete details on parameters, requests and response formats.\n\nAre you looking for an API capability that we don't yet offer? Please reach out to us at apionboarding@xpo.com and let us know what you're looking for. We are continuously working to offer new integration capabilities for our customers and partners."
  },
  "servers": [
    {
      "url": "https://api-uat-xpoconnect.xpo.com",
      "description": "**Test Environment** \n\nMessage Limit- 100 KB, Rate Limit - 1 call per second, Quota Limit - 2500 calls per day."
    },
    {
      "url": "https://api-xpoconnect.xpo.com",
      "description": "**Production Environment** \n\nMessage Limit- 100 KB, Rate Limit - 5 calls per second, Quota Limit - Unlimited."
    }
  ],
  "security": [
    {
      "OAuth": []
    },
    { "api_key": [] }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "XPO Logistics uses OAuth 2.0 token mechanism to securely access API endpoints using client credentials grant type. \n\nUser must get Client Id, Client Secret, Scope and API Key prior to generate bearer token either by requesting to apionboarding@xpo.com or submitting a support query  <a href=\"https://apisolutions.xpo.com/transportation/#contact-us\">Here</a>.\n\nThe diagram below illustrates the supported authorization flow.\n\n<img src=\"https://xpodotcom.azureedge.net/xpo/files/s41/auth_token_flow.png\" alt=\"Authorization Flow Diagram\">"
    },
    {
      "name": "Quotes",
      "description": "XPO's Quotes API provides real-time, on-demand rates for either full truckload or less than truckload shipments. The quoting API provides 24/7 on-demand access to XPO's rates, allowing you to get a price at any time."
    },
    {
      "name": "Orders",
      "description": "XPO's Orders API allows partners to manage their orders."
    },
    {
      "name": "Events",
      "description": "XPO's Events API provides order and shipment status for shipments."
    },
    {
      "name": "Documents",
      "description": "XPO's Documents API allows partner to retrieve documents."
    },
    {
      "name": "Invoices",
      "description": "XPO's Invoices API allows partner to retrieve invoices data."
    },
    {
      "name": "Shipments",
      "description": "XPO's Shipments API allows partner to retrieve shipments data."
    }
  ],
  "paths": {
    "/oAuthAPI/rest/v1/token": {
      "post": {
        "description": "Generate token allows you to generate a bearer token. In order to generate the token, you will need to provide an API key in the request header parameter as well as Client ID, Client Secret, Scope and Grant Type in the payload.\n\n Once the token is generated, you will be able to use that token to access any of XPO's open API endpoints. The generated token will expire in 2 hours. Once expired, you will need to refresh the token in order to continue to access the API.",
        "operationId": "Generate Token",
        "security": [
          {
            "api_key": []
          }
        ],
        "tags": [
          "Authentication"
        ],
        "parameters": [
          {
            "required": true,
            "in": "header",
            "description": "Api Key as provided by XPO.",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "[JSON]Generate Token Request.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tokenrequest"
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl --location --request POST 'https:\/\/api-uat-xpoconnect.xpo.com\/oAuthAPI\/rest\/v1\/token\/' \\\n\n--header 'x-api-key: XXXXXXXXXXXXXXXX' \\\n\n--header 'Content-Type: application\/json' \\\n\n--data-raw '{\n\n\"client_id\": \"xpo-tran-boomi-test-app\",\n\n\"client_secret\": \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n\n\"scope\": \"xpo-rates-api\",\n\n\"grant_type\": \"client_credentials\"\n\n}'"
          },
          {
            "lang": "Java",
            "source": "OkHttpClient client = new OkHttpClient().newBuilder()\n\n  .build();\n\nMediaType mediaType = MediaType.parse(\"application\/json\");\n\nRequestBody body = RequestBody.create(mediaType, \"{\\r\\n\\\"client_id\\\": \\\"xpo-tran-boomi-test-app\\\",\\r\\n\\\"client_secret\\\": \\\"XXXXXXXXXXXXXXXXXXXXXXX\\\",\\r\\n\\\"scope\\\": \\\"xpo-rates-api\\\",\\r\\n\\\"grant_type\\\": \\\"client_credentials\\\"\\r\\n}\");\n\nRequest request = new Request.Builder()\n\n  .url(\"https:\/\/api-uat-xpoconnect.xpo.com\/oAuthAPI\/rest\/v1\/token\/\")\n\n  .method(\"POST\", body)\n\n  .addHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXX\")\n\n  .addHeader(\"Content-Type\", \"application\/json\")\n\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "NodeJS",
            "source": "var request = require('request');\n\nvar options = {\n\n  'method': 'POST',\n\n  'url': 'https:\/\/api-uat-xpoconnect.xpo.com\/oAuthAPI\/rest\/v1\/token\/',\n\n  'headers': {\n\n    'x-api-key': 'XXXXXXXXXXXXXXXXXXXXXX',\n\n    'Content-Type': 'application\/json'\n\n  },\n\n  body: JSON.stringify({\"client_id\":\"xpo-tran-boomi-test-app\",\"client_secret\":\"XXXXXXXXXXXXXXXXXXXX\",\"scope\":\"xpo-rates-api\",\"grant_type\":\"client_credentials\"})\n\n\n\n};\n\nrequest(options, function (error, response) { \n\n  if (error) throw new Error(error);\n\n  console.log(response.body);\n\n});\n\n"
          },
          {
            "lang": "C#(RestSharp)",
            "source": "var client = new RestClient(\"https:\/\/api-uat-xpoconnect.xpo.com\/oAuthAPI\/rest\/v1\/token\/\");\n\nclient.Timeout = -1;\n\nvar request = new RestRequest(Method.POST);\n\nrequest.AddHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXX\");\n\nrequest.AddHeader(\"Content-Type\", \"application\/json\");\n\nrequest.AddParameter(\"application\/json\", \"{\\r\\n\\\"client_id\\\": \\\"xpo-tran-boomi-test-app\\\",\\r\\n\\\"client_secret\\\": \\\"XXXXXXXXXXXXXXXXXXXXXX\\\",\\r\\n\\\"scope\\\": \\\"xpo-rates-api\\\",\\r\\n\\\"grant_type\\\": \\\"client_credentials\\\"\\r\\n}\",  ParameterType.RequestBody);\n\nIRestResponse response = client.Execute(request);\n\nConsole.WriteLine(response.Content);"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/successtoken"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "404": {
            "description": "Error 404 Unknown operation. Please contact XPO representative."
          }
        }
      }
    },
    "/quoteAPI/rest/v1/Create": {
      "post": {
        "description": "Create quote accepts information about an individual shipment, and returns a rate - this is the price that XPO would charge to move that shipment. \n\n In order to create a quote, you will need to provide a valid API key and token in the header parameter and shipment details in the request payload.",
        "operationId": "Create Quote",
        "security": [
          {
            "api_key": [],
            "OAuth": []
          }
        ],
        "tags": [
          "Quotes"
        ],
        "parameters": [
          {
            "required": true,
            "in": "header",
            "description": "Api Key as provided by XPO.",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "header",
            "description": "Valid bearer token generated using Token API.",
            "name": "xpoauthorization",
            "schema": {
              "type": "JWT token"
            }
          },
          {
            "name": "async",
            "in": "query",
            "description": "pass async=true, if asynchronous call is needed.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/quoterequest"
              }
            }
          }
        },
        "x-code-samples": [
            {
                "lang": "Curl",
                "source": "curl --location --request POST 'https://api-dev-xpoconnect.xpo.com/quoteAPI/rest/v1/Create' --header 'x-api-key: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' --header 'xpoauthorization: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' --header 'Content-Type: text/plain' --data-raw '{\n  \"partnerOrderCode\": \"test1\",\n  \"partnerIdentifierCode\": \"2-1-TESTCHN2\",\n  \"equipmentCategoryCode\": \"VN\",\n  \"equipmentTypeCode\": \"V\",\n  \"transportationMode\": [\"TL\"],\n  \"additionalServices\": [\n    {\n      \"code\": \"Single\"\n    },\n    {\n      \"code\": \"Team\"\n    }\n  ],\n  \"contactInformations\": [\n    {\n      \"firstName\": \"AXFS8LM2\",\n      \"lastName\": \"ZNH1N22H\",\n      \"email\": \"SK9QM7W3@BDPUWM26.com\",\n      \"phoneNumbers\": [\n        {\n          \"type\": \"Mobile\",\n          \"number\": \"5999213443\"\n        }\n      ]\n    }\n  ],\n  \"applicationSource\": \"GPAPI\",\n  \"stops\": [\n    {\n      \"addressInformations\": {\n        \"locationName\": \"North Ridgeville\",\n        \"addressLine1\": \"North Ridgeville\",\n        \"cityName\": \"North Ridgeville\",\n        \"stateCode\": \"WI\",\n        \"country\": \"USA\",\n        \"zipCode\": \"53706\"\n      },\n      \"type\": \"Pickup\",\n      \"scheduledTimeFrom\": \"2021-08-17T00:00:00-04:00\",\n      \"scheduledTimeTo\": \"2021-08-18T10:20:00-04:00\",\n      \"sequenceNo\": 1,\n      \"specialRequirement\": [\n        {\n          \"code\": \"LFP\"\n        }\n      ],\n      \"stopReferenceNumbers\": [\n        {\n          \"typeCode\": \"PO\",\n          \"value\": \"254123\"\n        }\n      ],\n      \"StopContactInformations\": [\n        {\n          \"firstName\": \"PickupFName\",\n          \"lastName\": \"\",\n          \"email\": \"PickupFName@test.com\",\n          \"PhoneNumbers\": [\n            {\n              \"type\": \"Mobile\",\n              \"number\": \"2165473876\"\n            }\n          ],\n          \"isPrimary\": false\n        }\n      ]\n    },\n    {\n      \"addressInformations\": {\n        \"locationName\": \"Chicago\",\n        \"addressLine1\": \"Chicago\",\n        \"cityName\": \"Chicago\",\n        \"stateCode\": \"IL\",\n        \"country\": \"USA\",\n        \"zipCode\": \"60606\"\n      },\n      \"type\": \"Delivery\",\n      \"scheduledTimeFrom\": \"2021-08-18T10:20:00-04:00\",\n      \"scheduledTimeTo\": \"2021-08-19T10:20:00-04:00\",\n      \"sequenceNo\": 2,\n      \"specialRequirement\": [\n        {\n          \"code\": \"APT\"\n        },\n        {\n          \"code\": \"AST\"\n        },\n        {\n          \"code\": \"DT\"\n        },\n        {\n          \"code\": \"TWC\"\n        }\n      ],\n      \"stopReferenceNumbers\": [\n        {\n          \"typeCode\": \"PO\",\n          \"value\": \"254123\"\n        }\n      ],\n      \"StopContactInformations\": [\n        {\n          \"firstName\": \"DeliveryFName\",\n          \"lastName\": \"\",\n          \"email\": \"DeliveryFName@test.com\",\n          \"PhoneNumbers\": [\n            {\n              \"type\": \"Mobile\",\n              \"number\": \"2132764532\"\n            }\n          ],\n          \"isPrimary\": false\n        }\n      ],\n      \"note\": null\n    }\n  ],\n  \"items\": [\n    {\n      \"productCode\": \"Paper\",\n      \"itemDescription\": \"test\",\n      \"itemNumber\": \"1\",\n      \"units\": 1,\n      \"unitTypeCode\": \"BAGS\",\n      \"packageUnits\": 1,\n      \"packageTypeCode\": \"BOXS\",\n      \"weight\": 1000,\n      \"weightUomCode\": \"LB\",\n      \"height\": 10,\n      \"heightUomCode\": \"IN\",\n      \"length\": 10,\n      \"lengthUomCode\": \"IN\",\n      \"width\": 10,\n      \"WidthUomCode\": \"IN\",\n      \"declaredValueAmount\": 1000,\n      \"DeclaredValueCurrencyCode\": \"USD\",\n      \"isTemperatureControlled\": true,\n      \"temperatureInformation\": {\n        \"high\": 50,\n        \"low\": 30,\n        \"highUom\": \"\",\n        \"lowUom\": \"\"\n      },\n      \"isHazmat\": true,\n      \"hazardousItemInfo\": {\n        \"unNumber\": 10,\n        \"packingGroup\": 10,\n        \"receptacleSize\": 10,\n        \"hazardousClass\": \"hc\",\n        \"numberofReceptacles\": 10,\n        \"unitofMeasure\": \"ibs\",\n        \"containerType\": \"van\",\n        \"hazardousDescription\": \"hd\",\n        \"hazardousPhoneNumber\": \"hp\",\n        \"shippingName\": \"sn\"\n      },\n      \"class\": \"50\"\n    }\n  ]\n}'"
            },
            {
                "lang": "Java",
                "source": "OkHttpClient client = new OkHttpClient().newBuilder()\n  .build();\nMediaType mediaType = MediaType.parse(\"text/plain\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n  \\\"partnerOrderCode\\\": \\\"test1\\\",\\n  \\\"partnerIdentifierCode\\\": \\\"2-1-TESTCHN2\\\",\\n  \\\"equipmentCategoryCode\\\": \\\"VN\\\",\\n  \\\"equipmentTypeCode\\\": \\\"V\\\",\\n  \\\"transportationMode\\\": [\\\"TL\\\"],\\n  \\\"additionalServices\\\": [\\n    {\\n      \\\"code\\\": \\\"Single\\\"\\n    },\\n    {\\n      \\\"code\\\": \\\"Team\\\"\\n    }\\n  ],\\n  \\\"contactInformations\\\": [\\n    {\\n      \\\"firstName\\\": \\\"AXFS8LM2\\\",\\n      \\\"lastName\\\": \\\"ZNH1N22H\\\",\\n      \\\"email\\\": \\\"SK9QM7W3@BDPUWM26.com\\\",\\n      \\\"phoneNumbers\\\": [\\n        {\\n          \\\"type\\\": \\\"Mobile\\\",\\n          \\\"number\\\": \\\"5999213443\\\"\\n        }\\n      ]\\n    }\\n  ],\\n  \\\"applicationSource\\\": \\\"GPAPI\\\",\\n  \\\"stops\\\": [\\n    {\\n      \\\"addressInformations\\\": {\\n        \\\"locationName\\\": \\\"North Ridgeville\\\",\\n        \\\"addressLine1\\\": \\\"North Ridgeville\\\",\\n        \\\"cityName\\\": \\\"North Ridgeville\\\",\\n        \\\"stateCode\\\": \\\"WI\\\",\\n        \\\"country\\\": \\\"USA\\\",\\n        \\\"zipCode\\\": \\\"53706\\\"\\n      },\\n      \\\"type\\\": \\\"Pickup\\\",\\n      \\\"scheduledTimeFrom\\\": \\\"2021-08-17T00:00:00-04:00\\\",\\n      \\\"scheduledTimeTo\\\": \\\"2021-08-18T10:20:00-04:00\\\",\\n      \\\"sequenceNo\\\": 1,\\n      \\\"specialRequirement\\\": [\\n        {\\n          \\\"code\\\": \\\"LFP\\\"\\n        }\\n      ],\\n      \\\"stopReferenceNumbers\\\": [\\n        {\\n          \\\"typeCode\\\": \\\"PO\\\",\\n          \\\"value\\\": \\\"254123\\\"\\n        }\\n      ],\\n      \\\"StopContactInformations\\\": [\\n        {\\n          \\\"firstName\\\": \\\"PickupFName\\\",\\n          \\\"lastName\\\": \\\"\\\",\\n          \\\"email\\\": \\\"PickupFName@test.com\\\",\\n          \\\"PhoneNumbers\\\": [\\n            {\\n              \\\"type\\\": \\\"Mobile\\\",\\n              \\\"number\\\": \\\"2165473876\\\"\\n            }\\n          ],\\n          \\\"isPrimary\\\": false\\n        }\\n      ]\\n    },\\n    {\\n      \\\"addressInformations\\\": {\\n        \\\"locationName\\\": \\\"Chicago\\\",\\n        \\\"addressLine1\\\": \\\"Chicago\\\",\\n        \\\"cityName\\\": \\\"Chicago\\\",\\n        \\\"stateCode\\\": \\\"IL\\\",\\n        \\\"country\\\": \\\"USA\\\",\\n        \\\"zipCode\\\": \\\"60606\\\"\\n      },\\n      \\\"type\\\": \\\"Delivery\\\",\\n      \\\"scheduledTimeFrom\\\": \\\"2021-08-18T10:20:00-04:00\\\",\\n      \\\"scheduledTimeTo\\\": \\\"2021-08-19T10:20:00-04:00\\\",\\n      \\\"sequenceNo\\\": 2,\\n      \\\"specialRequirement\\\": [\\n        {\\n          \\\"code\\\": \\\"APT\\\"\\n        },\\n        {\\n          \\\"code\\\": \\\"AST\\\"\\n        },\\n        {\\n          \\\"code\\\": \\\"DT\\\"\\n        },\\n        {\\n          \\\"code\\\": \\\"TWC\\\"\\n        }\\n      ],\\n      \\\"stopReferenceNumbers\\\": [\\n        {\\n          \\\"typeCode\\\": \\\"PO\\\",\\n          \\\"value\\\": \\\"254123\\\"\\n        }\\n      ],\\n      \\\"StopContactInformations\\\": [\\n        {\\n          \\\"firstName\\\": \\\"DeliveryFName\\\",\\n          \\\"lastName\\\": \\\"\\\",\\n          \\\"email\\\": \\\"DeliveryFName@test.com\\\",\\n          \\\"PhoneNumbers\\\": [\\n            {\\n              \\\"type\\\": \\\"Mobile\\\",\\n              \\\"number\\\": \\\"2132764532\\\"\\n            }\\n          ],\\n          \\\"isPrimary\\\": false\\n        }\\n      ],\\n      \\\"note\\\": null\\n    }\\n  ],\\n  \\\"items\\\": [\\n    {\\n      \\\"productCode\\\": \\\"Paper\\\",\\n      \\\"itemDescription\\\": \\\"test\\\",\\n      \\\"itemNumber\\\": \\\"1\\\",\\n      \\\"units\\\": 1,\\n      \\\"unitTypeCode\\\": \\\"BAGS\\\",\\n      \\\"packageUnits\\\": 1,\\n      \\\"packageTypeCode\\\": \\\"BOXS\\\",\\n      \\\"weight\\\": 1000,\\n      \\\"weightUomCode\\\": \\\"LB\\\",\\n      \\\"height\\\": 10,\\n      \\\"heightUomCode\\\": \\\"IN\\\",\\n      \\\"length\\\": 10,\\n      \\\"lengthUomCode\\\": \\\"IN\\\",\\n      \\\"width\\\": 10,\\n      \\\"WidthUomCode\\\": \\\"IN\\\",\\n      \\\"declaredValueAmount\\\": 1000,\\n      \\\"DeclaredValueCurrencyCode\\\": \\\"USD\\\",\\n      \\\"isTemperatureControlled\\\": true,\\n      \\\"temperatureInformation\\\": {\\n        \\\"high\\\": 50,\\n        \\\"low\\\": 30,\\n        \\\"highUom\\\": \\\"\\\",\\n        \\\"lowUom\\\": \\\"\\\"\\n      },\\n      \\\"isHazmat\\\": true,\\n      \\\"hazardousItemInfo\\\": {\\n        \\\"unNumber\\\": 10,\\n        \\\"packingGroup\\\": 10,\\n        \\\"receptacleSize\\\": 10,\\n        \\\"hazardousClass\\\": \\\"hc\\\",\\n        \\\"numberofReceptacles\\\": 10,\\n        \\\"unitofMeasure\\\": \\\"ibs\\\",\\n        \\\"containerType\\\": \\\"van\\\",\\n        \\\"hazardousDescription\\\": \\\"hd\\\",\\n        \\\"hazardousPhoneNumber\\\": \\\"hp\\\",\\n        \\\"shippingName\\\": \\\"sn\\\"\\n      },\\n      \\\"class\\\": \\\"50\\\"\\n    }\\n  ]\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://api-dev-xpoconnect.xpo.com/quoteAPI/rest/v1/Create\")\n  .method(\"POST\", body)\n  .addHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\")\n  .addHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\")\n  .addHeader(\"Content-Type\", \"text/plain\")\n  .build();\nResponse response = client.newCall(request).execute();"
            },
            {
                "lang": "NodeJS",
                "source": "var request = require('request');\nvar options = {\n  'method': 'POST',\n  'url': 'https://api-dev-xpoconnect.xpo.com/quoteAPI/rest/v1/Create',\n  'headers': {\n    'x-api-key': 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',\n    'xpoauthorization': 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',\n    'Content-Type': 'text/plain'\n  },\n  body: '{\\n  \"partnerOrderCode\": \"test1\",\\n  \"partnerIdentifierCode\": \"2-1-TESTCHN2\",\\n  \"equipmentCategoryCode\": \"VN\",\\n  \"equipmentTypeCode\": \"V\",\\n  \"transportationMode\": [\"TL\"],\\n  \"additionalServices\": [\\n    {\\n      \"code\": \"Single\"\\n    },\\n    {\\n      \"code\": \"Team\"\\n    }\\n  ],\\n  \"contactInformations\": [\\n    {\\n      \"firstName\": \"AXFS8LM2\",\\n      \"lastName\": \"ZNH1N22H\",\\n      \"email\": \"SK9QM7W3@BDPUWM26.com\",\\n      \"phoneNumbers\": [\\n        {\\n          \"type\": \"Mobile\",\\n          \"number\": \"5999213443\"\\n        }\\n      ]\\n    }\\n  ],\\n  \"applicationSource\": \"GPAPI\",\\n  \"stops\": [\\n    {\\n      \"addressInformations\": {\\n        \"locationName\": \"North Ridgeville\",\\n        \"addressLine1\": \"North Ridgeville\",\\n        \"cityName\": \"North Ridgeville\",\\n        \"stateCode\": \"WI\",\\n        \"country\": \"USA\",\\n        \"zipCode\": \"53706\"\\n      },\\n      \"type\": \"Pickup\",\\n      \"scheduledTimeFrom\": \"2021-08-17T00:00:00-04:00\",\\n      \"scheduledTimeTo\": \"2021-08-18T10:20:00-04:00\",\\n      \"sequenceNo\": 1,\\n      \"specialRequirement\": [\\n        {\\n          \"code\": \"LFP\"\\n        }\\n      ],\\n      \"stopReferenceNumbers\": [\\n        {\\n          \"typeCode\": \"PO\",\\n          \"value\": \"254123\"\\n        }\\n      ],\\n      \"StopContactInformations\": [\\n        {\\n          \"firstName\": \"PickupFName\",\\n          \"lastName\": \"\",\\n          \"email\": \"PickupFName@test.com\",\\n          \"PhoneNumbers\": [\\n            {\\n              \"type\": \"Mobile\",\\n              \"number\": \"2165473876\"\\n            }\\n          ],\\n          \"isPrimary\": false\\n        }\\n      ]\\n    },\\n    {\\n      \"addressInformations\": {\\n        \"locationName\": \"Chicago\",\\n        \"addressLine1\": \"Chicago\",\\n        \"cityName\": \"Chicago\",\\n        \"stateCode\": \"IL\",\\n        \"country\": \"USA\",\\n        \"zipCode\": \"60606\"\\n      },\\n      \"type\": \"Delivery\",\\n      \"scheduledTimeFrom\": \"2021-08-18T10:20:00-04:00\",\\n      \"scheduledTimeTo\": \"2021-08-19T10:20:00-04:00\",\\n      \"sequenceNo\": 2,\\n      \"specialRequirement\": [\\n        {\\n          \"code\": \"APT\"\\n        },\\n        {\\n          \"code\": \"AST\"\\n        },\\n        {\\n          \"code\": \"DT\"\\n        },\\n        {\\n          \"code\": \"TWC\"\\n        }\\n      ],\\n      \"stopReferenceNumbers\": [\\n        {\\n          \"typeCode\": \"PO\",\\n          \"value\": \"254123\"\\n        }\\n      ],\\n      \"StopContactInformations\": [\\n        {\\n          \"firstName\": \"DeliveryFName\",\\n          \"lastName\": \"\",\\n          \"email\": \"DeliveryFName@test.com\",\\n          \"PhoneNumbers\": [\\n            {\\n              \"type\": \"Mobile\",\\n              \"number\": \"2132764532\"\\n            }\\n          ],\\n          \"isPrimary\": false\\n        }\\n      ],\\n      \"note\": null\\n    }\\n  ],\\n  \"items\": [\\n    {\\n      \"productCode\": \"Paper\",\\n      \"itemDescription\": \"test\",\\n      \"itemNumber\": \"1\",\\n      \"units\": 1,\\n      \"unitTypeCode\": \"BAGS\",\\n      \"packageUnits\": 1,\\n      \"packageTypeCode\": \"BOXS\",\\n      \"weight\": 1000,\\n      \"weightUomCode\": \"LB\",\\n      \"height\": 10,\\n      \"heightUomCode\": \"IN\",\\n      \"length\": 10,\\n      \"lengthUomCode\": \"IN\",\\n      \"width\": 10,\\n      \"WidthUomCode\": \"IN\",\\n      \"declaredValueAmount\": 1000,\\n      \"DeclaredValueCurrencyCode\": \"USD\",\\n      \"isTemperatureControlled\": true,\\n      \"temperatureInformation\": {\\n        \"high\": 50,\\n        \"low\": 30,\\n        \"highUom\": \"\",\\n        \"lowUom\": \"\"\\n      },\\n      \"isHazmat\": true,\\n      \"hazardousItemInfo\": {\\n        \"unNumber\": 10,\\n        \"packingGroup\": 10,\\n        \"receptacleSize\": 10,\\n        \"hazardousClass\": \"hc\",\\n        \"numberofReceptacles\": 10,\\n        \"unitofMeasure\": \"ibs\",\\n        \"containerType\": \"van\",\\n        \"hazardousDescription\": \"hd\",\\n        \"hazardousPhoneNumber\": \"hp\",\\n        \"shippingName\": \"sn\"\\n      },\\n      \"class\": \"50\"\\n    }\\n  ]\\n}'\n\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
            },
            {
                "lang": "C#",
                "source": "var client = new RestClient(\"https://api-dev-xpoconnect.xpo.com/quoteAPI/rest/v1/Create\");\nclient.Timeout = -1;\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\");\nrequest.AddHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\");\nrequest.AddHeader(\"Content-Type\", \"text/plain\");\nvar body = @\"{\" + \"\\n\" +\n@\"  \"\"partnerOrderCode\"\": \"\"test1\"\",\" + \"\\n\" +\n@\"  \"\"partnerIdentifierCode\"\": \"\"2-1-TESTCHN2\"\",\" + \"\\n\" +\n@\"  \"\"equipmentCategoryCode\"\": \"\"VN\"\",\" + \"\\n\" +\n@\"  \"\"equipmentTypeCode\"\": \"\"V\"\",\" + \"\\n\" +\n@\"  \"\"transportationMode\"\": [\"\"TL\"\"],\" + \"\\n\" +\n@\"  \"\"additionalServices\"\": [\" + \"\\n\" +\n@\"    {\" + \"\\n\" +\n@\"      \"\"code\"\": \"\"Single\"\"\" + \"\\n\" +\n@\"    },\" + \"\\n\" +\n@\"    {\" + \"\\n\" +\n@\"      \"\"code\"\": \"\"Team\"\"\" + \"\\n\" +\n@\"    }\" + \"\\n\" +\n@\"  ],\" + \"\\n\" +\n@\"  \"\"contactInformations\"\": [\" + \"\\n\" +\n@\"    {\" + \"\\n\" +\n@\"      \"\"firstName\"\": \"\"AXFS8LM2\"\",\" + \"\\n\" +\n@\"      \"\"lastName\"\": \"\"ZNH1N22H\"\",\" + \"\\n\" +\n@\"      \"\"email\"\": \"\"SK9QM7W3@BDPUWM26.com\"\",\" + \"\\n\" +\n@\"      \"\"phoneNumbers\"\": [\" + \"\\n\" +\n@\"        {\" + \"\\n\" +\n@\"          \"\"type\"\": \"\"Mobile\"\",\" + \"\\n\" +\n@\"          \"\"number\"\": \"\"5999213443\"\"\" + \"\\n\" +\n@\"        }\" + \"\\n\" +\n@\"      ]\" + \"\\n\" +\n@\"    }\" + \"\\n\" +\n@\"  ],\" + \"\\n\" +\n@\"  \"\"applicationSource\"\": \"\"GPAPI\"\",\" + \"\\n\" +\n@\"  \"\"stops\"\": [\" + \"\\n\" +\n@\"    {\" + \"\\n\" +\n@\"      \"\"addressInformations\"\": {\" + \"\\n\" +\n@\"        \"\"locationName\"\": \"\"North Ridgeville\"\",\" + \"\\n\" +\n@\"        \"\"addressLine1\"\": \"\"North Ridgeville\"\",\" + \"\\n\" +\n@\"        \"\"cityName\"\": \"\"North Ridgeville\"\",\" + \"\\n\" +\n@\"        \"\"stateCode\"\": \"\"WI\"\",\" + \"\\n\" +\n@\"        \"\"country\"\": \"\"USA\"\",\" + \"\\n\" +\n@\"        \"\"zipCode\"\": \"\"53706\"\"\" + \"\\n\" +\n@\"      },\" + \"\\n\" +\n@\"      \"\"type\"\": \"\"Pickup\"\",\" + \"\\n\" +\n@\"      \"\"scheduledTimeFrom\"\": \"\"2021-08-17T00:00:00-04:00\"\",\" + \"\\n\" +\n@\"      \"\"scheduledTimeTo\"\": \"\"2021-08-18T10:20:00-04:00\"\",\" + \"\\n\" +\n@\"      \"\"sequenceNo\"\": 1,\" + \"\\n\" +\n@\"      \"\"specialRequirement\"\": [\" + \"\\n\" +\n@\"        {\" + \"\\n\" +\n@\"          \"\"code\"\": \"\"LFP\"\"\" + \"\\n\" +\n@\"        }\" + \"\\n\" +\n@\"      ],\" + \"\\n\" +\n@\"      \"\"stopReferenceNumbers\"\": [\" + \"\\n\" +\n@\"        {\" + \"\\n\" +\n@\"          \"\"typeCode\"\": \"\"PO\"\",\" + \"\\n\" +\n@\"          \"\"value\"\": \"\"254123\"\"\" + \"\\n\" +\n@\"        }\" + \"\\n\" +\n@\"      ],\" + \"\\n\" +\n@\"      \"\"StopContactInformations\"\": [\" + \"\\n\" +\n@\"        {\" + \"\\n\" +\n@\"          \"\"firstName\"\": \"\"PickupFName\"\",\" + \"\\n\" +\n@\"          \"\"lastName\"\": \"\"\"\",\" + \"\\n\" +\n@\"          \"\"email\"\": \"\"PickupFName@test.com\"\",\" + \"\\n\" +\n@\"          \"\"PhoneNumbers\"\": [\" + \"\\n\" +\n@\"            {\" + \"\\n\" +\n@\"              \"\"type\"\": \"\"Mobile\"\",\" + \"\\n\" +\n@\"              \"\"number\"\": \"\"2165473876\"\"\" + \"\\n\" +\n@\"            }\" + \"\\n\" +\n@\"          ],\" + \"\\n\" +\n@\"          \"\"isPrimary\"\": false\" + \"\\n\" +\n@\"        }\" + \"\\n\" +\n@\"      ]\" + \"\\n\" +\n@\"    },\" + \"\\n\" +\n@\"    {\" + \"\\n\" +\n@\"      \"\"addressInformations\"\": {\" + \"\\n\" +\n@\"        \"\"locationName\"\": \"\"Chicago\"\",\" + \"\\n\" +\n@\"        \"\"addressLine1\"\": \"\"Chicago\"\",\" + \"\\n\" +\n@\"        \"\"cityName\"\": \"\"Chicago\"\",\" + \"\\n\" +\n@\"        \"\"stateCode\"\": \"\"IL\"\",\" + \"\\n\" +\n@\"        \"\"country\"\": \"\"USA\"\",\" + \"\\n\" +\n@\"        \"\"zipCode\"\": \"\"60606\"\"\" + \"\\n\" +\n@\"      },\" + \"\\n\" +\n@\"      \"\"type\"\": \"\"Delivery\"\",\" + \"\\n\" +\n@\"      \"\"scheduledTimeFrom\"\": \"\"2021-08-18T10:20:00-04:00\"\",\" + \"\\n\" +\n@\"      \"\"scheduledTimeTo\"\": \"\"2021-08-19T10:20:00-04:00\"\",\" + \"\\n\" +\n@\"      \"\"sequenceNo\"\": 2,\" + \"\\n\" +\n@\"      \"\"specialRequirement\"\": [\" + \"\\n\" +\n@\"        {\" + \"\\n\" +\n@\"          \"\"code\"\": \"\"APT\"\"\" + \"\\n\" +\n@\"        },\" + \"\\n\" +\n@\"        {\" + \"\\n\" +\n@\"          \"\"code\"\": \"\"AST\"\"\" + \"\\n\" +\n@\"        },\" + \"\\n\" +\n@\"        {\" + \"\\n\" +\n@\"          \"\"code\"\": \"\"DT\"\"\" + \"\\n\" +\n@\"        },\" + \"\\n\" +\n@\"        {\" + \"\\n\" +\n@\"          \"\"code\"\": \"\"TWC\"\"\" + \"\\n\" +\n@\"        }\" + \"\\n\" +\n@\"      ],\" + \"\\n\" +\n@\"      \"\"stopReferenceNumbers\"\": [\" + \"\\n\" +\n@\"        {\" + \"\\n\" +\n@\"          \"\"typeCode\"\": \"\"PO\"\",\" + \"\\n\" +\n@\"          \"\"value\"\": \"\"254123\"\"\" + \"\\n\" +\n@\"        }\" + \"\\n\" +\n@\"      ],\" + \"\\n\" +\n@\"      \"\"StopContactInformations\"\": [\" + \"\\n\" +\n@\"        {\" + \"\\n\" +\n@\"          \"\"firstName\"\": \"\"DeliveryFName\"\",\" + \"\\n\" +\n@\"          \"\"lastName\"\": \"\"\"\",\" + \"\\n\" +\n@\"          \"\"email\"\": \"\"DeliveryFName@test.com\"\",\" + \"\\n\" +\n@\"          \"\"PhoneNumbers\"\": [\" + \"\\n\" +\n@\"            {\" + \"\\n\" +\n@\"              \"\"type\"\": \"\"Mobile\"\",\" + \"\\n\" +\n@\"              \"\"number\"\": \"\"2132764532\"\"\" + \"\\n\" +\n@\"            }\" + \"\\n\" +\n@\"          ],\" + \"\\n\" +\n@\"          \"\"isPrimary\"\": false\" + \"\\n\" +\n@\"        }\" + \"\\n\" +\n@\"      ],\" + \"\\n\" +\n@\"      \"\"note\"\": null\" + \"\\n\" +\n@\"    }\" + \"\\n\" +\n@\"  ],\" + \"\\n\" +\n@\"  \"\"items\"\": [\" + \"\\n\" +\n@\"    {\" + \"\\n\" +\n@\"      \"\"productCode\"\": \"\"Paper\"\",\" + \"\\n\" +\n@\"      \"\"itemDescription\"\": \"\"test\"\",\" + \"\\n\" +\n@\"      \"\"itemNumber\"\": \"\"1\"\",\" + \"\\n\" +\n@\"      \"\"units\"\": 1,\" + \"\\n\" +\n@\"      \"\"unitTypeCode\"\": \"\"BAGS\"\",\" + \"\\n\" +\n@\"      \"\"packageUnits\"\": 1,\" + \"\\n\" +\n@\"      \"\"packageTypeCode\"\": \"\"BOXS\"\",\" + \"\\n\" +\n@\"      \"\"weight\"\": 1000,\" + \"\\n\" +\n@\"      \"\"weightUomCode\"\": \"\"LB\"\",\" + \"\\n\" +\n@\"      \"\"height\"\": 10,\" + \"\\n\" +\n@\"      \"\"heightUomCode\"\": \"\"IN\"\",\" + \"\\n\" +\n@\"      \"\"length\"\": 10,\" + \"\\n\" +\n@\"      \"\"lengthUomCode\"\": \"\"IN\"\",\" + \"\\n\" +\n@\"      \"\"width\"\": 10,\" + \"\\n\" +\n@\"      \"\"WidthUomCode\"\": \"\"IN\"\",\" + \"\\n\" +\n@\"      \"\"declaredValueAmount\"\": 1000,\" + \"\\n\" +\n@\"      \"\"DeclaredValueCurrencyCode\"\": \"\"USD\"\",\" + \"\\n\" +\n@\"      \"\"isTemperatureControlled\"\": true,\" + \"\\n\" +\n@\"      \"\"temperatureInformation\"\": {\" + \"\\n\" +\n@\"        \"\"high\"\": 50,\" + \"\\n\" +\n@\"        \"\"low\"\": 30,\" + \"\\n\" +\n@\"        \"\"highUom\"\": \"\"\"\",\" + \"\\n\" +\n@\"        \"\"lowUom\"\": \"\"\"\"\" + \"\\n\" +\n@\"      },\" + \"\\n\" +\n@\"      \"\"isHazmat\"\": true,\" + \"\\n\" +\n@\"      \"\"hazardousItemInfo\"\": {\" + \"\\n\" +\n@\"        \"\"unNumber\"\": 10,\" + \"\\n\" +\n@\"        \"\"packingGroup\"\": 10,\" + \"\\n\" +\n@\"        \"\"receptacleSize\"\": 10,\" + \"\\n\" +\n@\"        \"\"hazardousClass\"\": \"\"hc\"\",\" + \"\\n\" +\n@\"        \"\"numberofReceptacles\"\": 10,\" + \"\\n\" +\n@\"        \"\"unitofMeasure\"\": \"\"ibs\"\",\" + \"\\n\" +\n@\"        \"\"containerType\"\": \"\"van\"\",\" + \"\\n\" +\n@\"        \"\"hazardousDescription\"\": \"\"hd\"\",\" + \"\\n\" +\n@\"        \"\"hazardousPhoneNumber\"\": \"\"hp\"\",\" + \"\\n\" +\n@\"        \"\"shippingName\"\": \"\"sn\"\"\" + \"\\n\" +\n@\"      },\" + \"\\n\" +\n@\"      \"\"class\"\": \"\"50\"\"\" + \"\\n\" +\n@\"    }\" + \"\\n\" +\n@\"  ]\" + \"\\n\" +\n@\"}\";\nrequest.AddParameter(\"text/plain\", body,  ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);\nConsole.WriteLine(response.Content);"
            }
        ],
        "responses": {
          "200": {
            "description": "Request successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quoteresponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error401"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "404": {
            "description": "Error 404 Unknown operation. Please contact XPO representative."
          }
        }
      }
    },
    "/quoteAPI/rest/v1/quotes/{masterQuoteId}": {
      "get": {
        "description": "Allows partner to get all quotes details by providing MasterQuoteId.\n\n User must provide valid API Key and token as header parameter and {masterQuoteId} as url path parameter to get Quote details.",
        "operationId": "Quotes by Master Quote Id",
        "security": [
          {
            "api_key": [],
            "OAuth": []
          }
        ],
        "tags": [
          "Quotes"
        ],
        "parameters": [
          {
            "required": true,
            "in": "header",
            "description": "Api Key as provided by XPO.",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "header",
            "description": "Valid bearer token generated using Token API.",
            "name": "xpoauthorization",
            "schema": {
              "type": "JWT token"
            }
          },
          {
            "required": true,
            "in": "path",
            "description": "Master Quote Id.",
            "name": "{masterQuoteId}",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl --location --request GET 'https:\/\/api-uat-xpoconnect.xpo.com\/quoteAPI\/rest\/v1\/quotes\/72957' \\\r\n--header 'x-api-key: XXXXXXXXXXXXXXXXXXXXXXXXXXX' \\\r\n--header 'xpoauthorization: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'"
          },
          {
            "lang": "Java",
            "source": "OkHttpClient client = new OkHttpClient().newBuilder()\r\n  .build();\r\nRequest request = new Request.Builder()\r\n  .url(\"https:\/\/api-uat-xpoconnect.xpo.com\/quoteAPI\/rest\/v1\/quotes\/72957?\")\r\n  .method(\"GET\", null)\r\n  .addHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\")\r\n  .addHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\")\r\n  .build();\r\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "NodeJS",
            "source": "var request = require('request');\r\nvar options = {\r\n  'method': 'GET',\r\n  'url': 'https:\/\/api-uat-xpoconnect.xpo.com\/quoteAPI\/rest\/v1\/quotes\/72957',\r\n  'headers': {\r\n    'x-api-key': 'XXXXXXXXXXXXXXXXXXXXXXXXXX',\r\n    'xpoauthorization': 'XXXXXXXXXXXXXXXXXXXXXXXX'\r\n  }\r\n};\r\nrequest(options, function (error, response) { \r\n  if (error) throw new Error(error);\r\n  console.log(response.body);\r\n});\r\n"
          },
          {
            "lang": "C#",
            "source": "var client = new RestClient(\"https:\/\/api-uat-xpoconnect.xpo.com\/quoteAPI\/rest\/v1\/quotes\/72957\");\r\nclient.Timeout = -1;\r\nvar request = new RestRequest(Method.GET);\r\nrequest.AddHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\");\r\nrequest.AddHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\");\r\nIRestResponse response = client.Execute(request);\r\nConsole.WriteLine(response.Content);"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getquoteresponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error401"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "404": {
            "description": "Error 404 Unknown operation. Please contact XPO representative."
          }
        }
      }
    },
    "/quoteAPI/rest/v1/quote/{quoteId}": {
      "get": {
        "description": "Allows partner to get quote details by providing specific QuoteId.\n\n User must provide valid API Key and token as header parameter and {quoteId} as url path parameter to get Quote details.",
        "operationId": "Quote by Quote Id",
        "security": [
          {
            "api_key": [],
            "OAuth": []
          }
        ],
        "tags": [
          "Quotes"
        ],
        "parameters": [
          {
            "required": true,
            "in": "header",
            "description": "Api Key as provided by XPO.",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "header",
            "description": "Valid bearer token generated using Token API.",
            "name": "xpoauthorization",
            "schema": {
              "type": "JWT token"
            }
          },
          {
            "required": true,
            "in": "path",
            "description": "Quote Id.",
            "name": "{quoteId}",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl --location --request GET 'https:\/\/api-uat-xpoconnect.xpo.com\/quoteAPI\/rest\/v1\/quote\/0000034834' \\\r\n--header 'x-api-key: XXXXXXXXXXXXXXXXXXXXXX' \\\r\n--header 'xpoauthorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'"
          },
          {
            "lang": "Java",
            "source": "OkHttpClient client = new OkHttpClient().newBuilder()\r\n  .build();\r\nRequest request = new Request.Builder()\r\n  .url(\"https:\/\/api-uat-xpoconnect.xpo.com\/quoteAPI\/rest\/v1\/quote\/0000034834\")\r\n  .method(\"GET\", null)\r\n  .addHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXXX\")\r\n  .addHeader(\"xpoauthorization\", \"Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\")\r\n  .build();\r\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "NodeJS",
            "source": "var request = require('request');\r\nvar options = {\r\n  'method': 'GET',\r\n  'url': 'https:\/\/api-uat-xpoconnect.xpo.com\/quoteAPI\/rest\/v1\/quote\/0000034834',\r\n  'headers': {\r\n    'x-api-key': 'XXXXXXXXXXXXXXXXXXXXXXXXXXXX',\r\n    'xpoauthorization': 'Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'\r\n  }\r\n};\r\nrequest(options, function (error, response) { \r\n  if (error) throw new Error(error);\r\n  console.log(response.body);\r\n});\r\n"
          },
          {
            "lang": "C#",
            "source": "var client = new RestClient(\"https:\/\/api-uat-xpoconnect.xpo.com\/quoteAPI\/rest\/v1\/quote\/0000034834\");\r\nclient.Timeout = -1;\r\nvar request = new RestRequest(Method.GET);\r\nrequest.AddHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXX\");\r\nrequest.AddHeader(\"xpoauthorization\", \"Bearer XXXXXXXXXXXXXXXXXXXXXXXXX\");\r\nIRestResponse response = client.Execute(request);\r\nConsole.WriteLine(response.Content);"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getquoteresponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error401"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "404": {
            "description": "Error 404 Unknown operation. Please contact XPO representative."
          }
        }
      }
    },
    "/quoteAPI/rest/v1/ConvertToOrder": {
      "post": {
        "description": "Convert Quote to Order allows you to take a previously created quote and place it as an active order.\n\n In order to convert a quote to an order, you will need to provide a valid API key and token in the header parameter, and the quote details in the request payload.",
        "operationId": "Convert Quote To Order",
        "security": [
          {
            "api_key": [],
            "OAuth": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "required": true,
            "in": "header",
            "description": "Api Key as provided by XPO.",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "header",
            "description": "Valid bearer token generated using Token API.",
            "name": "xpoauthorization",
            "schema": {
              "type": "JWT token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/convertquoterequest"
              }
            }
          }
        },
        "x-code-samples": [
            {
                "lang": "Curl",
                "source": "curl --location --request POST 'https://api-dev-xpoconnect.xpo.com/quoteAPI/rest/v1/ConvertToOrder' --header 'x-api-key: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' --header 'xpoauthorization: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' --header 'Content-Type: text/plain' --data-raw '{\n    \"accountId\": null,\n    \"applicationSource\": \"GPAPI\",\n    \"contractId\": null,\n    \"crossSellOrderNumber\": \"\",\n    \"emailBol\": true,\n    \"equipmentCategoryCode\": \"VN\",\n    \"equipmentTypeCode\": \"V\",\n    \"invoiceDate\": null,\n    \"invoiceNumber\": null,\n    \"isExpedited\": false,\n    \"isPartOfConsolidatedShipment\": false,\n    \"isXpoManaged\": true,\n    \"items\": [\n        {\n            \"classCode\": \"50\",\n            \"declaredValue\": 1000,\n            \"declaredValueAmount\": 1000,\n            \"declaredValueCurrencyCode\": \"USD\",\n            \"hazardousItemInfo\": {\n                \"containerType\": \"van\",\n                \"hazardousClass\": \"hc\",\n                \"hazardousDescription\": \"hd\",\n                \"hazardousPhoneNumber\": \"hp\",\n                \"numberofReceptacles\": 10,\n                \"packingGroup\": 10,\n                \"receptacleSize\": 10,\n                \"shippingName\": \"sn\",\n                \"unNumber\": 1111,\n                \"unitofMeasure\": \"ibs\"\n            },\n            \"height\": 10,\n            \"heightUomCode\": \"IN\",\n            \"htscode\": null,\n            \"isHazmat\": true,\n            \"isOversized\": null,\n            \"isStackable\": null,\n            \"isTemperatureControlled\": true,\n            \"itemCode\": \"Paper\",\n            \"itemDescription\": \"paper-123\",\n            \"itemNotes\": null,\n            \"itemNumber\": \"100056005\",\n            \"itemPrice\": 20.5,\n            \"itemPriceCurrencyCode\": \"USD\",\n            \"itemReferenceNumbers\": null,\n            \"itemServices\": null,\n            \"length\": 10,\n            \"lengthUomCode\": \"IN\",\n            \"nmfcCode\": \"\",\n            \"packageTypeCode\": \"BOXS\",\n            \"packageUnits\": 1,\n            \"purchaseOrderNumber\": null,\n            \"sku\": \"\",\n            \"temperatureInformation\": {\n                \"high\": 50,\n                \"highUom\": null,\n                \"low\": 30,\n                \"lowUom\": null\n            },\n            \"unitTypeCode\": \"BAGS\",\n            \"units\": 1,\n            \"volume\": 868.0386,\n            \"volumeUomCode\": \"CUFT\",\n            \"weight\": 1000,\n            \"weightUomCode\": \"LB\",\n            \"width\": 10,\n            \"widthUomCode\": \"IN\",\n            \"DeclaredValueCurrencyCode\": \"USD\",\n            \"productCode\": \"Paper\"\n        }\n    ],\n    \"orderContactInformations\": [\n        {\n            \"email\": \"devcustomer@gmail.com\",\n            \"firstName\": \"TestData\",\n            \"isPrimary\": true,\n            \"lastName\": \"Lname\",\n            \"phoneNumbers\": [\n                {\n                    \"number\": \"6606546565\",\n                    \"type\": \"Mobile\"\n                }\n            ],\n            \"title\": \"Mr\"\n        }\n    ],\n    \"orderDate\": \"2021-08-10T06:21:09.31\",\n    \"orderDocuments\": [\n        {\n            \"key\": \"0000040VD7CES000000000\",\n            \"name\": \"28-FEB-2019.xlsx\",\n            \"type\": \"30\"\n        }\n    ],\n    \"orderId\": 0,\n    \"orderNotes\": [\n        {\n            \"type\": \"GENERAL\",\n            \"value\": \"TESTING API DO NOT DISPATCH\"\n        }\n    ],\n    \"orderNumber\": null,\n    \"orderReferenceNumbers\": [\n        {\n            \"code\": null,\n            \"type\": \"BM\",\n            \"value\": \"Test2021061701\"\n        }\n    ],\n    \"orderServices\": [\n        {\n            \"code\": \"12151\",\n            \"description\": \"Base delivery charge.\",\n            \"name\": \"Room of Choice Delivery\",\n            \"quantity\": 1,\n            \"unitOfMeasure\": \"Items Hauled Away\"\n        }\n    ],\n    \"ordersOnConsolidatedShipment\": 1,\n    \"partnerIdentifierCode\": \"2-1-TESTCHN2\",\n    \"paymentMethod\": null,\n    \"quoteId\": \"288945\",\n    \"requestedDeliveryDate\": \"11/11/2021\",\n    \"salesReps\": [\n        {\n            \"email\": \"devcustomer@gmail.com\",\n            \"firstName\": \"TestData\",\n            \"isPrimary\": false,\n            \"lastName\": \"Lname\",\n            \"phoneNumbers\": [\n                {\n                    \"number\": \"6606546565\",\n                    \"type\": \"Mobile\"\n                }\n            ],\n            \"title\": \"\"\n        }\n    ],\n    \"shipmentId\": \"1234\",\n    \"specialRequirements\": [\n        {\n            \"code\": \"Single\"\n        }\n    ],\n    \"stops\": [\n        {\n            \"addressInformation\": {\n                \"addressLine1\": \"1234 Warehouse\",\n                \"addressLine2\": \"\",\n                \"cityName\": \"North Ridgeville\",\n                \"countryCode\": \"USA\",\n                \"geoCodes\": {\n                    \"latitude\": null,\n                    \"longitude\": null,\n                    \"s2cellId\": null\n                },\n                \"ianaTimeZone\": null,\n                \"locationId\": null,\n                \"locationName\": \"North Ridgeville\",\n                \"locationType\": \"Warehouse\",\n                \"region\": null,\n                \"stateCode\": \"OH\",\n                \"utcOffset\": \"-04:00:00\",\n                \"zipCode\": \"44039\"\n            },\n            \"isAppointmentConfirmed\": false,\n            \"isAppointmentRequired\": false,\n            \"scheduledTimeFrom\": \"10/12/2021\",\n            \"scheduledTimeTo\": \"10/12/2021\",\n            \"sequenceNo\": 1,\n            \"specialRequirement\": [\n                {\n                    \"code\": \"LFP\"\n                }\n            ],\n            \"stopContactInformations\": [\n                {\n                    \"email\": \"devcustomer@gmail.com\",\n                    \"firstName\": \"TestData\",\n                    \"isPrimary\": true,\n                    \"lastName\": \"Lname\",\n                    \"phoneNumbers\": [\n                        {\n                            \"number\": \"7894561230\",\n                            \"type\": \"Mobile\"\n                        }\n                    ],\n                    \"title\": \"\"\n                }\n            ],\n            \"stopNotes\": null,\n            \"stopReferenceNumbers\": null,\n            \"type\": 1\n        },\n        {\n            \"addressInformation\": {\n                \"addressLine1\": \"1232 Warehouse\",\n                \"addressLine2\": \"\",\n                \"cityName\": \"Chicago\",\n                \"countryCode\": \"USA\",\n                \"geoCodes\": {\n                    \"latitude\": null,\n                    \"longitude\": null,\n                    \"s2cellId\": null\n                },\n                \"ianaTimeZone\": null,\n                \"locationId\": null,\n                \"locationName\": \"Chicago\",\n                \"locationType\": \"Warehouse\",\n                \"region\": null,\n                \"stateCode\": \"IL\",\n                \"utcOffset\": \"-04:00:00\",\n                \"zipCode\": \"60606\"\n            },\n            \"isAppointmentConfirmed\": false,\n            \"isAppointmentRequired\": false,\n            \"scheduledTimeFrom\": \"11/11/2021\",\n            \"scheduledTimeTo\": \"11/11/2021\",\n            \"sequenceNo\": 2,\n            \"specialRequirement\": [\n                {\n                    \"code\": \"APT\"\n                },\n                {\n                    \"code\": \"AST\"\n                },\n                {\n                    \"code\": \"DT\"\n                },\n                {\n                    \"code\": \"TWC\"\n                }\n            ],\n            \"stopContactInformations\": [\n                {\n                    \"email\": \"devcustomer@gmail.com\",\n                    \"firstName\": \"TestData\",\n                    \"isPrimary\": true,\n                    \"lastName\": \"Lname\",\n                    \"phoneNumbers\": [\n                        {\n                            \"number\": \"3312244433\",\n                            \"type\": \"Mobile\"\n                        }\n                    ],\n                    \"title\": \"\"\n                }\n            ],\n            \"stopNotes\": null,\n            \"stopReferenceNumbers\": null,\n            \"type\": 3\n        }\n    ],\n    \"transportationMode\": \"TL\"\n}'"
            },
            {
                "lang": "Java",
                "source": "OkHttpClient client = new OkHttpClient().newBuilder()\n  .build();\nMediaType mediaType = MediaType.parse(\"text/plain\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"accountId\\\": null,\\n    \\\"applicationSource\\\": \\\"GPAPI\\\",\\n    \\\"contractId\\\": null,\\n    \\\"crossSellOrderNumber\\\": \\\"\\\",\\n    \\\"emailBol\\\": true,\\n    \\\"equipmentCategoryCode\\\": \\\"VN\\\",\\n    \\\"equipmentTypeCode\\\": \\\"V\\\",\\n    \\\"invoiceDate\\\": null,\\n    \\\"invoiceNumber\\\": null,\\n    \\\"isExpedited\\\": false,\\n    \\\"isPartOfConsolidatedShipment\\\": false,\\n    \\\"isXpoManaged\\\": true,\\n    \\\"items\\\": [\\n        {\\n            \\\"classCode\\\": \\\"50\\\",\\n            \\\"declaredValue\\\": 1000,\\n            \\\"declaredValueAmount\\\": 1000,\\n            \\\"declaredValueCurrencyCode\\\": \\\"USD\\\",\\n            \\\"hazardousItemInfo\\\": {\\n                \\\"containerType\\\": \\\"van\\\",\\n                \\\"hazardousClass\\\": \\\"hc\\\",\\n                \\\"hazardousDescription\\\": \\\"hd\\\",\\n                \\\"hazardousPhoneNumber\\\": \\\"hp\\\",\\n                \\\"numberofReceptacles\\\": 10,\\n                \\\"packingGroup\\\": 10,\\n                \\\"receptacleSize\\\": 10,\\n                \\\"shippingName\\\": \\\"sn\\\",\\n                \\\"unNumber\\\": 1111,\\n                \\\"unitofMeasure\\\": \\\"ibs\\\"\\n            },\\n            \\\"height\\\": 10,\\n            \\\"heightUomCode\\\": \\\"IN\\\",\\n            \\\"htscode\\\": null,\\n            \\\"isHazmat\\\": true,\\n            \\\"isOversized\\\": null,\\n            \\\"isStackable\\\": null,\\n            \\\"isTemperatureControlled\\\": true,\\n            \\\"itemCode\\\": \\\"Paper\\\",\\n            \\\"itemDescription\\\": \\\"paper-123\\\",\\n            \\\"itemNotes\\\": null,\\n            \\\"itemNumber\\\": \\\"100056005\\\",\\n            \\\"itemPrice\\\": 20.5,\\n            \\\"itemPriceCurrencyCode\\\": \\\"USD\\\",\\n            \\\"itemReferenceNumbers\\\": null,\\n            \\\"itemServices\\\": null,\\n            \\\"length\\\": 10,\\n            \\\"lengthUomCode\\\": \\\"IN\\\",\\n            \\\"nmfcCode\\\": \\\"\\\",\\n            \\\"packageTypeCode\\\": \\\"BOXS\\\",\\n            \\\"packageUnits\\\": 1,\\n            \\\"purchaseOrderNumber\\\": null,\\n            \\\"sku\\\": \\\"\\\",\\n            \\\"temperatureInformation\\\": {\\n                \\\"high\\\": 50,\\n                \\\"highUom\\\": null,\\n                \\\"low\\\": 30,\\n                \\\"lowUom\\\": null\\n            },\\n            \\\"unitTypeCode\\\": \\\"BAGS\\\",\\n            \\\"units\\\": 1,\\n            \\\"volume\\\": 868.0386,\\n            \\\"volumeUomCode\\\": \\\"CUFT\\\",\\n            \\\"weight\\\": 1000,\\n            \\\"weightUomCode\\\": \\\"LB\\\",\\n            \\\"width\\\": 10,\\n            \\\"widthUomCode\\\": \\\"IN\\\",\\n            \\\"DeclaredValueCurrencyCode\\\": \\\"USD\\\",\\n            \\\"productCode\\\": \\\"Paper\\\"\\n        }\\n    ],\\n    \\\"orderContactInformations\\\": [\\n        {\\n            \\\"email\\\": \\\"devcustomer@gmail.com\\\",\\n            \\\"firstName\\\": \\\"TestData\\\",\\n            \\\"isPrimary\\\": true,\\n            \\\"lastName\\\": \\\"Lname\\\",\\n            \\\"phoneNumbers\\\": [\\n                {\\n                    \\\"number\\\": \\\"6606546565\\\",\\n                    \\\"type\\\": \\\"Mobile\\\"\\n                }\\n            ],\\n            \\\"title\\\": \\\"Mr\\\"\\n        }\\n    ],\\n    \\\"orderDate\\\": \\\"2021-08-10T06:21:09.31\\\",\\n    \\\"orderDocuments\\\": [\\n        {\\n            \\\"key\\\": \\\"0000040VD7CES000000000\\\",\\n            \\\"name\\\": \\\"28-FEB-2019.xlsx\\\",\\n            \\\"type\\\": \\\"30\\\"\\n        }\\n    ],\\n    \\\"orderId\\\": 0,\\n    \\\"orderNotes\\\": [\\n        {\\n            \\\"type\\\": \\\"GENERAL\\\",\\n            \\\"value\\\": \\\"TESTING API DO NOT DISPATCH\\\"\\n        }\\n    ],\\n    \\\"orderNumber\\\": null,\\n    \\\"orderReferenceNumbers\\\": [\\n        {\\n            \\\"code\\\": null,\\n            \\\"type\\\": \\\"BM\\\",\\n            \\\"value\\\": \\\"Test2021061701\\\"\\n        }\\n    ],\\n    \\\"orderServices\\\": [\\n        {\\n            \\\"code\\\": \\\"12151\\\",\\n            \\\"description\\\": \\\"Base delivery charge.\\\",\\n            \\\"name\\\": \\\"Room of Choice Delivery\\\",\\n            \\\"quantity\\\": 1,\\n            \\\"unitOfMeasure\\\": \\\"Items Hauled Away\\\"\\n        }\\n    ],\\n    \\\"ordersOnConsolidatedShipment\\\": 1,\\n    \\\"partnerIdentifierCode\\\": \\\"2-1-TESTCHN2\\\",\\n    \\\"paymentMethod\\\": null,\\n    \\\"quoteId\\\": \\\"288945\\\",\\n    \\\"requestedDeliveryDate\\\": \\\"11/11/2021\\\",\\n    \\\"salesReps\\\": [\\n        {\\n            \\\"email\\\": \\\"devcustomer@gmail.com\\\",\\n            \\\"firstName\\\": \\\"TestData\\\",\\n            \\\"isPrimary\\\": false,\\n            \\\"lastName\\\": \\\"Lname\\\",\\n            \\\"phoneNumbers\\\": [\\n                {\\n                    \\\"number\\\": \\\"6606546565\\\",\\n                    \\\"type\\\": \\\"Mobile\\\"\\n                }\\n            ],\\n            \\\"title\\\": \\\"\\\"\\n        }\\n    ],\\n    \\\"shipmentId\\\": \\\"1234\\\",\\n    \\\"specialRequirements\\\": [\\n        {\\n            \\\"code\\\": \\\"Single\\\"\\n        }\\n    ],\\n    \\\"stops\\\": [\\n        {\\n            \\\"addressInformation\\\": {\\n                \\\"addressLine1\\\": \\\"1234 Warehouse\\\",\\n                \\\"addressLine2\\\": \\\"\\\",\\n                \\\"cityName\\\": \\\"North Ridgeville\\\",\\n                \\\"countryCode\\\": \\\"USA\\\",\\n                \\\"geoCodes\\\": {\\n                    \\\"latitude\\\": null,\\n                    \\\"longitude\\\": null,\\n                    \\\"s2cellId\\\": null\\n                },\\n                \\\"ianaTimeZone\\\": null,\\n                \\\"locationId\\\": null,\\n                \\\"locationName\\\": \\\"North Ridgeville\\\",\\n                \\\"locationType\\\": \\\"Warehouse\\\",\\n                \\\"region\\\": null,\\n                \\\"stateCode\\\": \\\"OH\\\",\\n                \\\"utcOffset\\\": \\\"-04:00:00\\\",\\n                \\\"zipCode\\\": \\\"44039\\\"\\n            },\\n            \\\"isAppointmentConfirmed\\\": false,\\n            \\\"isAppointmentRequired\\\": false,\\n            \\\"scheduledTimeFrom\\\": \\\"10/12/2021\\\",\\n            \\\"scheduledTimeTo\\\": \\\"10/12/2021\\\",\\n            \\\"sequenceNo\\\": 1,\\n            \\\"specialRequirement\\\": [\\n                {\\n                    \\\"code\\\": \\\"LFP\\\"\\n                }\\n            ],\\n            \\\"stopContactInformations\\\": [\\n                {\\n                    \\\"email\\\": \\\"devcustomer@gmail.com\\\",\\n                    \\\"firstName\\\": \\\"TestData\\\",\\n                    \\\"isPrimary\\\": true,\\n                    \\\"lastName\\\": \\\"Lname\\\",\\n                    \\\"phoneNumbers\\\": [\\n                        {\\n                            \\\"number\\\": \\\"7894561230\\\",\\n                            \\\"type\\\": \\\"Mobile\\\"\\n                        }\\n                    ],\\n                    \\\"title\\\": \\\"\\\"\\n                }\\n            ],\\n            \\\"stopNotes\\\": null,\\n            \\\"stopReferenceNumbers\\\": null,\\n            \\\"type\\\": 1\\n        },\\n        {\\n            \\\"addressInformation\\\": {\\n                \\\"addressLine1\\\": \\\"1232 Warehouse\\\",\\n                \\\"addressLine2\\\": \\\"\\\",\\n                \\\"cityName\\\": \\\"Chicago\\\",\\n                \\\"countryCode\\\": \\\"USA\\\",\\n                \\\"geoCodes\\\": {\\n                    \\\"latitude\\\": null,\\n                    \\\"longitude\\\": null,\\n                    \\\"s2cellId\\\": null\\n                },\\n                \\\"ianaTimeZone\\\": null,\\n                \\\"locationId\\\": null,\\n                \\\"locationName\\\": \\\"Chicago\\\",\\n                \\\"locationType\\\": \\\"Warehouse\\\",\\n                \\\"region\\\": null,\\n                \\\"stateCode\\\": \\\"IL\\\",\\n                \\\"utcOffset\\\": \\\"-04:00:00\\\",\\n                \\\"zipCode\\\": \\\"60606\\\"\\n            },\\n            \\\"isAppointmentConfirmed\\\": false,\\n            \\\"isAppointmentRequired\\\": false,\\n            \\\"scheduledTimeFrom\\\": \\\"11/11/2021\\\",\\n            \\\"scheduledTimeTo\\\": \\\"11/11/2021\\\",\\n            \\\"sequenceNo\\\": 2,\\n            \\\"specialRequirement\\\": [\\n                {\\n                    \\\"code\\\": \\\"APT\\\"\\n                },\\n                {\\n                    \\\"code\\\": \\\"AST\\\"\\n                },\\n                {\\n                    \\\"code\\\": \\\"DT\\\"\\n                },\\n                {\\n                    \\\"code\\\": \\\"TWC\\\"\\n                }\\n            ],\\n            \\\"stopContactInformations\\\": [\\n                {\\n                    \\\"email\\\": \\\"devcustomer@gmail.com\\\",\\n                    \\\"firstName\\\": \\\"TestData\\\",\\n                    \\\"isPrimary\\\": true,\\n                    \\\"lastName\\\": \\\"Lname\\\",\\n                    \\\"phoneNumbers\\\": [\\n                        {\\n                            \\\"number\\\": \\\"3312244433\\\",\\n                            \\\"type\\\": \\\"Mobile\\\"\\n                        }\\n                    ],\\n                    \\\"title\\\": \\\"\\\"\\n                }\\n            ],\\n            \\\"stopNotes\\\": null,\\n            \\\"stopReferenceNumbers\\\": null,\\n            \\\"type\\\": 3\\n        }\\n    ],\\n    \\\"transportationMode\\\": \\\"TL\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://api-dev-xpoconnect.xpo.com/quoteAPI/rest/v1/ConvertToOrder\")\n  .method(\"POST\", body)\n  .addHeader(\"x-api-key\", \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n  .addHeader(\"xpoauthorization\", \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n  .addHeader(\"Content-Type\", \"text/plain\")\n  .build();\nResponse response = client.newCall(request).execute();"
            },
            {
                "lang": "NodeJS",
                "source": "var request = require('request');\nvar options = {\n  'method': 'POST',\n  'url': 'https://api-dev-xpoconnect.xpo.com/quoteAPI/rest/v1/ConvertToOrder',\n  'headers': {\n    'x-api-key': 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',\n    'xpoauthorization': 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',\n    'Content-Type': 'text/plain'\n  },\n  body: '{\\n    \"accountId\": null,\\n    \"applicationSource\": \"GPAPI\",\\n    \"contractId\": null,\\n    \"crossSellOrderNumber\": \"\",\\n    \"emailBol\": true,\\n    \"equipmentCategoryCode\": \"VN\",\\n    \"equipmentTypeCode\": \"V\",\\n    \"invoiceDate\": null,\\n    \"invoiceNumber\": null,\\n    \"isExpedited\": false,\\n    \"isPartOfConsolidatedShipment\": false,\\n    \"isXpoManaged\": true,\\n    \"items\": [\\n        {\\n            \"classCode\": \"50\",\\n            \"declaredValue\": 1000,\\n            \"declaredValueAmount\": 1000,\\n            \"declaredValueCurrencyCode\": \"USD\",\\n            \"hazardousItemInfo\": {\\n                \"containerType\": \"van\",\\n                \"hazardousClass\": \"hc\",\\n                \"hazardousDescription\": \"hd\",\\n                \"hazardousPhoneNumber\": \"hp\",\\n                \"numberofReceptacles\": 10,\\n                \"packingGroup\": 10,\\n                \"receptacleSize\": 10,\\n                \"shippingName\": \"sn\",\\n                \"unNumber\": 1111,\\n                \"unitofMeasure\": \"ibs\"\\n            },\\n            \"height\": 10,\\n            \"heightUomCode\": \"IN\",\\n            \"htscode\": null,\\n            \"isHazmat\": true,\\n            \"isOversized\": null,\\n            \"isStackable\": null,\\n            \"isTemperatureControlled\": true,\\n            \"itemCode\": \"Paper\",\\n            \"itemDescription\": \"paper-123\",\\n            \"itemNotes\": null,\\n            \"itemNumber\": \"100056005\",\\n            \"itemPrice\": 20.5,\\n            \"itemPriceCurrencyCode\": \"USD\",\\n            \"itemReferenceNumbers\": null,\\n            \"itemServices\": null,\\n            \"length\": 10,\\n            \"lengthUomCode\": \"IN\",\\n            \"nmfcCode\": \"\",\\n            \"packageTypeCode\": \"BOXS\",\\n            \"packageUnits\": 1,\\n            \"purchaseOrderNumber\": null,\\n            \"sku\": \"\",\\n            \"temperatureInformation\": {\\n                \"high\": 50,\\n                \"highUom\": null,\\n                \"low\": 30,\\n                \"lowUom\": null\\n            },\\n            \"unitTypeCode\": \"BAGS\",\\n            \"units\": 1,\\n            \"volume\": 868.0386,\\n            \"volumeUomCode\": \"CUFT\",\\n            \"weight\": 1000,\\n            \"weightUomCode\": \"LB\",\\n            \"width\": 10,\\n            \"widthUomCode\": \"IN\",\\n            \"DeclaredValueCurrencyCode\": \"USD\",\\n            \"productCode\": \"Paper\"\\n        }\\n    ],\\n    \"orderContactInformations\": [\\n        {\\n            \"email\": \"devcustomer@gmail.com\",\\n            \"firstName\": \"TestData\",\\n            \"isPrimary\": true,\\n            \"lastName\": \"Lname\",\\n            \"phoneNumbers\": [\\n                {\\n                    \"number\": \"6606546565\",\\n                    \"type\": \"Mobile\"\\n                }\\n            ],\\n            \"title\": \"Mr\"\\n        }\\n    ],\\n    \"orderDate\": \"2021-08-10T06:21:09.31\",\\n    \"orderDocuments\": [\\n        {\\n            \"key\": \"0000040VD7CES000000000\",\\n            \"name\": \"28-FEB-2019.xlsx\",\\n            \"type\": \"30\"\\n        }\\n    ],\\n    \"orderId\": 0,\\n    \"orderNotes\": [\\n        {\\n            \"type\": \"GENERAL\",\\n            \"value\": \"TESTING API DO NOT DISPATCH\"\\n        }\\n    ],\\n    \"orderNumber\": null,\\n    \"orderReferenceNumbers\": [\\n        {\\n            \"code\": null,\\n            \"type\": \"BM\",\\n            \"value\": \"Test2021061701\"\\n        }\\n    ],\\n    \"orderServices\": [\\n        {\\n            \"code\": \"12151\",\\n            \"description\": \"Base delivery charge.\",\\n            \"name\": \"Room of Choice Delivery\",\\n            \"quantity\": 1,\\n            \"unitOfMeasure\": \"Items Hauled Away\"\\n        }\\n    ],\\n    \"ordersOnConsolidatedShipment\": 1,\\n    \"partnerIdentifierCode\": \"2-1-TESTCHN2\",\\n    \"paymentMethod\": null,\\n    \"quoteId\": \"288945\",\\n    \"requestedDeliveryDate\": \"11/11/2021\",\\n    \"salesReps\": [\\n        {\\n            \"email\": \"devcustomer@gmail.com\",\\n            \"firstName\": \"TestData\",\\n            \"isPrimary\": false,\\n            \"lastName\": \"Lname\",\\n            \"phoneNumbers\": [\\n                {\\n                    \"number\": \"6606546565\",\\n                    \"type\": \"Mobile\"\\n                }\\n            ],\\n            \"title\": \"\"\\n        }\\n    ],\\n    \"shipmentId\": \"1234\",\\n    \"specialRequirements\": [\\n        {\\n            \"code\": \"Single\"\\n        }\\n    ],\\n    \"stops\": [\\n        {\\n            \"addressInformation\": {\\n                \"addressLine1\": \"1234 Warehouse\",\\n                \"addressLine2\": \"\",\\n                \"cityName\": \"North Ridgeville\",\\n                \"countryCode\": \"USA\",\\n                \"geoCodes\": {\\n                    \"latitude\": null,\\n                    \"longitude\": null,\\n                    \"s2cellId\": null\\n                },\\n                \"ianaTimeZone\": null,\\n                \"locationId\": null,\\n                \"locationName\": \"North Ridgeville\",\\n                \"locationType\": \"Warehouse\",\\n                \"region\": null,\\n                \"stateCode\": \"OH\",\\n                \"utcOffset\": \"-04:00:00\",\\n                \"zipCode\": \"44039\"\\n            },\\n            \"isAppointmentConfirmed\": false,\\n            \"isAppointmentRequired\": false,\\n            \"scheduledTimeFrom\": \"10/12/2021\",\\n            \"scheduledTimeTo\": \"10/12/2021\",\\n            \"sequenceNo\": 1,\\n            \"specialRequirement\": [\\n                {\\n                    \"code\": \"LFP\"\\n                }\\n            ],\\n            \"stopContactInformations\": [\\n                {\\n                    \"email\": \"devcustomer@gmail.com\",\\n                    \"firstName\": \"TestData\",\\n                    \"isPrimary\": true,\\n                    \"lastName\": \"Lname\",\\n                    \"phoneNumbers\": [\\n                        {\\n                            \"number\": \"7894561230\",\\n                            \"type\": \"Mobile\"\\n                        }\\n                    ],\\n                    \"title\": \"\"\\n                }\\n            ],\\n            \"stopNotes\": null,\\n            \"stopReferenceNumbers\": null,\\n            \"type\": 1\\n        },\\n        {\\n            \"addressInformation\": {\\n                \"addressLine1\": \"1232 Warehouse\",\\n                \"addressLine2\": \"\",\\n                \"cityName\": \"Chicago\",\\n                \"countryCode\": \"USA\",\\n                \"geoCodes\": {\\n                    \"latitude\": null,\\n                    \"longitude\": null,\\n                    \"s2cellId\": null\\n                },\\n                \"ianaTimeZone\": null,\\n                \"locationId\": null,\\n                \"locationName\": \"Chicago\",\\n                \"locationType\": \"Warehouse\",\\n                \"region\": null,\\n                \"stateCode\": \"IL\",\\n                \"utcOffset\": \"-04:00:00\",\\n                \"zipCode\": \"60606\"\\n            },\\n            \"isAppointmentConfirmed\": false,\\n            \"isAppointmentRequired\": false,\\n            \"scheduledTimeFrom\": \"11/11/2021\",\\n            \"scheduledTimeTo\": \"11/11/2021\",\\n            \"sequenceNo\": 2,\\n            \"specialRequirement\": [\\n                {\\n                    \"code\": \"APT\"\\n                },\\n                {\\n                    \"code\": \"AST\"\\n                },\\n                {\\n                    \"code\": \"DT\"\\n                },\\n                {\\n                    \"code\": \"TWC\"\\n                }\\n            ],\\n            \"stopContactInformations\": [\\n                {\\n                    \"email\": \"devcustomer@gmail.com\",\\n                    \"firstName\": \"TestData\",\\n                    \"isPrimary\": true,\\n                    \"lastName\": \"Lname\",\\n                    \"phoneNumbers\": [\\n                        {\\n                            \"number\": \"3312244433\",\\n                            \"type\": \"Mobile\"\\n                        }\\n                    ],\\n                    \"title\": \"\"\\n                }\\n            ],\\n            \"stopNotes\": null,\\n            \"stopReferenceNumbers\": null,\\n            \"type\": 3\\n        }\\n    ],\\n    \"transportationMode\": \"TL\"\\n}'\n\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});\n"
            },
            {
                "lang": "C#",
                "source": "var client = new RestClient(\"https://api-dev-xpoconnect.xpo.com/quoteAPI/rest/v1/ConvertToOrder\");\nclient.Timeout = -1;\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"x-api-key\", \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\");\nrequest.AddHeader(\"xpoauthorization\", \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\");\nrequest.AddHeader(\"Content-Type\", \"text/plain\");\nvar body = @\"{\" + \"\\n\" +\n@\"    \"\"accountId\"\": null,\" + \"\\n\" +\n@\"    \"\"applicationSource\"\": \"\"GPAPI\"\",\" + \"\\n\" +\n@\"    \"\"contractId\"\": null,\" + \"\\n\" +\n@\"    \"\"crossSellOrderNumber\"\": \"\"\"\",\" + \"\\n\" +\n@\"    \"\"emailBol\"\": true,\" + \"\\n\" +\n@\"    \"\"equipmentCategoryCode\"\": \"\"VN\"\",\" + \"\\n\" +\n@\"    \"\"equipmentTypeCode\"\": \"\"V\"\",\" + \"\\n\" +\n@\"    \"\"invoiceDate\"\": null,\" + \"\\n\" +\n@\"    \"\"invoiceNumber\"\": null,\" + \"\\n\" +\n@\"    \"\"isExpedited\"\": false,\" + \"\\n\" +\n@\"    \"\"isPartOfConsolidatedShipment\"\": false,\" + \"\\n\" +\n@\"    \"\"isXpoManaged\"\": true,\" + \"\\n\" +\n@\"    \"\"items\"\": [\" + \"\\n\" +\n@\"        {\" + \"\\n\" +\n@\"            \"\"classCode\"\": \"\"50\"\",\" + \"\\n\" +\n@\"            \"\"declaredValue\"\": 1000,\" + \"\\n\" +\n@\"            \"\"declaredValueAmount\"\": 1000,\" + \"\\n\" +\n@\"            \"\"declaredValueCurrencyCode\"\": \"\"USD\"\",\" + \"\\n\" +\n@\"            \"\"hazardousItemInfo\"\": {\" + \"\\n\" +\n@\"                \"\"containerType\"\": \"\"van\"\",\" + \"\\n\" +\n@\"                \"\"hazardousClass\"\": \"\"hc\"\",\" + \"\\n\" +\n@\"                \"\"hazardousDescription\"\": \"\"hd\"\",\" + \"\\n\" +\n@\"                \"\"hazardousPhoneNumber\"\": \"\"hp\"\",\" + \"\\n\" +\n@\"                \"\"numberofReceptacles\"\": 10,\" + \"\\n\" +\n@\"                \"\"packingGroup\"\": 10,\" + \"\\n\" +\n@\"                \"\"receptacleSize\"\": 10,\" + \"\\n\" +\n@\"                \"\"shippingName\"\": \"\"sn\"\",\" + \"\\n\" +\n@\"                \"\"unNumber\"\": 1111,\" + \"\\n\" +\n@\"                \"\"unitofMeasure\"\": \"\"ibs\"\"\" + \"\\n\" +\n@\"            },\" + \"\\n\" +\n@\"            \"\"height\"\": 10,\" + \"\\n\" +\n@\"            \"\"heightUomCode\"\": \"\"IN\"\",\" + \"\\n\" +\n@\"            \"\"htscode\"\": null,\" + \"\\n\" +\n@\"            \"\"isHazmat\"\": true,\" + \"\\n\" +\n@\"            \"\"isOversized\"\": null,\" + \"\\n\" +\n@\"            \"\"isStackable\"\": null,\" + \"\\n\" +\n@\"            \"\"isTemperatureControlled\"\": true,\" + \"\\n\" +\n@\"            \"\"itemCode\"\": \"\"Paper\"\",\" + \"\\n\" +\n@\"            \"\"itemDescription\"\": \"\"paper-123\"\",\" + \"\\n\" +\n@\"            \"\"itemNotes\"\": null,\" + \"\\n\" +\n@\"            \"\"itemNumber\"\": \"\"100056005\"\",\" + \"\\n\" +\n@\"            \"\"itemPrice\"\": 20.5,\" + \"\\n\" +\n@\"            \"\"itemPriceCurrencyCode\"\": \"\"USD\"\",\" + \"\\n\" +\n@\"            \"\"itemReferenceNumbers\"\": null,\" + \"\\n\" +\n@\"            \"\"itemServices\"\": null,\" + \"\\n\" +\n@\"            \"\"length\"\": 10,\" + \"\\n\" +\n@\"            \"\"lengthUomCode\"\": \"\"IN\"\",\" + \"\\n\" +\n@\"            \"\"nmfcCode\"\": \"\"\"\",\" + \"\\n\" +\n@\"            \"\"packageTypeCode\"\": \"\"BOXS\"\",\" + \"\\n\" +\n@\"            \"\"packageUnits\"\": 1,\" + \"\\n\" +\n@\"            \"\"purchaseOrderNumber\"\": null,\" + \"\\n\" +\n@\"            \"\"sku\"\": \"\"\"\",\" + \"\\n\" +\n@\"            \"\"temperatureInformation\"\": {\" + \"\\n\" +\n@\"                \"\"high\"\": 50,\" + \"\\n\" +\n@\"                \"\"highUom\"\": null,\" + \"\\n\" +\n@\"                \"\"low\"\": 30,\" + \"\\n\" +\n@\"                \"\"lowUom\"\": null\" + \"\\n\" +\n@\"            },\" + \"\\n\" +\n@\"            \"\"unitTypeCode\"\": \"\"BAGS\"\",\" + \"\\n\" +\n@\"            \"\"units\"\": 1,\" + \"\\n\" +\n@\"            \"\"volume\"\": 868.0386,\" + \"\\n\" +\n@\"            \"\"volumeUomCode\"\": \"\"CUFT\"\",\" + \"\\n\" +\n@\"            \"\"weight\"\": 1000,\" + \"\\n\" +\n@\"            \"\"weightUomCode\"\": \"\"LB\"\",\" + \"\\n\" +\n@\"            \"\"width\"\": 10,\" + \"\\n\" +\n@\"            \"\"widthUomCode\"\": \"\"IN\"\",\" + \"\\n\" +\n@\"            \"\"DeclaredValueCurrencyCode\"\": \"\"USD\"\",\" + \"\\n\" +\n@\"            \"\"productCode\"\": \"\"Paper\"\"\" + \"\\n\" +\n@\"        }\" + \"\\n\" +\n@\"    ],\" + \"\\n\" +\n@\"    \"\"orderContactInformations\"\": [\" + \"\\n\" +\n@\"        {\" + \"\\n\" +\n@\"            \"\"email\"\": \"\"devcustomer@gmail.com\"\",\" + \"\\n\" +\n@\"            \"\"firstName\"\": \"\"TestData\"\",\" + \"\\n\" +\n@\"            \"\"isPrimary\"\": true,\" + \"\\n\" +\n@\"            \"\"lastName\"\": \"\"Lname\"\",\" + \"\\n\" +\n@\"            \"\"phoneNumbers\"\": [\" + \"\\n\" +\n@\"                {\" + \"\\n\" +\n@\"                    \"\"number\"\": \"\"6606546565\"\",\" + \"\\n\" +\n@\"                    \"\"type\"\": \"\"Mobile\"\"\" + \"\\n\" +\n@\"                }\" + \"\\n\" +\n@\"            ],\" + \"\\n\" +\n@\"            \"\"title\"\": \"\"Mr\"\"\" + \"\\n\" +\n@\"        }\" + \"\\n\" +\n@\"    ],\" + \"\\n\" +\n@\"    \"\"orderDate\"\": \"\"2021-08-10T06:21:09.31\"\",\" + \"\\n\" +\n@\"    \"\"orderDocuments\"\": [\" + \"\\n\" +\n@\"        {\" + \"\\n\" +\n@\"            \"\"key\"\": \"\"0000040VD7CES000000000\"\",\" + \"\\n\" +\n@\"            \"\"name\"\": \"\"28-FEB-2019.xlsx\"\",\" + \"\\n\" +\n@\"            \"\"type\"\": \"\"30\"\"\" + \"\\n\" +\n@\"        }\" + \"\\n\" +\n@\"    ],\" + \"\\n\" +\n@\"    \"\"orderId\"\": 0,\" + \"\\n\" +\n@\"    \"\"orderNotes\"\": [\" + \"\\n\" +\n@\"        {\" + \"\\n\" +\n@\"            \"\"type\"\": \"\"GENERAL\"\",\" + \"\\n\" +\n@\"            \"\"value\"\": \"\"TESTING API DO NOT DISPATCH\"\"\" + \"\\n\" +\n@\"        }\" + \"\\n\" +\n@\"    ],\" + \"\\n\" +\n@\"    \"\"orderNumber\"\": null,\" + \"\\n\" +\n@\"    \"\"orderReferenceNumbers\"\": [\" + \"\\n\" +\n@\"        {\" + \"\\n\" +\n@\"            \"\"code\"\": null,\" + \"\\n\" +\n@\"            \"\"type\"\": \"\"BM\"\",\" + \"\\n\" +\n@\"            \"\"value\"\": \"\"Test2021061701\"\"\" + \"\\n\" +\n@\"        }\" + \"\\n\" +\n@\"    ],\" + \"\\n\" +\n@\"    \"\"orderServices\"\": [\" + \"\\n\" +\n@\"        {\" + \"\\n\" +\n@\"            \"\"code\"\": \"\"12151\"\",\" + \"\\n\" +\n@\"            \"\"description\"\": \"\"Base delivery charge.\"\",\" + \"\\n\" +\n@\"            \"\"name\"\": \"\"Room of Choice Delivery\"\",\" + \"\\n\" +\n@\"            \"\"quantity\"\": 1,\" + \"\\n\" +\n@\"            \"\"unitOfMeasure\"\": \"\"Items Hauled Away\"\"\" + \"\\n\" +\n@\"        }\" + \"\\n\" +\n@\"    ],\" + \"\\n\" +\n@\"    \"\"ordersOnConsolidatedShipment\"\": 1,\" + \"\\n\" +\n@\"    \"\"partnerIdentifierCode\"\": \"\"2-1-TESTCHN2\"\",\" + \"\\n\" +\n@\"    \"\"paymentMethod\"\": null,\" + \"\\n\" +\n@\"    \"\"quoteId\"\": \"\"288945\"\",\" + \"\\n\" +\n@\"    \"\"requestedDeliveryDate\"\": \"\"11/11/2021\"\",\" + \"\\n\" +\n@\"    \"\"salesReps\"\": [\" + \"\\n\" +\n@\"        {\" + \"\\n\" +\n@\"            \"\"email\"\": \"\"devcustomer@gmail.com\"\",\" + \"\\n\" +\n@\"            \"\"firstName\"\": \"\"TestData\"\",\" + \"\\n\" +\n@\"            \"\"isPrimary\"\": false,\" + \"\\n\" +\n@\"            \"\"lastName\"\": \"\"Lname\"\",\" + \"\\n\" +\n@\"            \"\"phoneNumbers\"\": [\" + \"\\n\" +\n@\"                {\" + \"\\n\" +\n@\"                    \"\"number\"\": \"\"6606546565\"\",\" + \"\\n\" +\n@\"                    \"\"type\"\": \"\"Mobile\"\"\" + \"\\n\" +\n@\"                }\" + \"\\n\" +\n@\"            ],\" + \"\\n\" +\n@\"            \"\"title\"\": \"\"\"\"\" + \"\\n\" +\n@\"        }\" + \"\\n\" +\n@\"    ],\" + \"\\n\" +\n@\"    \"\"shipmentId\"\": \"\"1234\"\",\" + \"\\n\" +\n@\"    \"\"specialRequirements\"\": [\" + \"\\n\" +\n@\"        {\" + \"\\n\" +\n@\"            \"\"code\"\": \"\"Single\"\"\" + \"\\n\" +\n@\"        }\" + \"\\n\" +\n@\"    ],\" + \"\\n\" +\n@\"    \"\"stops\"\": [\" + \"\\n\" +\n@\"        {\" + \"\\n\" +\n@\"            \"\"addressInformation\"\": {\" + \"\\n\" +\n@\"                \"\"addressLine1\"\": \"\"1234 Warehouse\"\",\" + \"\\n\" +\n@\"                \"\"addressLine2\"\": \"\"\"\",\" + \"\\n\" +\n@\"                \"\"cityName\"\": \"\"North Ridgeville\"\",\" + \"\\n\" +\n@\"                \"\"countryCode\"\": \"\"USA\"\",\" + \"\\n\" +\n@\"                \"\"geoCodes\"\": {\" + \"\\n\" +\n@\"                    \"\"latitude\"\": null,\" + \"\\n\" +\n@\"                    \"\"longitude\"\": null,\" + \"\\n\" +\n@\"                    \"\"s2cellId\"\": null\" + \"\\n\" +\n@\"                },\" + \"\\n\" +\n@\"                \"\"ianaTimeZone\"\": null,\" + \"\\n\" +\n@\"                \"\"locationId\"\": null,\" + \"\\n\" +\n@\"                \"\"locationName\"\": \"\"North Ridgeville\"\",\" + \"\\n\" +\n@\"                \"\"locationType\"\": \"\"Warehouse\"\",\" + \"\\n\" +\n@\"                \"\"region\"\": null,\" + \"\\n\" +\n@\"                \"\"stateCode\"\": \"\"OH\"\",\" + \"\\n\" +\n@\"                \"\"utcOffset\"\": \"\"-04:00:00\"\",\" + \"\\n\" +\n@\"                \"\"zipCode\"\": \"\"44039\"\"\" + \"\\n\" +\n@\"            },\" + \"\\n\" +\n@\"            \"\"isAppointmentConfirmed\"\": false,\" + \"\\n\" +\n@\"            \"\"isAppointmentRequired\"\": false,\" + \"\\n\" +\n@\"            \"\"scheduledTimeFrom\"\": \"\"10/12/2021\"\",\" + \"\\n\" +\n@\"            \"\"scheduledTimeTo\"\": \"\"10/12/2021\"\",\" + \"\\n\" +\n@\"            \"\"sequenceNo\"\": 1,\" + \"\\n\" +\n@\"            \"\"specialRequirement\"\": [\" + \"\\n\" +\n@\"                {\" + \"\\n\" +\n@\"                    \"\"code\"\": \"\"LFP\"\"\" + \"\\n\" +\n@\"                }\" + \"\\n\" +\n@\"            ],\" + \"\\n\" +\n@\"            \"\"stopContactInformations\"\": [\" + \"\\n\" +\n@\"                {\" + \"\\n\" +\n@\"                    \"\"email\"\": \"\"devcustomer@gmail.com\"\",\" + \"\\n\" +\n@\"                    \"\"firstName\"\": \"\"TestData\"\",\" + \"\\n\" +\n@\"                    \"\"isPrimary\"\": true,\" + \"\\n\" +\n@\"                    \"\"lastName\"\": \"\"Lname\"\",\" + \"\\n\" +\n@\"                    \"\"phoneNumbers\"\": [\" + \"\\n\" +\n@\"                        {\" + \"\\n\" +\n@\"                            \"\"number\"\": \"\"7894561230\"\",\" + \"\\n\" +\n@\"                            \"\"type\"\": \"\"Mobile\"\"\" + \"\\n\" +\n@\"                        }\" + \"\\n\" +\n@\"                    ],\" + \"\\n\" +\n@\"                    \"\"title\"\": \"\"\"\"\" + \"\\n\" +\n@\"                }\" + \"\\n\" +\n@\"            ],\" + \"\\n\" +\n@\"            \"\"stopNotes\"\": null,\" + \"\\n\" +\n@\"            \"\"stopReferenceNumbers\"\": null,\" + \"\\n\" +\n@\"            \"\"type\"\": 1\" + \"\\n\" +\n@\"        },\" + \"\\n\" +\n@\"        {\" + \"\\n\" +\n@\"            \"\"addressInformation\"\": {\" + \"\\n\" +\n@\"                \"\"addressLine1\"\": \"\"1232 Warehouse\"\",\" + \"\\n\" +\n@\"                \"\"addressLine2\"\": \"\"\"\",\" + \"\\n\" +\n@\"                \"\"cityName\"\": \"\"Chicago\"\",\" + \"\\n\" +\n@\"                \"\"countryCode\"\": \"\"USA\"\",\" + \"\\n\" +\n@\"                \"\"geoCodes\"\": {\" + \"\\n\" +\n@\"                    \"\"latitude\"\": null,\" + \"\\n\" +\n@\"                    \"\"longitude\"\": null,\" + \"\\n\" +\n@\"                    \"\"s2cellId\"\": null\" + \"\\n\" +\n@\"                },\" + \"\\n\" +\n@\"                \"\"ianaTimeZone\"\": null,\" + \"\\n\" +\n@\"                \"\"locationId\"\": null,\" + \"\\n\" +\n@\"                \"\"locationName\"\": \"\"Chicago\"\",\" + \"\\n\" +\n@\"                \"\"locationType\"\": \"\"Warehouse\"\",\" + \"\\n\" +\n@\"                \"\"region\"\": null,\" + \"\\n\" +\n@\"                \"\"stateCode\"\": \"\"IL\"\",\" + \"\\n\" +\n@\"                \"\"utcOffset\"\": \"\"-04:00:00\"\",\" + \"\\n\" +\n@\"                \"\"zipCode\"\": \"\"60606\"\"\" + \"\\n\" +\n@\"            },\" + \"\\n\" +\n@\"            \"\"isAppointmentConfirmed\"\": false,\" + \"\\n\" +\n@\"            \"\"isAppointmentRequired\"\": false,\" + \"\\n\" +\n@\"            \"\"scheduledTimeFrom\"\": \"\"11/11/2021\"\",\" + \"\\n\" +\n@\"            \"\"scheduledTimeTo\"\": \"\"11/11/2021\"\",\" + \"\\n\" +\n@\"            \"\"sequenceNo\"\": 2,\" + \"\\n\" +\n@\"            \"\"specialRequirement\"\": [\" + \"\\n\" +\n@\"                {\" + \"\\n\" +\n@\"                    \"\"code\"\": \"\"APT\"\"\" + \"\\n\" +\n@\"                },\" + \"\\n\" +\n@\"                {\" + \"\\n\" +\n@\"                    \"\"code\"\": \"\"AST\"\"\" + \"\\n\" +\n@\"                },\" + \"\\n\" +\n@\"                {\" + \"\\n\" +\n@\"                    \"\"code\"\": \"\"DT\"\"\" + \"\\n\" +\n@\"                },\" + \"\\n\" +\n@\"                {\" + \"\\n\" +\n@\"                    \"\"code\"\": \"\"TWC\"\"\" + \"\\n\" +\n@\"                }\" + \"\\n\" +\n@\"            ],\" + \"\\n\" +\n@\"            \"\"stopContactInformations\"\": [\" + \"\\n\" +\n@\"                {\" + \"\\n\" +\n@\"                    \"\"email\"\": \"\"devcustomer@gmail.com\"\",\" + \"\\n\" +\n@\"                    \"\"firstName\"\": \"\"TestData\"\",\" + \"\\n\" +\n@\"                    \"\"isPrimary\"\": true,\" + \"\\n\" +\n@\"                    \"\"lastName\"\": \"\"Lname\"\",\" + \"\\n\" +\n@\"                    \"\"phoneNumbers\"\": [\" + \"\\n\" +\n@\"                        {\" + \"\\n\" +\n@\"                            \"\"number\"\": \"\"3312244433\"\",\" + \"\\n\" +\n@\"                            \"\"type\"\": \"\"Mobile\"\"\" + \"\\n\" +\n@\"                        }\" + \"\\n\" +\n@\"                    ],\" + \"\\n\" +\n@\"                    \"\"title\"\": \"\"\"\"\" + \"\\n\" +\n@\"                }\" + \"\\n\" +\n@\"            ],\" + \"\\n\" +\n@\"            \"\"stopNotes\"\": null,\" + \"\\n\" +\n@\"            \"\"stopReferenceNumbers\"\": null,\" + \"\\n\" +\n@\"            \"\"type\"\": 3\" + \"\\n\" +\n@\"        }\" + \"\\n\" +\n@\"    ],\" + \"\\n\" +\n@\"    \"\"transportationMode\"\": \"\"TL\"\"\" + \"\\n\" +\n@\"}\";\nrequest.AddParameter(\"text/plain\", body,  ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);\nConsole.WriteLine(response.Content);"
            }
        ],
        "responses": {
          "200": {
            "description": "Request successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/convertquoteresponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error401"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "404": {
            "description": "Error 404 Unknown operation. Please contact XPO representative."
          }
        }
      }
    },
    "/orderAPI/rest/v1/Order": {
      "post": {
        "description": "Create Order allows you to submit a new order, without including a spot quote ID. Create Order is best suited for use by customers who have contract rates on file with XPO.\n\n To use the Create Order API, you will need to provide a valid API key and token in the header parameter, and the order details in the request payload.",
        "operationId": "Create Order",
        "security": [
          {
            "api_key": [],
            "OAuth": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "required": true,
            "in": "header",
            "description": "Api Key as provided by XPO.",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "header",
            "description": "Valid bearer token generated using Token API.",
            "name": "xpoauthorization",
            "schema": {
              "type": "JWT token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl --location --request POST 'https:\/\/api-uat-xpoconnect.xpo.com\/orderAPI\/rest\/v1\/Order' \\\r\n--header 'x-api-key: XXXXXXXXXXXXXXXXXXXXXXXXXXX' \\\r\n--header 'xpoauthorization: Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXX' \\\r\n--header 'Content-Type: application\/json' \\\r\n--data-raw '{\r\n    \"orderDate\": \"2020-10-12T12:08:09.31\",\r\n    \"transportationMode\": \"SEA\",\r\n    \"applicationSource\": \"2\",\r\n    \"orderNumber\": \"HouseBill676897\",\r\n    \"orderNotes\": [\r\n        {\r\n            \"type\": \"GoodsDescription\",\r\n            \"value\": \"test description\"\r\n        }\r\n    ],\r\n    \"orderReferenceNumbers\": [\r\n        {\r\n            \"type\": \"CREATEDBY\",\r\n            \"value\": \"FASANGMKE\"\r\n        }\r\n    ],\r\n    \"additionalServices\": [\r\n        {\r\n            \"name\": \"ServiceLevel\",\r\n            \"code\": \"5\"\r\n        },\r\n        {\r\n            \"name\": \"InsuranceType\",\r\n            \"code\": \"test\"\r\n        }\r\n    ],\r\n    \"stops\": [\r\n        {\r\n            \"addressInformation\": {\r\n                \"addressLine1\": \"7150 BRYAN DAIRY ROAD\",\r\n                \"addressLine2\": \"\",\r\n                \"cityName\": \"KENMORE\",\r\n                \"countryCode\": \"USA\",\r\n                \"stateCode\": \"WA\",\r\n                \"zipCode\": \"98028\"\r\n            },\r\n            \"type\": 1,\r\n            \"scheduledTimeFrom\": \"2020-02-20T08:00:00\",\r\n            \"scheduledTimeTo\": \"2020-02-20T08:00:00\",\r\n            \"sequenceNo\": 1,\r\n            \"stopReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"HITPRODEN\",\r\n                    \"type\": \"Shipper\",\r\n                    \"value\": \"ABC Corporation\"\r\n                },\r\n                {\r\n                    \"type\": \"ShipperReference\",\r\n                    \"value\": \"TestShipperReference\"\r\n                },\r\n                {\r\n                    \"type\": \"Instructions\",\r\n                    \"value\": \"testPickupInstructions\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"addressInformation\": {\r\n                \"addressLine1\": \"7150 BRYAN DAIRY ROAD\",\r\n                \"addressLine2\": \"\",\r\n                \"cityName\": \"KENMORE\",\r\n                \"countryCode\": \"USA\",\r\n                \"stateCode\": \"WA\",\r\n                \"zipCode\": \"98028\"\r\n            },\r\n            \"type\": 3,\r\n            \"sequenceNo\": 3,\r\n            \"scheduledTimeFrom\": \"2020-02-20T08:00:00\",\r\n            \"scheduledTimeTo\": \"2020-10-20T08:00:00\",\r\n            \"stopReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"FASANGMKE\",\r\n                    \"type\": \"Consignee\",\r\n                    \"value\": \"Generic Customer Enterprises\"\r\n                },\r\n                {\r\n                    \"type\": \"ConsigneeReference\",\r\n                    \"value\": \"TestConsigneeReference\"\r\n                },\r\n                {\r\n                    \"type\": \"Instructions\",\r\n                    \"value\": \"testPickupInstructions\"\r\n                },\r\n                {\r\n                    \"code\": \"FASANGMKE\",\r\n                    \"type\": \"Customer\",\r\n                    \"value\": \"Generic Customer Enterprises\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"addressInformation\": {\r\n                \"addressLine1\": \"7150 BRYAN DAIRY ROAD\",\r\n                \"addressLine2\": \"\",\r\n                \"cityName\": \"KENMORE\",\r\n                \"countryCode\": \"USA\",\r\n                \"stateCode\": \"WA\",\r\n                \"zipCode\": \"98028\"\r\n            },\r\n            \"sequenceNo\": 2,\r\n            \"type\": 2,\r\n            \"scheduledTimeFrom\": \"2020-02-20T08:00:00\",\r\n            \"scheduledTimeTo\": \"2020-10-20T08:00:00\",\r\n            \"stopReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"FASANGMKE\",\r\n                    \"type\": \"Customer\",\r\n                    \"value\": \"Generic Customer Enterprises\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"requestedDeliveryDate\": \"2020-02-27T15:00:00\",\r\n    \"items\": [\r\n        {\r\n            \"itemCode\": \"100-1900\",\r\n            \"itemNumber\": \"100056006\",\r\n            \"itemDescription\": \"CONCRETE BUCKET 1\\\/2 YD\",\r\n            \"units\": 10,\r\n            \"unitTypeCode\": \"EACH\",\r\n            \"packageUnits\": 2,\r\n            \"packageTypeCode\": \"BAG\",\r\n            \"weight\": 330,\r\n            \"weightUomCode\": \"LB\",\r\n            \"height\": 99.998999999999995225152815692126750946044921875,\r\n            \"heightUomCode\": \"IN\",\r\n            \"length\": 99.998999999999995225152815692126750946044921875,\r\n            \"lengthUomCode\": \"IN\",\r\n            \"width\": 150,\r\n            \"widthUomCode\": \"IN\",\r\n            \"declaredValue\": 2285.88999999999987267074175179004669189453125,\r\n            \"declaredValueCurrencyCode\": \"USD\",\r\n            \"volume\": 868.0385999999999739884515292942523956298828125,\r\n            \"volumeUomCode\": \"CUFT\",\r\n            \"itemPrice\": 20.5,\r\n            \"itemPriceCurrencyCode\": \"USD\",\r\n            \"isTemperatureControlled\": false,\r\n            \"isHazmat\": false,\r\n            \"hazardousItemInfo\": {\r\n                \"unnumber\": 0,\r\n                \"packingGroup\": 0,\r\n                \"receptacleSize\": 0,\r\n                \"hazardousClass\": null,\r\n                \"numberofReceptacles\": 0,\r\n                \"unitofMeasure\": null,\r\n                \"containerType\": null,\r\n                \"hazardousDescription\": null,\r\n                \"hazardousPhoneNumber\": null,\r\n                \"shippingName\": null\r\n            },\r\n            \"htscode\": null,\r\n            \"sku\": \"Sku00001\",\r\n            \"purchaseOrderNumber\": null,\r\n            \"itemReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"1001\",\r\n                    \"type\": \"CommodityCode\"\r\n                },\r\n                {\r\n                    \"value\": \"c60\",\r\n                    \"type\": \"FreightClass\"\r\n                },\r\n                {\r\n                    \"value\": \"60\",\r\n                    \"type\": \"POQuantity\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"partnerIdentifierCode\": \"10-1-MCGEEHIF\"\r\n}'"
          },
          {
            "lang": "Java",
            "source": "OkHttpClient client = new OkHttpClient().newBuilder()\r\n  .build();\r\nMediaType mediaType = MediaType.parse(\"application\/json\");\r\nRequestBody body = RequestBody.create(mediaType, \"{\r\n    \"orderDate\": \"2020-10-12T12:08:09.31\",\r\n    \"transportationMode\": \"SEA\",\r\n    \"applicationSource\": \"2\",\r\n    \"orderNumber\": \"HouseBill676897\",\r\n    \"orderNotes\": [\r\n        {\r\n            \"type\": \"GoodsDescription\",\r\n            \"value\": \"test description\"\r\n        }\r\n    ],\r\n    \"orderReferenceNumbers\": [\r\n        {\r\n            \"type\": \"CREATEDBY\",\r\n            \"value\": \"FASANGMKE\"\r\n        }\r\n    ],\r\n    \"additionalServices\": [\r\n        {\r\n            \"name\": \"ServiceLevel\",\r\n            \"code\": \"5\"\r\n        },\r\n        {\r\n            \"name\": \"InsuranceType\",\r\n            \"code\": \"test\"\r\n        }\r\n    ],\r\n    \"stops\": [\r\n        {\r\n            \"addressInformation\": {\r\n                \"addressLine1\": \"7150 BRYAN DAIRY ROAD\",\r\n                \"addressLine2\": \"\",\r\n                \"cityName\": \"KENMORE\",\r\n                \"countryCode\": \"USA\",\r\n                \"stateCode\": \"WA\",\r\n                \"zipCode\": \"98028\"\r\n            },\r\n            \"type\": 1,\r\n            \"scheduledTimeFrom\": \"2020-02-20T08:00:00\",\r\n            \"scheduledTimeTo\": \"2020-02-20T08:00:00\",\r\n            \"sequenceNo\": 1,\r\n            \"stopReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"HITPRODEN\",\r\n                    \"type\": \"Shipper\",\r\n                    \"value\": \"ABC Corporation\"\r\n                },\r\n                {\r\n                    \"type\": \"ShipperReference\",\r\n                    \"value\": \"TestShipperReference\"\r\n                },\r\n                {\r\n                    \"type\": \"Instructions\",\r\n                    \"value\": \"testPickupInstructions\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"addressInformation\": {\r\n                \"addressLine1\": \"7150 BRYAN DAIRY ROAD\",\r\n                \"addressLine2\": \"\",\r\n                \"cityName\": \"KENMORE\",\r\n                \"countryCode\": \"USA\",\r\n                \"stateCode\": \"WA\",\r\n                \"zipCode\": \"98028\"\r\n            },\r\n            \"type\": 3,\r\n            \"sequenceNo\": 3,\r\n            \"scheduledTimeFrom\": \"2020-02-20T08:00:00\",\r\n            \"scheduledTimeTo\": \"2020-10-20T08:00:00\",\r\n            \"stopReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"FASANGMKE\",\r\n                    \"type\": \"Consignee\",\r\n                    \"value\": \"Generic Customer Enterprises\"\r\n                },\r\n                {\r\n                    \"type\": \"ConsigneeReference\",\r\n                    \"value\": \"TestConsigneeReference\"\r\n                },\r\n                {\r\n                    \"type\": \"Instructions\",\r\n                    \"value\": \"testPickupInstructions\"\r\n                },\r\n                {\r\n                    \"code\": \"FASANGMKE\",\r\n                    \"type\": \"Customer\",\r\n                    \"value\": \"Generic Customer Enterprises\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"addressInformation\": {\r\n                \"addressLine1\": \"7150 BRYAN DAIRY ROAD\",\r\n                \"addressLine2\": \"\",\r\n                \"cityName\": \"KENMORE\",\r\n                \"countryCode\": \"USA\",\r\n                \"stateCode\": \"WA\",\r\n                \"zipCode\": \"98028\"\r\n            },\r\n            \"sequenceNo\": 2,\r\n            \"type\": 2,\r\n            \"scheduledTimeFrom\": \"2020-02-20T08:00:00\",\r\n            \"scheduledTimeTo\": \"2020-10-20T08:00:00\",\r\n            \"stopReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"FASANGMKE\",\r\n                    \"type\": \"Customer\",\r\n                    \"value\": \"Generic Customer Enterprises\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"requestedDeliveryDate\": \"2020-02-27T15:00:00\",\r\n    \"items\": [\r\n        {\r\n            \"itemCode\": \"100-1900\",\r\n            \"itemNumber\": \"100056006\",\r\n            \"itemDescription\": \"CONCRETE BUCKET 1\\\/2 YD\",\r\n            \"units\": 10,\r\n            \"unitTypeCode\": \"EACH\",\r\n            \"packageUnits\": 2,\r\n            \"packageTypeCode\": \"BAG\",\r\n            \"weight\": 330,\r\n            \"weightUomCode\": \"LB\",\r\n            \"height\": 99.998999999999995225152815692126750946044921875,\r\n            \"heightUomCode\": \"IN\",\r\n            \"length\": 99.998999999999995225152815692126750946044921875,\r\n            \"lengthUomCode\": \"IN\",\r\n            \"width\": 150,\r\n            \"widthUomCode\": \"IN\",\r\n            \"declaredValue\": 2285.88999999999987267074175179004669189453125,\r\n            \"declaredValueCurrencyCode\": \"USD\",\r\n            \"volume\": 868.0385999999999739884515292942523956298828125,\r\n            \"volumeUomCode\": \"CUFT\",\r\n            \"itemPrice\": 20.5,\r\n            \"itemPriceCurrencyCode\": \"USD\",\r\n            \"isTemperatureControlled\": false,\r\n            \"isHazmat\": false,\r\n            \"hazardousItemInfo\": {\r\n                \"unnumber\": 0,\r\n                \"packingGroup\": 0,\r\n                \"receptacleSize\": 0,\r\n                \"hazardousClass\": null,\r\n                \"numberofReceptacles\": 0,\r\n                \"unitofMeasure\": null,\r\n                \"containerType\": null,\r\n                \"hazardousDescription\": null,\r\n                \"hazardousPhoneNumber\": null,\r\n                \"shippingName\": null\r\n            },\r\n            \"htscode\": null,\r\n            \"sku\": \"Sku00001\",\r\n            \"purchaseOrderNumber\": null,\r\n            \"itemReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"1001\",\r\n                    \"type\": \"CommodityCode\"\r\n                },\r\n                {\r\n                    \"value\": \"c60\",\r\n                    \"type\": \"FreightClass\"\r\n                },\r\n                {\r\n                    \"value\": \"60\",\r\n                    \"type\": \"POQuantity\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"partnerIdentifierCode\": \"10-1-MCGEEHIF\"\r\n}\");\r\nRequest request = new Request.Builder()\r\n  .url(\"https:\/\/api-uat-xpoconnect.xpo.com\/orderAPI\/rest\/v1\/Order\")\r\n  .method(\"POST\", body)\r\n  .addHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXX\")\r\n  .addHeader(\"xpoauthorization\", \"Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXX\")\r\n  .addHeader(\"Content-Type\", \"application\/json\")\r\n  .build();\r\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "NodeJS",
            "source": "var request = require('request');\r\nvar options = {\r\n  'method': 'POST',\r\n  'url': 'https:\/\/api-uat-xpoconnect.xpo.com\/orderAPI\/rest\/v1\/Order',\r\n  'headers': {\r\n    'x-api-key': 'XXXXXXXXXXXXXXXXXXXXXXXXXXX',\r\n    'xpoauthorization': 'Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXX',\r\n    'Content-Type': 'application\/json'\r\n  },\r\n  body: JSON.stringify({\r\n    \"orderDate\": \"2020-10-12T12:08:09.31\",\r\n    \"transportationMode\": \"SEA\",\r\n    \"applicationSource\": \"2\",\r\n    \"orderNumber\": \"HouseBill676897\",\r\n    \"orderNotes\": [\r\n        {\r\n            \"type\": \"GoodsDescription\",\r\n            \"value\": \"test description\"\r\n        }\r\n    ],\r\n    \"orderReferenceNumbers\": [\r\n        {\r\n            \"type\": \"CREATEDBY\",\r\n            \"value\": \"FASANGMKE\"\r\n        }\r\n    ],\r\n    \"additionalServices\": [\r\n        {\r\n            \"name\": \"ServiceLevel\",\r\n            \"code\": \"5\"\r\n        },\r\n        {\r\n            \"name\": \"InsuranceType\",\r\n            \"code\": \"test\"\r\n        }\r\n    ],\r\n    \"stops\": [\r\n        {\r\n            \"addressInformation\": {\r\n                \"addressLine1\": \"7150 BRYAN DAIRY ROAD\",\r\n                \"addressLine2\": \"\",\r\n                \"cityName\": \"KENMORE\",\r\n                \"countryCode\": \"USA\",\r\n                \"stateCode\": \"WA\",\r\n                \"zipCode\": \"98028\"\r\n            },\r\n            \"type\": 1,\r\n            \"scheduledTimeFrom\": \"2020-02-20T08:00:00\",\r\n            \"scheduledTimeTo\": \"2020-02-20T08:00:00\",\r\n            \"sequenceNo\": 1,\r\n            \"stopReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"HITPRODEN\",\r\n                    \"type\": \"Shipper\",\r\n                    \"value\": \"ABC Corporation\"\r\n                },\r\n                {\r\n                    \"type\": \"ShipperReference\",\r\n                    \"value\": \"TestShipperReference\"\r\n                },\r\n                {\r\n                    \"type\": \"Instructions\",\r\n                    \"value\": \"testPickupInstructions\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"addressInformation\": {\r\n                \"addressLine1\": \"7150 BRYAN DAIRY ROAD\",\r\n                \"addressLine2\": \"\",\r\n                \"cityName\": \"KENMORE\",\r\n                \"countryCode\": \"USA\",\r\n                \"stateCode\": \"WA\",\r\n                \"zipCode\": \"98028\"\r\n            },\r\n            \"type\": 3,\r\n            \"sequenceNo\": 3,\r\n            \"scheduledTimeFrom\": \"2020-02-20T08:00:00\",\r\n            \"scheduledTimeTo\": \"2020-10-20T08:00:00\",\r\n            \"stopReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"FASANGMKE\",\r\n                    \"type\": \"Consignee\",\r\n                    \"value\": \"Generic Customer Enterprises\"\r\n                },\r\n                {\r\n                    \"type\": \"ConsigneeReference\",\r\n                    \"value\": \"TestConsigneeReference\"\r\n                },\r\n                {\r\n                    \"type\": \"Instructions\",\r\n                    \"value\": \"testPickupInstructions\"\r\n                },\r\n                {\r\n                    \"code\": \"FASANGMKE\",\r\n                    \"type\": \"Customer\",\r\n                    \"value\": \"Generic Customer Enterprises\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"addressInformation\": {\r\n                \"addressLine1\": \"7150 BRYAN DAIRY ROAD\",\r\n                \"addressLine2\": \"\",\r\n                \"cityName\": \"KENMORE\",\r\n                \"countryCode\": \"USA\",\r\n                \"stateCode\": \"WA\",\r\n                \"zipCode\": \"98028\"\r\n            },\r\n            \"sequenceNo\": 2,\r\n            \"type\": 2,\r\n            \"scheduledTimeFrom\": \"2020-02-20T08:00:00\",\r\n            \"scheduledTimeTo\": \"2020-10-20T08:00:00\",\r\n            \"stopReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"FASANGMKE\",\r\n                    \"type\": \"Customer\",\r\n                    \"value\": \"Generic Customer Enterprises\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"requestedDeliveryDate\": \"2020-02-27T15:00:00\",\r\n    \"items\": [\r\n        {\r\n            \"itemCode\": \"100-1900\",\r\n            \"itemNumber\": \"100056006\",\r\n            \"itemDescription\": \"CONCRETE BUCKET 1\\\/2 YD\",\r\n            \"units\": 10,\r\n            \"unitTypeCode\": \"EACH\",\r\n            \"packageUnits\": 2,\r\n            \"packageTypeCode\": \"BAG\",\r\n            \"weight\": 330,\r\n            \"weightUomCode\": \"LB\",\r\n            \"height\": 99.998999999999995225152815692126750946044921875,\r\n            \"heightUomCode\": \"IN\",\r\n            \"length\": 99.998999999999995225152815692126750946044921875,\r\n            \"lengthUomCode\": \"IN\",\r\n            \"width\": 150,\r\n            \"widthUomCode\": \"IN\",\r\n            \"declaredValue\": 2285.88999999999987267074175179004669189453125,\r\n            \"declaredValueCurrencyCode\": \"USD\",\r\n            \"volume\": 868.0385999999999739884515292942523956298828125,\r\n            \"volumeUomCode\": \"CUFT\",\r\n            \"itemPrice\": 20.5,\r\n            \"itemPriceCurrencyCode\": \"USD\",\r\n            \"isTemperatureControlled\": false,\r\n            \"isHazmat\": false,\r\n            \"hazardousItemInfo\": {\r\n                \"unnumber\": 0,\r\n                \"packingGroup\": 0,\r\n                \"receptacleSize\": 0,\r\n                \"hazardousClass\": null,\r\n                \"numberofReceptacles\": 0,\r\n                \"unitofMeasure\": null,\r\n                \"containerType\": null,\r\n                \"hazardousDescription\": null,\r\n                \"hazardousPhoneNumber\": null,\r\n                \"shippingName\": null\r\n            },\r\n            \"htscode\": null,\r\n            \"sku\": \"Sku00001\",\r\n            \"purchaseOrderNumber\": null,\r\n            \"itemReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"1001\",\r\n                    \"type\": \"CommodityCode\"\r\n                },\r\n                {\r\n                    \"value\": \"c60\",\r\n                    \"type\": \"FreightClass\"\r\n                },\r\n                {\r\n                    \"value\": \"60\",\r\n                    \"type\": \"POQuantity\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"partnerIdentifierCode\": \"10-1-MCGEEHIF\"\r\n};\r\nrequest(options, function (error, response) { \r\n  if (error) throw new Error(error);\r\n  console.log(response.body);\r\n});\r\n"
          },
          {
            "lang": "C#",
            "source": "var client = new RestClient(\"https:\/\/api-uat-xpoconnect.xpo.com\/orderAPI\/rest\/v1\/Order\");\r\nclient.Timeout = -1;\r\nvar request = new RestRequest(Method.POST);\r\nrequest.AddHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXX\");\r\nrequest.AddHeader(\"xpoauthorization\", \"Bearer XXXXXXXXXXXXXXXXXXXXXXXXXXX\");\r\nrequest.AddHeader(\"Content-Type\", \"application\/json\");\r\nrequest.AddParameter(\"application\/json\", \"{\r\n    \"orderDate\": \"2020-10-12T12:08:09.31\",\r\n    \"transportationMode\": \"SEA\",\r\n    \"applicationSource\": \"2\",\r\n    \"orderNumber\": \"HouseBill676897\",\r\n    \"orderNotes\": [\r\n        {\r\n            \"type\": \"GoodsDescription\",\r\n            \"value\": \"test description\"\r\n        }\r\n    ],\r\n    \"orderReferenceNumbers\": [\r\n        {\r\n            \"type\": \"CREATEDBY\",\r\n            \"value\": \"FASANGMKE\"\r\n        }\r\n    ],\r\n    \"additionalServices\": [\r\n        {\r\n            \"name\": \"ServiceLevel\",\r\n            \"code\": \"5\"\r\n        },\r\n        {\r\n            \"name\": \"InsuranceType\",\r\n            \"code\": \"test\"\r\n        }\r\n    ],\r\n    \"stops\": [\r\n        {\r\n            \"addressInformation\": {\r\n                \"addressLine1\": \"7150 BRYAN DAIRY ROAD\",\r\n                \"addressLine2\": \"\",\r\n                \"cityName\": \"KENMORE\",\r\n                \"countryCode\": \"USA\",\r\n                \"stateCode\": \"WA\",\r\n                \"zipCode\": \"98028\"\r\n            },\r\n            \"type\": 1,\r\n            \"scheduledTimeFrom\": \"2020-02-20T08:00:00\",\r\n            \"scheduledTimeTo\": \"2020-02-20T08:00:00\",\r\n            \"sequenceNo\": 1,\r\n            \"stopReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"HITPRODEN\",\r\n                    \"type\": \"Shipper\",\r\n                    \"value\": \"ABC Corporation\"\r\n                },\r\n                {\r\n                    \"type\": \"ShipperReference\",\r\n                    \"value\": \"TestShipperReference\"\r\n                },\r\n                {\r\n                    \"type\": \"Instructions\",\r\n                    \"value\": \"testPickupInstructions\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"addressInformation\": {\r\n                \"addressLine1\": \"7150 BRYAN DAIRY ROAD\",\r\n                \"addressLine2\": \"\",\r\n                \"cityName\": \"KENMORE\",\r\n                \"countryCode\": \"USA\",\r\n                \"stateCode\": \"WA\",\r\n                \"zipCode\": \"98028\"\r\n            },\r\n            \"type\": 3,\r\n            \"sequenceNo\": 3,\r\n            \"scheduledTimeFrom\": \"2020-02-20T08:00:00\",\r\n            \"scheduledTimeTo\": \"2020-10-20T08:00:00\",\r\n            \"stopReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"FASANGMKE\",\r\n                    \"type\": \"Consignee\",\r\n                    \"value\": \"Generic Customer Enterprises\"\r\n                },\r\n                {\r\n                    \"type\": \"ConsigneeReference\",\r\n                    \"value\": \"TestConsigneeReference\"\r\n                },\r\n                {\r\n                    \"type\": \"Instructions\",\r\n                    \"value\": \"testPickupInstructions\"\r\n                },\r\n                {\r\n                    \"code\": \"FASANGMKE\",\r\n                    \"type\": \"Customer\",\r\n                    \"value\": \"Generic Customer Enterprises\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"addressInformation\": {\r\n                \"addressLine1\": \"7150 BRYAN DAIRY ROAD\",\r\n                \"addressLine2\": \"\",\r\n                \"cityName\": \"KENMORE\",\r\n                \"countryCode\": \"USA\",\r\n                \"stateCode\": \"WA\",\r\n                \"zipCode\": \"98028\"\r\n            },\r\n            \"sequenceNo\": 2,\r\n            \"type\": 2,\r\n            \"scheduledTimeFrom\": \"2020-02-20T08:00:00\",\r\n            \"scheduledTimeTo\": \"2020-10-20T08:00:00\",\r\n            \"stopReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"FASANGMKE\",\r\n                    \"type\": \"Customer\",\r\n                    \"value\": \"Generic Customer Enterprises\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"requestedDeliveryDate\": \"2020-02-27T15:00:00\",\r\n    \"items\": [\r\n        {\r\n            \"itemCode\": \"100-1900\",\r\n            \"itemNumber\": \"100056006\",\r\n            \"itemDescription\": \"CONCRETE BUCKET 1\\\/2 YD\",\r\n            \"units\": 10,\r\n            \"unitTypeCode\": \"EACH\",\r\n            \"packageUnits\": 2,\r\n            \"packageTypeCode\": \"BAG\",\r\n            \"weight\": 330,\r\n            \"weightUomCode\": \"LB\",\r\n            \"height\": 99.998999999999995225152815692126750946044921875,\r\n            \"heightUomCode\": \"IN\",\r\n            \"length\": 99.998999999999995225152815692126750946044921875,\r\n            \"lengthUomCode\": \"IN\",\r\n            \"width\": 150,\r\n            \"widthUomCode\": \"IN\",\r\n            \"declaredValue\": 2285.88999999999987267074175179004669189453125,\r\n            \"declaredValueCurrencyCode\": \"USD\",\r\n            \"volume\": 868.0385999999999739884515292942523956298828125,\r\n            \"volumeUomCode\": \"CUFT\",\r\n            \"itemPrice\": 20.5,\r\n            \"itemPriceCurrencyCode\": \"USD\",\r\n            \"isTemperatureControlled\": false,\r\n            \"isHazmat\": false,\r\n            \"hazardousItemInfo\": {\r\n                \"unnumber\": 0,\r\n                \"packingGroup\": 0,\r\n                \"receptacleSize\": 0,\r\n                \"hazardousClass\": null,\r\n                \"numberofReceptacles\": 0,\r\n                \"unitofMeasure\": null,\r\n                \"containerType\": null,\r\n                \"hazardousDescription\": null,\r\n                \"hazardousPhoneNumber\": null,\r\n                \"shippingName\": null\r\n            },\r\n            \"htscode\": null,\r\n            \"sku\": \"Sku00001\",\r\n            \"purchaseOrderNumber\": null,\r\n            \"itemReferenceNumbers\": [\r\n                {\r\n                    \"code\": \"1001\",\r\n                    \"type\": \"CommodityCode\"\r\n                },\r\n                {\r\n                    \"value\": \"c60\",\r\n                    \"type\": \"FreightClass\"\r\n                },\r\n                {\r\n                    \"value\": \"60\",\r\n                    \"type\": \"POQuantity\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"partnerIdentifierCode\": \"10-1-MCGEEHIF\"\r\n}\",  ParameterType.RequestBody);\r\nIRestResponse response = client.Execute(request);\r\nConsole.WriteLine(response.Content);"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/convertquoteresponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error401"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "404": {
            "description": "Error 404 Unknown operation. Please contact XPO representative."
          }
        }
      },
      "delete": {
        "description": "​Cancel Order allows you to submit a request for cancelation of a previously created order, by using the shipment or order ID.",
        "operationId": "Cancel Order",
        "security": [
          {
            "api_key": [],
            "OAuth": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "required": true,
            "in": "header",
            "description": "Api Key as provided by XPO.",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "header",
            "description": "Valid bearer token generated using Token API.",
            "name": "xpoauthorization",
            "schema": {
              "type": "JWT token"
            }
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Order's Id to cancel order.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shipmentId",
            "in": "query",
            "description": "Shipment's Id to cancel order.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partnerIdentifierCode",
            "in": "query",
            "description": "Unique Partner Code.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl --location --request DELETE 'https:\/\/api-uat-xpoconnect.xpo.com\/orderAPI\/rest\/v1\/Order?orderId=1120450&partnerIdentifierCode=2-1-TESTCHN2' \\\r\n--header 'x-api-key: XXXXXXXXXXXXXXXXXXXXXXXXXXX' \\\r\n--header 'xpoauthorization: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'"
          },
          {
            "lang": "Java",
            "source": "OkHttpClient client = new OkHttpClient().newBuilder()\r\n  .build();\r\nRequest request = new Request.Builder()\r\n  .url(\"https:\/\/api-uat-xpoconnect.xpo.com\/orderAPI\/rest\/v1\/Order?orderId=1120450&partnerIdentifierCode=2-1-TESTCHN2\")\r\n  .method(\"DELETE\", null)\r\n  .addHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\")\r\n  .addHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\")\r\n  .build();\r\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "NodeJS",
            "source": "var request = require('request');\r\nvar options = {\r\n  'method': 'DELETE',\r\n  'url': 'https:\/\/api-uat-xpoconnect.xpo.com\/orderAPI\/rest\/v1\/Order?orderId=1120450&partnerIdentifierCode=2-1-TESTCHN2',\r\n  'headers': {\r\n    'x-api-key': 'XXXXXXXXXXXXXXXXXXXXXXXXXX',\r\n    'xpoauthorization': 'XXXXXXXXXXXXXXXXXXXXXXXX'\r\n  }\r\n};\r\nrequest(options, function (error, response) { \r\n  if (error) throw new Error(error);\r\n  console.log(response.body);\r\n});\r\n"
          },
          {
            "lang": "C#",
            "source": "var client = new RestClient(\"https:\/\/api-uat-xpoconnect.xpo.com\/orderAPI\/rest\/v1\/Order?orderId=1120450&partnerIdentifierCode=2-1-TESTCHN2\");\r\nclient.Timeout = -1;\r\nvar request = new RestRequest(Method.DELETE);\r\nrequest.AddHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\");\r\nrequest.AddHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\");\r\nIRestResponse response = client.Execute(request);\r\nConsole.WriteLine(response.Content);"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error401"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "404": {
            "description": "Error 404 Unknown operation. Please contact XPO representative."
          }
        }
      }
    },
    "/eventAPI/rest/v1/OrderStatus": {
      "get": {
        "description": "​The Events API allows ​you to ​retrieve order or shipment status details by providing OrderId/ShipmentId along with partner code. ​Additionally, you can also retrieve specific event updates by passing an eventName, or filter events by passing a specific to and from date range.\n\n User must provide valid API Key and token as header parameter to get order/shipment event status details",
        "operationId": "Order/Shipment Status",
        "security": [
          {
            "api_key": [],
            "OAuth": []
          }
        ],
        "tags": [
          "Events"
        ],
        "parameters": [
          {
            "required": true,
            "in": "header",
            "description": "Api Key as provided by XPO.",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "header",
            "description": "Valid bearer token generated using Token API.",
            "name": "xpoauthorization",
            "schema": {
              "type": "JWT token"
            }
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Order's Id to get Order status.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shipmentId",
            "in": "query",
            "description": "Shipment's Id to get Shipment status.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bolNumber",
            "in": "query",
            "description": "bolNumber to get Shipment status.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },

          {
            "name": "proNumber",
            "in": "query",
            "description": "proNumber to get Shipment status.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "description": "From Date to filter status results.",
            "type": "string",
            "schema": {
              "type": "date-time",
              "format": "mm/dd/yyyy (04/01/2020) or yyyy-mm-dd  (2020-04-01) or dd-month-yyyy (01-Apr-2020)"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "To Date to filter status results.",
            "required": false,
            "type": "string",
            "schema": {
              "type": "date-time",
              "format": "mm/dd/yyyy (04/01/2020) or yyyy-mm-dd  (2020-04-01) or dd-month-yyyy (01-Apr-2020)"
            }
          },
          {
            "name": "eventName",
            "description": "Event name to filter status results.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "PICKUP_APPOINTMENT",
                "DELIVERY_APPOINTMENT",
                "ARRIVED_AT_PICKUP",
                "COMPLETED_LOADING",
                "DEPARTED_FROM_PICKUP",
                "IN_TRANSIT",
                "ARRIVED_AT_DELIVERY",
                "COMPLETED_UNLOADING",
                "DEPARTED_FROM_DELIVERY",
                "SHIPMENT_ACKNOWLEDGED",
                "ATTEMPTED_DELIVERY",
                "SHIPMENT_DELAYED",
                "DELIVERY_PROBLEM",
                "SHIPMENT_CANCELLED"
              ]
            }
          },
          {
            "name": "partnerIdentifierCode",
            "in": "query",
            "description": "Unique Partner Code.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl --location --request GET 'https:\/\/api-uat-xpoconnect.xpo.com\/eventAPI\/rest\/v1\/OrderStatus?shipmentId=1672007&partnerIdentifierCode=2-1-TESTCHN2' \\\r\n--header 'x-api-key: XXXXXXXXXXXXXXXXXXXXXXXXXXX' \\\r\n--header 'xpoauthorization: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'"
          },
          {
            "lang": "Java",
            "source": "OkHttpClient client = new OkHttpClient().newBuilder()\r\n  .build();\r\nRequest request = new Request.Builder()\r\n  .url(\"https:\/\/api-uat-xpoconnect.xpo.com\/eventAPI\/rest\/v1\/OrderStatus?shipmentId=1672007&partnerIdentifierCode=2-1-TESTCHN2\")\r\n  .method(\"GET\", null)\r\n  .addHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\")\r\n  .addHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\")\r\n  .build();\r\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "NodeJS",
            "source": "var request = require('request');\r\nvar options = {\r\n  'method': 'GET',\r\n  'url': 'https:\/\/api-uat-xpoconnect.xpo.com\/eventAPI\/rest\/v1\/OrderStatus?shipmentId=1672007&partnerIdentifierCode=2-1-TESTCHN2',\r\n  'headers': {\r\n    'x-api-key': 'XXXXXXXXXXXXXXXXXXXXXXXXXX',\r\n    'xpoauthorization': 'XXXXXXXXXXXXXXXXXXXXXXXX'\r\n  }\r\n};\r\nrequest(options, function (error, response) { \r\n  if (error) throw new Error(error);\r\n  console.log(response.body);\r\n});\r\n"
          },
          {
            "lang": "C#",
            "source": "var client = new RestClient(\"https:\/\/api-uat-xpoconnect.xpo.com\/eventAPI\/rest\/v1\/OrderStatus?shipmentId=1672007&partnerIdentifierCode=2-1-TESTCHN2\");\r\nclient.Timeout = -1;\r\nvar request = new RestRequest(Method.GET);\r\nrequest.AddHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\");\r\nrequest.AddHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\");\r\nIRestResponse response = client.Execute(request);\r\nConsole.WriteLine(response.Content);"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/orderStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error401"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "404": {
            "description": "Error 404 Unknown operation. Please contact XPO representative."
          }
        }
      }
    },
    "/documentAPI/rest/v1/OrderDocuments": {
      "post": {
        "description": "This endpoint allows partner to retrieve the document's id and document's content using order Id(s) or shipment Id(s). \n\n You will need to provide a valid API key and token in the header parameter and document request details in the request payload.",
        "operationId": "Documents by Order Ids / Shipment Ids",
        "security": [
          {
            "api_key": [],
            "OAuth": []
          }
        ],
        "tags": [
          "Documents"
        ],
        "parameters": [
          {
            "required": true,
            "in": "header",
            "description": "Api Key as provided by XPO.",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "header",
            "description": "Valid bearer token generated using Token API.",
            "name": "xpoauthorization",
            "schema": {
              "type": "JWT token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/documentOrderRequest"
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl --location --request POST 'https:\/\/api-uat-xpoconnect.xpo.com\/documentAPI\/rest\/v1\/OrderDocuments\/' \\\r\n--header 'x-api-key: XXXXXXXXXXXXXX' \\\r\n--header 'xpoauthorization: XXXXXXXXXXXXXXXXXXXX' \\\r\n--header 'Content-Type: application\/json' \\\r\n--data-raw '{\r\n    \"partnerIdentifierCode\": \"2-1-TESTCHN2\",\r\n    \"transportationMode\": \"TL\",\r\n    \"shipmentIds\": [\"5121741\", \"5138261\", \"5137486\"],\r\n    \"orderIds\": [],\r\n    \"documentType\": [\r\n        \"BOL\",\r\n        \"csnv\"\r\n    ],\r\n    \"fileFormat\": [\r\n        \"tif\"\r\n    ],\r\n    \"from\": null,\r\n    \"to\": null,\r\n    \"isDocumentContentRequired\": false\r\n}'"
          },
          {
            "lang": "Java",
            "source": "OkHttpClient client = new OkHttpClient().newBuilder()\r\n  .build();\r\nMediaType mediaType = MediaType.parse(\"application\/json\");\r\nRequestBody body = RequestBody.create(mediaType, \"{\\r\\n    \\\"partnerIdentifierCode\\\": \\\"2-1-TESTCHN2\\\",\\r\\n    \\\"transportationMode\\\": \\\"TL\\\",\\r\\n    \\\"shipmentIds\\\": [\\\"5121741\\\", \\\"5138261\\\", \\\"5137486\\\"],\\r\\n    \\\"orderIds\\\": [],\\r\\n    \\\"documentType\\\": [\\r\\n        \\\"BOL\\\",\\r\\n        \\\"csnv\\\"\\r\\n    ],\\r\\n    \\\"fileFormat\\\": [\\r\\n        \\\"tif\\\"\\r\\n    ],\\r\\n    \\\"from\\\": null,\\r\\n    \\\"to\\\": null,\\r\\n    \\\"isDocumentContentRequired\\\": false\\r\\n}\");\r\nRequest request = new Request.Builder()\r\n  .url(\"https:\/\/api-uat-xpoconnect.xpo.com\/documentAPI\/rest\/v1\/OrderDocuments\/\")\r\n  .method(\"POST\", body)\r\n  .addHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXX\")\r\n  .addHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXXXXXXXX\")\r\n  .addHeader(\"Content-Type\", \"application\/json\")\r\n  .build();\r\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "NodeJS",
            "source": "var request = require('request');\r\nvar options = {\r\n  'method': 'POST',\r\n  'url': 'https:\/\/api-uat-xpoconnect.xpo.com\/documentAPI\/rest\/v1\/OrderDocuments\/',\r\n  'headers': {\r\n    'x-api-key': 'XXXXXXXXXXXXXXX',\r\n    'xpoauthorization': 'XXXXXXXXXXXXXXXXXXXXX',\r\n    'Content-Type': 'application\/json'\r\n  },\r\n  body: JSON.stringify({\"partnerIdentifierCode\":\"2-1-TESTCHN2\",\"transportationMode\":\"TL\",\"shipmentIds\":[\"5121741\",\"5138261\",\"5137486\"],\"orderIds\":[],\"documentType\":[\"BOL\",\"csnv\"],\"fileFormat\":[\"tif\"],\"from\":null,\"to\":null,\"isDocumentContentRequired\":false})\r\n\r\n};\r\nrequest(options, function (error, response) {\r\n  if (error) throw new Error(error);\r\n  console.log(response.body);\r\n});\r\n"
          },
          {
            "lang": "C#",
            "source": "var client = new RestClient(\"https:\/\/api-uat-xpoconnect.xpo.com\/documentAPI\/rest\/v1\/OrderDocuments\/\");\r\nclient.Timeout = -1;\r\nvar request = new RestRequest(Method.POST);\r\nrequest.AddHeader(\"x-api-key\", \"XXXXXXXXXXXXXXX\");\r\nrequest.AddHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXXXX\");\r\nrequest.AddHeader(\"Content-Type\", \"application\/json\");\r\nrequest.AddParameter(\"application\/json\", \"{\\r\\n    \\\"partnerIdentifierCode\\\": \\\"2-1-TESTCHN2\\\",\\r\\n    \\\"transportationMode\\\": \\\"TL\\\",\\r\\n    \\\"shipmentIds\\\": [\\\"5121741\\\", \\\"5138261\\\", \\\"5137486\\\"],\\r\\n    \\\"orderIds\\\": [],\\r\\n    \\\"documentType\\\": [\\r\\n        \\\"BOL\\\",\\r\\n        \\\"csnv\\\"\\r\\n    ],\\r\\n    \\\"fileFormat\\\": [\\r\\n        \\\"tif\\\"\\r\\n    ],\\r\\n    \\\"from\\\": null,\\r\\n    \\\"to\\\": null,\\r\\n    \\\"isDocumentContentRequired\\\": false\\r\\n}\",  ParameterType.RequestBody);\r\nIRestResponse response = client.Execute(request);\r\nConsole.WriteLine(response.Content);"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/documentOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error401"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "404": {
            "description": "Error 404 Unknown operation. Please contact XPO representative."
          }
        }
      }
    },
    "/documentAPI/rest/v1/Document": {
      "get": {
        "description": "This endpoint allows the customer to retrieve document content using single document id and response will be the binary content of the document.Input document Id can be retrieved using above document metadata retrieval endpoint by order id/shipment id..\n\n User must provide valid API Key and token as header parameter.",
        "operationId": "Download Single Document",
        "security": [
          {
            "api_key": [],
            "OAuth": []
          }
        ],
        "tags": [
          "Documents"
        ],
        "parameters": [
          {
            "required": true,
            "in": "header",
            "description": "Api Key as provided by XPO.",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "header",
            "description": "Valid bearer token generated using Token API.",
            "name": "xpoauthorization",
            "schema": {
              "type": "JWT token"
            }
          },
          {
            "name": "documentId",
            "in": "query",
            "description": "Unique Id to identify the document",
            "required": true,
            "type": "string"
          },
          {
            "name": "transportationMode",
            "in": "query",
            "description": "Transportation Mode such as TL, LTL, RAIL, DRAY etc.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerIdentifierCode",
            "in": "query",
            "description": "Unique identifier for the Partners in XPO Connect",
            "required": true,
            "type": "string"
          },
          {
            "name": "documentType",
            "in": "query",
            "description": "Type of Document such as BOL: Bill Of Lading, SPL: Shipping Labeletc. It's required only for LTL Transportation mode.",
            "required": false,
            "type": "string"
          },
          {
            "name": "fileFormat",
            "in": "query",
            "description": "Type of the file such as PDF, PNG, JPG etc.",
            "required": false,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl --location --request GET 'https:\/\/api-uat-xpoconnect.xpo.com\/documentAPI\/rest\/v1\/Document?documentId=fbd06efa-e936-4b5e-b66d-847b2cf23d20&transportationMode=TL&partnerIdentifierCode=2-1-TESTCHN2&documentType=BOL&fileFormat=TIF' \\\r\n--header 'x-api-key: XXXXXXXXXXXX' \\\r\n--header 'xpoauthorization: XXXXXXXXXXXXXXXXXXXXXXXXX'"
          },
          {
            "lang": "Java",
            "source": "OkHttpClient client = new OkHttpClient().newBuilder()\r\n  .build();\r\nRequest request = new Request.Builder()\r\n  .url(\"https:\/\/api-uat-xpoconnect.xpo.com\/documentAPI\/rest\/v1\/Document?documentId=fbd06efa-e936-4b5e-b66d-847b2cf23d20&transportationMode=TL&partnerIdentifierCode=2-1-TESTCHN2&documentType=BOL&fileFormat=TIF\")\r\n  .method(\"GET\", null)\r\n  .addHeader(\"x-api-key\", \"XXXXXXXXX\")\r\n  .addHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXXXXXXXXXXXXXXX\")\r\n  .build();\r\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "NodeJS",
            "source": "var request = require('request');\r\nvar options = {\r\n  'method': 'GET',\r\n  'url': 'https:\/\/api-uat-xpoconnect.xpo.com\/documentAPI\/rest\/v1\/Document?documentId=fbd06efa-e936-4b5e-b66d-847b2cf23d20&transportationMode=TL&partnerIdentifierCode=2-1-TESTCHN2&documentType=BOL&fileFormat=TIF',\r\n  'headers': {\r\n    'x-api-key': 'XXXXXXXXXXXXXXX',\r\n    'xpoauthorization': 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'\r\n  }\r\n};\r\nrequest(options, function (error, response) {\r\n  if (error) throw new Error(error);\r\n  console.log(response.body);\r\n});\r\n"
          },
          {
            "lang": "C#",
            "source": "var client = new RestClient(\"https:\/\/api-uat-xpoconnect.xpo.com\/documentAPI\/rest\/v1\/Document?documentId=fbd06efa-e936-4b5e-b66d-847b2cf23d20&transportationMode=TL&partnerIdentifierCode=2-1-TESTCHN2&documentType=BOL&fileFormat=TIF\");\r\nclient.Timeout = -1;\r\nvar request = new RestRequest(Method.GET);\r\nrequest.AddHeader(\"x-api-key\", \"XXXXXXXXXXXXXX\");\r\nrequest.AddHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXXXXXXXX\");\r\nIRestResponse response = client.Execute(request);\r\nConsole.WriteLine(response.Content);"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fileContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error401"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "404": {
            "description": "Error 404 Unknown operation. Please contact XPO representative."
          }
        }
      }
    },
    "/documentAPI/rest/v1/Documents": {
      "post": {
        "description": "This endpoint allows partner to retrieve multiple documents content. \n\n You will need to provide a valid API key and token in the header parameter and document request details in the request payload.",
        "operationId": "Download Multiple Documents",
        "security": [
          {
            "api_key": [],
            "OAuth": []
          }
        ],
        "tags": [
          "Documents"
        ],
        "parameters": [
          {
            "required": true,
            "in": "header",
            "description": "Api Key as provided by XPO.",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "header",
            "description": "Valid bearer token generated using Token API.",
            "name": "xpoauthorization",
            "schema": {
              "type": "JWT token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/multipleDcoumentsRequest"
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl --location --request POST 'https:\/\/api-uat-xpoconnect.xpo.com\/documentAPI\/rest\/v1\/Documents' \\\r\n--header 'x-api-key: XXXXXXXXXXXXXX' \\\r\n--header 'xpoauthorization: XXXXXXXXXXXXXXXXXXX' \\\r\n--header 'Content-Type: application\/json' \\\r\n--data-raw '{\r\n    \"partnerIdentifierCode\": \"2-1-TESTCHN2\",\r\n    \"transportationMode\": \"TL\",\r\n    \"documents\": [\r\n        {\r\n            \"id\": \"360c2f53-5d06-4a76-b91b-43db31ed993\",\r\n            \"type\": \"CSNV\",\r\n            \"fileFormat\": \"TIF\"\r\n        },\r\n        {\r\n            \"id\": \"7b416017-af0d-42c1-8c44-b1b314567429\",\r\n            \"type\": \"CSNV\",\r\n            \"fileFormat\": \"TIF\"\r\n        }\r\n    ]\r\n}'"
          },
          {
            "lang": "Java",
            "source": "OkHttpClient client = new OkHttpClient().newBuilder()\r\n  .build();\r\nMediaType mediaType = MediaType.parse(\"application\/json\");\r\nRequestBody body = RequestBody.create(mediaType, \"{\\r\\n    \\\"partnerIdentifierCode\\\": \\\"2-1-TESTCHN2\\\",\\r\\n    \\\"transportationMode\\\": \\\"TL\\\",\\r\\n    \\\"documents\\\": [\\r\\n        {\\r\\n            \\\"id\\\": \\\"360c2f53-5d06-4a76-b91b-43db31ed993\\\",\\r\\n            \\\"type\\\": \\\"CSNV\\\",\\r\\n            \\\"fileFormat\\\": \\\"TIF\\\"\\r\\n        },\\r\\n        {\\r\\n            \\\"id\\\": \\\"7b416017-af0d-42c1-8c44-b1b314567429\\\",\\r\\n            \\\"type\\\": \\\"CSNV\\\",\\r\\n            \\\"fileFormat\\\": \\\"TIF\\\"\\r\\n        }\\r\\n    ]\\r\\n}\");\r\nRequest request = new Request.Builder()\r\n  .url(\"https:\/\/api-uat-xpoconnect.xpo.com\/documentAPI\/rest\/v1\/Documents\")\r\n  .method(\"POST\", body)\r\n  .addHeader(\"x-api-key\", \"XXXXXXXXXXXXXXX\")\r\n  .addHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXXX\")\r\n  .addHeader(\"Content-Type\", \"application\/json\")\r\n  .build();\r\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "NodeJS",
            "source": "var request = require('request');\r\nvar options = {\r\n  'method': 'POST',\r\n  'url': 'https:\/\/api-uat-xpoconnect.xpo.com\/documentAPI\/rest\/v1\/Documents',\r\n  'headers': {\r\n    'x-api-key': 'XXXXXXXXXXXXXX',\r\n    'xpoauthorization': 'XXXXXXXXXXXXXXXXXXXXX',\r\n    'Content-Type': 'application\/json'\r\n  },\r\n  body: JSON.stringify({\"partnerIdentifierCode\":\"2-1-TESTCHN2\",\"transportationMode\":\"TL\",\"documents\":[{\"id\":\"360c2f53-5d06-4a76-b91b-43db31ed993\",\"type\":\"CSNV\",\"fileFormat\":\"TIF\"},{\"id\":\"7b416017-af0d-42c1-8c44-b1b314567429\",\"type\":\"CSNV\",\"fileFormat\":\"TIF\"}]})\r\n\r\n};\r\nrequest(options, function (error, response) {\r\n  if (error) throw new Error(error);\r\n  console.log(response.body);\r\n});\r\n"
          },
          {
            "lang": "C#",
            "source": "var client = new RestClient(\"https:\/\/api-uat-xpoconnect.xpo.com\/documentAPI\/rest\/v1\/Documents\");\r\nclient.Timeout = -1;\r\nvar request = new RestRequest(Method.POST);\r\nrequest.AddHeader(\"x-api-key\", \"XXXXXXXXXXXXXX\");\r\nrequest.AddHeader(\"xpoauthorization\", \"XXXXXXXXXXXXX\");\r\nrequest.AddHeader(\"Content-Type\", \"application\/json\");\r\nrequest.AddParameter(\"application\/json\", \"{\\r\\n    \\\"partnerIdentifierCode\\\": \\\"2-1-TESTCHN2\\\",\\r\\n    \\\"transportationMode\\\": \\\"TL\\\",\\r\\n    \\\"documents\\\": [\\r\\n        {\\r\\n            \\\"id\\\": \\\"360c2f53-5d06-4a76-b91b-43db31ed993\\\",\\r\\n            \\\"type\\\": \\\"CSNV\\\",\\r\\n            \\\"fileFormat\\\": \\\"TIF\\\"\\r\\n        },\\r\\n        {\\r\\n            \\\"id\\\": \\\"7b416017-af0d-42c1-8c44-b1b314567429\\\",\\r\\n            \\\"type\\\": \\\"CSNV\\\",\\r\\n            \\\"fileFormat\\\": \\\"TIF\\\"\\r\\n        }\\r\\n    ]\\r\\n}\",  ParameterType.RequestBody);\r\nIRestResponse response = client.Execute(request);\r\nConsole.WriteLine(response.Content);"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fileContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error401"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "404": {
            "description": "Error 404 Unknown operation. Please contact XPO representative."
          }
        }
      }
    },
    "/invoiceAPI/rest/v1/Customer": {
      "post": {
        "description": "This endpoint allows customer partner to retrieve invoice details either by Order Id or Shipment Number or Order Reference Numbers e.g.Pro Number, Bol Number. \n\n You will need to provide a valid API key and token in the header parameter and inovice request details in the request payload.",
        "operationId": "Customer Invoice",
        "security": [
          {
            "api_key": [],
            "OAuth": []
          }
        ],
        "tags": [
          "Invoices"
        ],
        "parameters": [
          {
            "required": true,
            "in": "header",
            "description": "Api Key as provided by XPO.",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "header",
            "description": "Valid bearer token generated using Token API.",
            "name": "xpoauthorization",
            "schema": {
              "type": "JWT token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/customerInvoiceRequest"
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl --location --request POST 'https:\/\/api-uat-xpoconnect.xpo.com\/invoiceAPI\/rest\/v1\/Customer' \\\r\n--header 'x-api-key: XXXXXXXXXXXXXX' \\\r\n--header 'xpoauthorization: XXXXXXXXXXXXXXXXXXX' \\\r\n--header 'Content-Type: application\/json' \\\r\n--data-raw '{\r\n    \"orderId\": 0,\r\n    \"partnerIdentifierCode\": \"2-1-TESTCHN2\",\r\n    \"shipmentNumber\":null,\r\n    \"orderReferences\": [\r\n        {\r\n            \"referenceType\": \"proNumber\",\r\n            \"referenceNumber\": \"9661151\"\r\n        }\r\n    ]\r\n}'"
          },
          {
            "lang": "Java",
            "source": "OkHttpClient client = new OkHttpClient().newBuilder()\r\n  .build();\r\nMediaType mediaType = MediaType.parse(\"application\/json\");\r\nRequestBody body = RequestBody.create(mediaType, \"{\r\n    \"orderId\": 0,\r\n    \"partnerIdentifierCode\": \"2-1-TESTCHN2\",\r\n    \"shipmentNumber\":null,\r\n    \"orderReferences\": [\r\n        {\r\n            \"referenceType\": \"proNumber\",\r\n            \"referenceNumber\": \"9661151\"\r\n        }\r\n    ]\r\n}\");\r\nRequest request = new Request.Builder()\r\n  .url(\"https:\/\/api-uat-xpoconnect.xpo.com\/invoiceAPI\/rest\/v1\/Customer\")\r\n  .method(\"POST\", body)\r\n  .addHeader(\"x-api-key\", \"XXXXXXXXXXXXXXX\")\r\n  .addHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXXX\")\r\n  .addHeader(\"Content-Type\", \"application\/json\")\r\n  .build();\r\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "NodeJS",
            "source": "var request = require('request');\r\nvar options = {\r\n  'method': 'POST',\r\n  'url': 'https:\/\/api-uat-xpoconnect.xpo.com\/invoiceAPI\/rest\/v1\/Customer',\r\n  'headers': {\r\n    'x-api-key': 'XXXXXXXXXXXXXX',\r\n    'xpoauthorization': 'XXXXXXXXXXXXXXXXXXXXX',\r\n    'Content-Type': 'application\/json'\r\n  },\r\n  body: JSON.stringify({\r\n    \"orderId\": 0,\r\n    \"partnerIdentifierCode\": \"2-1-TESTCHN2\",\r\n    \"shipmentNumber\":null,\r\n    \"orderReferences\": [\r\n        {\r\n            \"referenceType\": \"proNumber\",\r\n            \"referenceNumber\": \"9661151\"\r\n        }\r\n    ]\r\n})\r\n\r\n};\r\nrequest(options, function (error, response) {\r\n  if (error) throw new Error(error);\r\n  console.log(response.body);\r\n});\r\n"
          },
          {
            "lang": "C#",
            "source": "var client = new RestClient(\"https:\/\/api-uat-xpoconnect.xpo.com\/invoiceAPI\/rest\/v1\/Customer\");\r\nclient.Timeout = -1;\r\nvar request = new RestRequest(Method.POST);\r\nrequest.AddHeader(\"x-api-key\", \"XXXXXXXXXXXXXX\");\r\nrequest.AddHeader(\"xpoauthorization\", \"XXXXXXXXXXXXX\");\r\nrequest.AddHeader(\"Content-Type\", \"application\/json\");\r\nrequest.AddParameter(\"application\/json\", \"{\r\n    \"orderId\": 0,\r\n    \"partnerIdentifierCode\": \"2-1-TESTCHN2\",\r\n    \"shipmentNumber\":null,\r\n    \"orderReferences\": [\r\n        {\r\n            \"referenceType\": \"proNumber\",\r\n            \"referenceNumber\": \"9661151\"\r\n        }\r\n    ]\r\n}\",  ParameterType.RequestBody);\r\nIRestResponse response = client.Execute(request);\r\nConsole.WriteLine(response.Content);"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customerInvoiceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error401"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "404": {
            "description": "Error 404 Unknown operation. Please contact XPO representative."
          }
        }
      }
    },
    "/invoiceAPI/rest/v1/Carrier": {
      "post": {
        "description": "This endpoint allows carrier partner to retrieve invoice details either by Order Number or Shipment Number or Order Reference Numbers e.g.Pro Number, Bol Number. \n\n You will need to provide a valid API key and token in the header parameter and inovice request details in the request payload.",
        "operationId": "Carrier Invoice",
        "security": [
          {
            "api_key": [],
            "OAuth": []
          }
        ],
        "tags": [
          "Invoices"
        ],
        "parameters": [
          {
            "required": true,
            "in": "header",
            "description": "Api Key as provided by XPO.",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "header",
            "description": "Valid bearer token generated using Token API.",
            "name": "xpoauthorization",
            "schema": {
              "type": "JWT token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/carrierInvoiceRequest"
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl --location --request POST 'https:\/\/api-uat-xpoconnect.xpo.com\/invoiceAPI\/rest\/v1\/Carrier' \\\r\n--header 'x-api-key: XXXXXXXXXXXXXX' \\\r\n--header 'xpoauthorization: XXXXXXXXXXXXXXXXXXX' \\\r\n--header 'Content-Type: application\/json' \\\r\n--data-raw '{\r\n  \"orderNumber\": \"9541587\",\r\n  \"partnerIdentifierCode\": \"2-2-TESTCHN2\",\r\n  \"shipmentNumber\": null,\r\n  \"orderReferences\": null\r\n}'"
          },
          {
            "lang": "Java",
            "source": "OkHttpClient client = new OkHttpClient().newBuilder()\r\n  .build();\r\nMediaType mediaType = MediaType.parse(\"application\/json\");\r\nRequestBody body = RequestBody.create(mediaType, \"{\r\n  \"orderNumber\": \"9541587\",\r\n  \"partnerIdentifierCode\": \"2-2-TESTCHN2\",\r\n  \"shipmentNumber\": null,\r\n  \"orderReferences\": null\r\n}\");\r\nRequest request = new Request.Builder()\r\n  .url(\"https:\/\/api-uat-xpoconnect.xpo.com\/invoiceAPI\/rest\/v1\/Carrier\")\r\n  .method(\"POST\", body)\r\n  .addHeader(\"x-api-key\", \"XXXXXXXXXXXXXXX\")\r\n  .addHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXXX\")\r\n  .addHeader(\"Content-Type\", \"application\/json\")\r\n  .build();\r\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "NodeJS",
            "source": "var request = require('request');\r\nvar options = {\r\n  'method': 'POST',\r\n  'url': 'https:\/\/api-uat-xpoconnect.xpo.com\/invoiceAPI\/rest\/v1\/Carrier',\r\n  'headers': {\r\n    'x-api-key': 'XXXXXXXXXXXXXX',\r\n    'xpoauthorization': 'XXXXXXXXXXXXXXXXXXXXX',\r\n    'Content-Type': 'application\/json'\r\n  },\r\n  body: JSON.stringify({\r\n  \"orderNumber\": \"9541587\",\r\n  \"partnerIdentifierCode\": \"2-2-TESTCHN2\",\r\n  \"shipmentNumber\": null,\r\n  \"orderReferences\": null\r\n})\r\n\r\n};\r\nrequest(options, function (error, response) {\r\n  if (error) throw new Error(error);\r\n  console.log(response.body);\r\n});\r\n"
          },
          {
            "lang": "C#",
            "source": "var client = new RestClient(\"https:\/\/api-uat-xpoconnect.xpo.com\/invoiceAPI\/rest\/v1\/Carrier\");\r\nclient.Timeout = -1;\r\nvar request = new RestRequest(Method.POST);\r\nrequest.AddHeader(\"x-api-key\", \"XXXXXXXXXXXXXX\");\r\nrequest.AddHeader(\"xpoauthorization\", \"XXXXXXXXXXXXX\");\r\nrequest.AddHeader(\"Content-Type\", \"application\/json\");\r\nrequest.AddParameter(\"application\/json\", \"{\r\n  \"orderNumber\": \"9541587\",\r\n  \"partnerIdentifierCode\": \"2-2-TESTCHN2\",\r\n  \"shipmentNumber\": null,\r\n  \"orderReferences\": null\r\n}\",  ParameterType.RequestBody);\r\nIRestResponse response = client.Execute(request);\r\nConsole.WriteLine(response.Content);"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/carrierInvoiceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error401"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "404": {
            "description": "Error 404 Unknown operation. Please contact XPO representative."
          }
        }
      }
    },
    "/shipmentAPI/rest/v1/shipmentSearch": {
      "post": {
        "description": "This endpoint allows customer partner to search for shipments. \n\n You will need to provide a valid API key and token in the header parameter and shipment request details in the request payload.",
        "operationId": "Shipment Search",
        "security": [
          {
            "api_key": [],
            "OAuth": []
          }
        ],
        "tags": [
          "Shipments"
        ],
        "parameters": [
          {
            "required": true,
            "in": "header",
            "description": "Api Key as provided by XPO.",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "header",
            "description": "Valid bearer token generated using Token API.",
            "name": "xpoauthorization",
            "schema": {
              "type": "JWT token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shipmentSearchRequest"
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl --location --request POST 'https://api-uat-xpoconnect.xpo.com/shipmentAPI/rest/v1/shipmentSearch/' \\\n--header 'x-api-key: XXXXXXXXXXXXXXXXX' \\\n--header 'xpoauthorization: XXXXXXXXXXXXXXXXX' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{  \n  \"shipmentStatus\": \"Delivered\",\n  \"estimateTimeArrival\": {\n    \"fromDate\": \"2021-03-07T00:00:00+00:00\",\n    \"toDate\": \"2021-03-09T00:00:00+00:00\"\n  },\n  \"partnerIdentifierCode\": \"10-1-MOHAWKNYC\",\n  \"pageNumber\": 1,\n  \"pageSize\": 10\n}'"
          },
          {
            "lang": "Java",
            "source": "OkHttpClient client = new OkHttpClient().newBuilder()\n  .build();\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{  \\r\\n  \\\"shipmentStatus\\\": \\\"Delivered\\\",\\r\\n  \\\"estimateTimeArrival\\\": {\\r\\n    \\\"fromDate\\\": \\\"2021-03-07T00:00:00+00:00\\\",\\r\\n    \\\"toDate\\\": \\\"2021-03-09T00:00:00+00:00\\\"\\r\\n  },\\r\\n  \\\"partnerIdentifierCode\\\": \\\"10-1-MOHAWKNYC\\\",\\r\\n  \\\"pageNumber\\\": 1,\\r\\n  \\\"pageSize\\\": 10\\r\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://api-uat-xpoconnect.xpo.com/shipmentAPI/rest/v1/shipmentSearch/\")\n  .method(\"POST\", body)\n  .addHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXX\")\n  .addHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXXXXX\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .build();\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "NodeJS",
            "source": "var request = require('request');\nvar options = {\n  'method': 'POST',\n  'url': 'https://api-uat-xpoconnect.xpo.com/shipmentAPI/rest/v1/shipmentSearch/',\n  'headers': {\n    'x-api-key': 'XXXXXXXXXXXXXXXXX',\n    'xpoauthorization': 'XXXXXXXXXXXXXXXXX',\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    \"shipmentStatus\": \"Delivered\",\n    \"estimateTimeArrival\": {\n      \"fromDate\": \"2021-03-07T00:00:00+00:00\",\n      \"toDate\": \"2021-03-09T00:00:00+00:00\"\n    },\n    \"partnerIdentifierCode\": \"10-1-MOHAWKNYC\",\n    \"pageNumber\": 1,\n    \"pageSize\": 10\n  })\n\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});"
          },
          {
            "lang": "C#",
            "source": "var client = new RestClient(\"https://api-uat-xpoconnect.xpo.com/shipmentAPI/rest/v1/shipmentSearch/\");\nclient.Timeout = -1;\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXX\");\nrequest.AddHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXXXXX\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddParameter(\"application/json\", \"{  \\r\\n  \\\"shipmentStatus\\\": \\\"Delivered\\\",\\r\\n  \\\"estimateTimeArrival\\\": {\\r\\n    \\\"fromDate\\\": \\\"2021-03-07T00:00:00+00:00\\\",\\r\\n    \\\"toDate\\\": \\\"2021-03-09T00:00:00+00:00\\\"\\r\\n  },\\r\\n  \\\"partnerIdentifierCode\\\": \\\"10-1-MOHAWKNYC\\\",\\r\\n  \\\"pageNumber\\\": 1,\\r\\n  \\\"pageSize\\\": 10\\r\\n}\",  ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);\nConsole.WriteLine(response.Content);"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shipmentSearchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error401"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "404": {
            "description": "Error 404 Unknown operation. Please contact XPO representative."
          }
        }
      }
    },
    "/shipmentAPI/rest/v1/shipmentDetails": {
      "get": {
        "description": "This endpoint allows allows partner to retrieve complete details of shipments except events using partnerIdentifierCode and either of shipmentnumber/masterbillnumber/globaltracking/housebillnumber. \n\n User must provide valid API Key and token as header parameter.",
        "operationId": "Shipment Details",
        "security": [
          {
            "api_key": [],
            "OAuth": []
          }
        ],
        "tags": [
          "Shipments"
        ],
        "parameters": [
          {
            "required": true,
            "in": "header",
            "description": "Api Key as provided by XPO.",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "header",
            "description": "Valid bearer token generated using Token API.",
            "name": "xpoauthorization",
            "schema": {
              "type": "JWT token"
            }
          },
          {
            "name": "partnerIdentifierCode",
            "in": "query",
            "description": "Partner identifier code used for uniquely identify the partner.",
            "required": true,
            "type": "string"
          },
          {
            "name": "shipmentNumber",
            "in": "query",
            "description": "This field represents the unique shipment number generated from TMS",
            "required": false,
            "type": "string"
          },
          {
            "name": "masterBillNumber",
            "in": "query",
            "description": "Master Bill Number",
            "required": false,
            "type": "string"
          },
          {
            "name": "globalTrackingNumber",
            "in": "query",
            "description": "XPO global Tracking number",
            "required": false,
            "type": "string"
          },
          {
            "name": "houseBillNumber",
            "in": "query",
            "description": "House Bill Number",
            "required": false,
            "type": "string"
          }
        ],
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl --location --request GET 'https://api-uat-xpoconnect.xpo.com/shipmentAPI/rest/v1/shipmentDetails?partnerIdentifierCode=10-1-TESTCHN2&shipmentNumber=&masterBillNumber&globalTrackingNumber=XPOTESTNOTXXXX&houseBillNumber' \\\n--header 'x-api-key: XXXXXXXXXXXXXX' \\\n--header 'xpoauthorization: XXXXXXXXXXXXXX' \\"
          },
          {
            "lang": "Java",
            "source": "OkHttpClient client = new OkHttpClient().newBuilder()\n  .build();\nRequest request = new Request.Builder()\n  .url(\"https://api-uat-xpoconnect.xpo.com/shipmentAPI/rest/v1/shipmentDetails?partnerIdentifierCode=10-1-TESTCHN2&shipmentNumber=&masterBillNumber&globalTrackingNumber=XPOTESTNOTXXXX&houseBillNumber\")\n  .method(\"GET\", null)\n  .addHeader(\"x-api-key\", \"XXXXXXXXXXXXXX\")\n  .addHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXX\")\n  .build();\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "NodeJS",
            "source": "var request = require('request');\nvar options = {\n  'method': 'GET',\n  'url': 'https://api-uat-xpoconnect.xpo.com/shipmentAPI/rest/v1/shipmentDetails?partnerIdentifierCode=10-1-TESTCHN2&shipmentNumber=&masterBillNumber&globalTrackingNumber=XPOTESTNOTXXXX&houseBillNumber',\n  'headers': {\n    'x-api-key': 'XXXXXXXXXXXXXX',\n    'xpoauthorization': 'XXXXXXXXXXXXXX',\n  }\n};\nrequest(options, function (error, response) {\n  if (error) throw new Error(error);\n  console.log(response.body);\n});"
          },
          {
            "lang": "C#",
            "source": "var client = new RestClient(\"https://api-uat-xpoconnect.xpo.com/shipmentAPI/rest/v1/shipmentDetails?partnerIdentifierCode=10-1-TESTCHN2&shipmentNumber=&masterBillNumber&globalTrackingNumber=XPOTESTNOTXXXX&houseBillNumber\");\nclient.Timeout = -1;\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"x-api-key\", \"XXXXXXXXXXXXXX\");\nrequest.AddHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXX\");\nIRestResponse response = client.Execute(request);\nConsole.WriteLine(response.Content);"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shipmentDetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error401"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "404": {
            "description": "Error 404 Unknown operation. Please contact XPO representative."
          }
        }
      }
    },
    "/shipmentAPI/rest/v1/shipmentBooking": {
      "post": {
        "description": "This endpoint allows customer partner to send the booking information. \n\n You will need to provide a valid API key and token in the header parameter and shipment request details in the request payload.",
        "operationId": "Shipment Booking",
        "security": [
          {
            "api_key": [],
            "OAuth": []
          }
        ],
        "tags": [
          "Shipments"
        ],
        "parameters": [
          {
            "required": true,
            "in": "header",
            "description": "Api Key as provided by XPO.",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "header",
            "description": "Valid bearer token generated using Token API.",
            "name": "xpoauthorization",
            "schema": {
              "type": "JWT token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shipmentBookingRequest"
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "Curl",
            "source": "curl --location --request POST 'https://api-uat-xpoconnect.xpo.com/shipmentAPI/rest/v1/shipmentBooking/' \\\n--header 'x-api-key: XXXXXXXXXXXXXXXXXXX' \\\n--header 'xpoauthorization: XXXXXXXXXXXXXXXXXXX' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n   \"masterBillNumber\":\"898TestMaster\",\n   \"partnerIdentifierCode\":\"10-1-TESTCHN2\",\n   \"shipment\":[\n      {\n         \"houseBillNumber\":\"HB23042021906\",\n         \"transportationMode\":\"Sea\",\n         \"goodsDescription\":\"Test Description\",\n         \"totalQuantity\":14,\n         \"quantityUomCode\":\"PLT\",\n         \"totalWeight\":13,\n         \"chargeableWeight\":10,\n         \"weightUomCode\":\"KG\",\n         \"originCode\":\"CNSHG\",\n         \"originETD\":\"2021-05-19T19:22:00.942Z\",\n         \"destinationCode\":\"USLGB\",\n         \"destinationETA\":\"2021-05-20T19:22:00.942Z\",\n         \"incoTermsCode\":\"FOB\",\n         \"additionalTerms\":\"Additionalterms\",\n         \"locations\":[\n            {\n               \"locationType\":\"Shipper\",\n               \"locationCode\":\"XPOC-CHB\",\n               \"locationName\":\"XPO Customs Clearance Solutions, LLC\",\n               \"addressLine1\":\"290 GERZEVSKE LN\",\n               \"cityName\":\"CAROL STREAM\",\n               \"stateCode\":\"IL\",\n               \"zipCode\":\"60188\",\n               \"countryCode\":\"US\",\n               \"countryName\":\"United States\"\n            },\n            {\n               \"locationType\":\"Delivery\",\n               \"locationCode\":\"XPO-SZX\",\n               \"locationName\":\"XPO GLOBAL FORWARDING SHANGHAI LIMITED SHENZHEN\",\n               \"addressLine1\":\"Room E-F, 24 Floor, Tower B, Hong Long\",\n               \"addressLine2\":\"Century Plaza, 4002 East Shennan Road, Luohu\",\n               \"cityName\":\"Shenzhen\",\n               \"zipCode\":\"518002\",\n               \"countryCode\":\"CN\",\n               \"countryName\":\"China\"\n            },\n            {\n               \"locationType\":\"Consignee\",\n               \"locationCode\":\"WUHMATWUH1\",\n               \"locationName\":\"WUHU MATY AIR-CONDITIONING EQUIPMENT CO, LTD\",\n               \"addressLine1\":\"SILVERLAKE ROAD AND HENGSHAN ROAD\",\n               \"addressLine2\":\"INTERSECTION OF WEDA, WUHU, ANHUI PROVINCE, CINA\",\n               \"cityName\":\"WUHU\",\n               \"countryCode\":\"CN\",\n               \"countryName\":\"China\"\n            },\n            {\n               \"locationType\":\"Intermediate\",\n               \"locationCode\":\"WUHMATWUH1\",\n               \"locationName\":\"WUHU MATY AIR-CONDITIONING EQUIPMENT CO, LTD\",\n               \"addressLine1\":\"SILVERLAKE ROAD AND HENGSHAN ROAD\",\n               \"addressLine2\":\"INTERSECTION OF WEDA, WUHU, ANHUI PROVINCE, CINA\",\n               \"cityName\":\"WUHU\",\n               \"countryCode\":\"US\",\n               \"countryName\":\"China\"\n            },\n            {\n               \"locationType\":\"Intermediate\",\n               \"locationCode\":\"MOHAWKNYC\",\n               \"locationName\":\"Mohawk Group Inc\",\n               \"addressLine1\":\"37 E 18TH ST\",\n               \"cityName\":\"NEW YORK\",\n               \"stateCode\":\"NY\",\n               \"zipCode\":\"10003\",\n               \"countryCode\":\"US\",\n               \"countryName\":\"United States\"\n            },\n            {\n               \"locationType\":\"Intermediate\",\n               \"locationCode\":\"GEODISPAF\",\n               \"locationName\":\"GEODIS\",\n               \"addressLine1\":\"1101 Whitaker Rd\",\n               \"cityName\":\"Plainfield\",\n               \"stateCode\":\"IN\",\n               \"zipCode\":\"46168\",\n               \"countryCode\":\"US\",\n               \"countryName\":\"United States\"\n            },\n            {\n               \"locationType\":\"Delivery\",\n               \"locationCode\":\"MOHAWKNYC\",\n               \"locationName\":\"Mohawk Group Inc\",\n               \"addressLine1\":\"37 E 18TH ST\",\n               \"cityName\":\"NEW YORK\",\n               \"stateCode\":\"NY\",\n               \"zipCode\":\"10003\",\n               \"countryCode\":\"US\",\n               \"countryName\":\"United States\"\n            }\n         ]\n      }\n   ],\n   \"notes\":[\n      {\n         \"type\":\"Special Instructions\",\n         \"value\":\"Special Instructions\"\n      }\n   ],\n   \"packingLineDetails\":[\n      {\n         \"productNumber\":\"1\",\n         \"packageQuantity\":750,\n         \"packageTypeCode\":\"CTN\",\n         \"packageDescription\":\"DEHUMIDIFIER\",\n         \"height\":10,\n         \"length\":10,\n         \"width\":10,\n         \"hlwUomCode\":\"IN\",\n         \"weight\":15000,\n         \"weightUomCode\":\"KG\",\n         \"volume\":70.670,\n         \"volumeUomCode\":\"M3\",\n         \"nmfc\":\"tetNMFC\",\n         \"unNumber\":\"testUNNumber\",\n         \"containerNumber\":\"TEST3165730\",\n         \"packingLineReferenceNumbers\":[\n            {\n               \"code\":\"Item Number\",\n               \"value\":\"TESTNUM000001\"\n            },\n            {\n               \"code\":\"Inner Qty\",\n               \"value\":\"750.00\"\n            },\n            {\n               \"code\":\"Inner Qty UOM\",\n               \"value\":\"PCE\"\n            },\n            {\n               \"code\":\"PO Number\",\n               \"value\":\"TEST000001\"\n            }\n         ]\n      }\n   ],\n   \"containers\":[\n      {\n         \"containerNumber\":\"TEST3165730\",\n         \"sealNumber\":\"2643754\",\n         \"goodsWeight\":15978.64,\n         \"grossWeight\":15978.640,\n         \"tareWeight\":0,\n         \"weightUomCode\":\"KG\",\n         \"export\":{\n            \"emptyRequiredBy\":\"2021-05-19T09:17:33.504Z\",\n            \"emptyReleasedFromCY\":\"2021-05-19T09:17:33.504Z\",\n            \"estimatedPickup\":\"2021-05-19T09:17:33.504Z\",\n            \"actualPickUp\":\"2021-05-19T09:17:33.504Z\",\n            \"fclWharfGateIn\":\"2021-05-19T09:17:33.504Z\",\n            \"fclVesselLoaded\":\"2021-05-19T09:17:33.504Z\"\n         },\n         \"import\":{\n            \"estimatedFullDelivery\":\"2021-05-19T09:17:33.504Z\"\n         },\n         \"containerType\":{\n            \"code\":\"40HC\",\n            \"description\":\"Forty foot high cube\",\n            \"isoCode\":\"45G0\"\n         },\n         \"containerReferenceNumbers\":[\n            {\n               \"type\":\"ET\",\n               \"value\":\"Reference3\"\n            }\n         ]\n      }\n   ],\n   \"transportLegs\":[\n      {\n         \"legOrder\":1,\n         \"transportationMode\":\"Road\",\n         \"legType\":\"Other\",\n         \"portOfLoadingCode\":\"CNWUH\",\n         \"portOfLoadingName\":\"Wuhu\",\n         \"portOfDischarge\":\"CNSGH\",\n         \"portOfDischargeName\":\"Shanghai\",\n         \"estimatedTimeOfArrival\":\"2021-04-13T09:00\",\n         \"estimatedTimeOfDeparture\":\"2021-04-12T09:00\",\n         \"actualTimeOfArrival\":\"2021-04-13T09:00\",\n         \"actualTimeOfDeparture\":\"2021-04-12T09:00\",\n         \"carrier\":{\n            \"carrierCode\":\"LEOVINEPV2\",\n            \"carrierName\":\"LEON VINCENT OVERSEAS\"\n         },\n         \"tripLegReferenceNumbers\":[\n            {\n               \"type\":\"Test\",\n               \"value\":\"Test referencez\"\n            }\n         ]\n      },\n      {\n         \"legOrder\":2,\n         \"transportationMode\":\"Sea\",\n         \"legType\":\"Main\",\n         \"vesselName\":\"MSC JOSSELINE\",\n         \"portOfLoading\":\"CNSGH\",\n         \"portOfLoadingName\":\"Shanghai\",\n         \"portOfDischarge\":\"USLGB\",\n         \"portOfDischargeName\":\"Long Beach\",\n         \"estimatedTimeOfArrival\":\"2021-04-19T09:00\",\n         \"estimatedTimeOfDeparture\":\"2021-04-13T09:00\",\n         \"actualTimeOfArrival\":\"2021-04-19T09:00\",\n         \"actualTimeOfDeparture\":\"2021-04-13T09:00\"\n      },\n      {\n         \"legOrder\":3,\n         \"transportationMode\":\"Road\",\n         \"legType\":\"Other\",\n         \"portOfLoading\":\"USLGB\",\n         \"portOfLoadingName\":\"Long Beach\",\n         \"portOfDischarge\":\"USPAF\",\n         \"portOfDischargeName\":\"Plainfield\",\n         \"estimatedTimeOfArrival\":\"2021-04-22T09:00\",\n         \"estimatedTimeOfDeparture\":\"2021-04-20T09:00\",\n         \"actualTimeOfArrival\":\"2021-04-22T09:00\",\n         \"actualTimeOfDeparture\":\"2021-04-20T09:00\"\n      }\n   ],\n   \"shipmentReferenceNumbers\":[\n      {\n         \"type\":\"TT\",\n         \"value\":\"testing\"\n      }\n   ]\n}'"
          },
          {
            "lang": "Java",
            "source": "OkHttpClient client = new OkHttpClient().newBuilder()\n  .build();\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\r\\n   \\\"masterBillNumber\\\":\\\"898TestMaster\\\",\\r\\n   \\\"partnerIdentifierCode\\\":\\\"10-1-MOHAWKNYC\\\",\\r\\n   \\\"shipment\\\":[\\r\\n      {\\r\\n         \\\"houseBillNumber\\\":\\\"HB23042021906\\\",\\r\\n         \\\"transportationMode\\\":\\\"Sea\\\",\\r\\n         \\\"goodsDescription\\\":\\\"Test Description\\\",\\r\\n         \\\"totalQuantity\\\":14,\\r\\n         \\\"quantityUomCode\\\":\\\"PLT\\\",\\r\\n         \\\"totalWeight\\\":13,\\r\\n         \\\"chargeableWeight\\\":10,\\r\\n         \\\"weightUomCode\\\":\\\"KG\\\",\\r\\n         \\\"originCode\\\":\\\"CNSHG\\\",\\r\\n         \\\"originETD\\\":\\\"2021-05-19T19:22:00.942Z\\\",\\r\\n         \\\"destinationCode\\\":\\\"USLGB\\\",\\r\\n         \\\"destinationETA\\\":\\\"2021-05-20T19:22:00.942Z\\\",\\r\\n         \\\"incoTermsCode\\\":\\\"FOB\\\",\\r\\n         \\\"additionalTerms\\\":\\\"Additionalterms\\\",\\r\\n         \\\"locations\\\":[\\r\\n            {\\r\\n               \\\"locationType\\\":\\\"Shipper\\\",\\r\\n               \\\"locationCode\\\":\\\"XPOC-CHB\\\",\\r\\n               \\\"locationName\\\":\\\"XPO Customs Clearance Solutions, LLC\\\",\\r\\n               \\\"addressLine1\\\":\\\"290 GERZEVSKE LN\\\",\\r\\n               \\\"cityName\\\":\\\"CAROL STREAM\\\",\\r\\n               \\\"stateCode\\\":\\\"IL\\\",\\r\\n               \\\"zipCode\\\":\\\"60188\\\",\\r\\n               \\\"countryCode\\\":\\\"US\\\",\\r\\n               \\\"countryName\\\":\\\"United States\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"locationType\\\":\\\"Delivery\\\",\\r\\n               \\\"locationCode\\\":\\\"XPO-SZX\\\",\\r\\n               \\\"locationName\\\":\\\"XPO GLOBAL FORWARDING SHANGHAI LIMITED SHENZHEN\\\",\\r\\n               \\\"addressLine1\\\":\\\"Room E-F, 24 Floor, Tower B, Hong Long\\\",\\r\\n               \\\"addressLine2\\\":\\\"Century Plaza, 4002 East Shennan Road, Luohu\\\",\\r\\n               \\\"cityName\\\":\\\"Shenzhen\\\",\\r\\n               \\\"zipCode\\\":\\\"518002\\\",\\r\\n               \\\"countryCode\\\":\\\"CN\\\",\\r\\n               \\\"countryName\\\":\\\"China\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"locationType\\\":\\\"Consignee\\\",\\r\\n               \\\"locationCode\\\":\\\"WUHMATWUH1\\\",\\r\\n               \\\"locationName\\\":\\\"WUHU MATY AIR-CONDITIONING EQUIPMENT CO, LTD\\\",\\r\\n               \\\"addressLine1\\\":\\\"SILVERLAKE ROAD AND HENGSHAN ROAD\\\",\\r\\n               \\\"addressLine2\\\":\\\"INTERSECTION OF WEDA, WUHU, ANHUI PROVINCE, CINA\\\",\\r\\n               \\\"cityName\\\":\\\"WUHU\\\",\\r\\n               \\\"countryCode\\\":\\\"CN\\\",\\r\\n               \\\"countryName\\\":\\\"China\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"locationType\\\":\\\"Intermediate\\\",\\r\\n               \\\"locationCode\\\":\\\"WUHMATWUH1\\\",\\r\\n               \\\"locationName\\\":\\\"WUHU MATY AIR-CONDITIONING EQUIPMENT CO, LTD\\\",\\r\\n               \\\"addressLine1\\\":\\\"SILVERLAKE ROAD AND HENGSHAN ROAD\\\",\\r\\n               \\\"addressLine2\\\":\\\"INTERSECTION OF WEDA, WUHU, ANHUI PROVINCE, CINA\\\",\\r\\n               \\\"cityName\\\":\\\"WUHU\\\",\\r\\n               \\\"countryCode\\\":\\\"US\\\",\\r\\n               \\\"countryName\\\":\\\"China\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"locationType\\\":\\\"Intermediate\\\",\\r\\n               \\\"locationCode\\\":\\\"MOHAWKNYC\\\",\\r\\n               \\\"locationName\\\":\\\"Mohawk Group Inc\\\",\\r\\n               \\\"addressLine1\\\":\\\"37 E 18TH ST\\\",\\r\\n               \\\"cityName\\\":\\\"NEW YORK\\\",\\r\\n               \\\"stateCode\\\":\\\"NY\\\",\\r\\n               \\\"zipCode\\\":\\\"10003\\\",\\r\\n               \\\"countryCode\\\":\\\"US\\\",\\r\\n               \\\"countryName\\\":\\\"United States\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"locationType\\\":\\\"Intermediate\\\",\\r\\n               \\\"locationCode\\\":\\\"GEODISPAF\\\",\\r\\n               \\\"locationName\\\":\\\"GEODIS\\\",\\r\\n               \\\"addressLine1\\\":\\\"1101 Whitaker Rd\\\",\\r\\n               \\\"cityName\\\":\\\"Plainfield\\\",\\r\\n               \\\"stateCode\\\":\\\"IN\\\",\\r\\n               \\\"zipCode\\\":\\\"46168\\\",\\r\\n               \\\"countryCode\\\":\\\"US\\\",\\r\\n               \\\"countryName\\\":\\\"United States\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"locationType\\\":\\\"Delivery\\\",\\r\\n               \\\"locationCode\\\":\\\"MOHAWKNYC\\\",\\r\\n               \\\"locationName\\\":\\\"Mohawk Group Inc\\\",\\r\\n               \\\"addressLine1\\\":\\\"37 E 18TH ST\\\",\\r\\n               \\\"cityName\\\":\\\"NEW YORK\\\",\\r\\n               \\\"stateCode\\\":\\\"NY\\\",\\r\\n               \\\"zipCode\\\":\\\"10003\\\",\\r\\n               \\\"countryCode\\\":\\\"US\\\",\\r\\n               \\\"countryName\\\":\\\"United States\\\"\\r\\n            }\\r\\n         ]\\r\\n      }\\r\\n   ],\\r\\n   \\\"notes\\\":[\\r\\n      {\\r\\n         \\\"type\\\":\\\"Special Instructions\\\",\\r\\n         \\\"value\\\":\\\"Special Instructions\\\"\\r\\n      }\\r\\n   ],\\r\\n   \\\"packingLineDetails\\\":[\\r\\n      {\\r\\n         \\\"productNumber\\\":\\\"1\\\",\\r\\n         \\\"packageQuantity\\\":750,\\r\\n         \\\"packageTypeCode\\\":\\\"CTN\\\",\\r\\n         \\\"packageDescription\\\":\\\"DEHUMIDIFIER\\\",\\r\\n         \\\"height\\\":10,\\r\\n         \\\"length\\\":10,\\r\\n         \\\"width\\\":10,\\r\\n         \\\"hlwUomCode\\\":\\\"IN\\\",\\r\\n         \\\"weight\\\":15000,\\r\\n         \\\"weightUomCode\\\":\\\"KG\\\",\\r\\n         \\\"volume\\\":70.670,\\r\\n         \\\"volumeUomCode\\\":\\\"M3\\\",\\r\\n         \\\"nmfc\\\":\\\"tetNMFC\\\",\\r\\n         \\\"unNumber\\\":\\\"testUNNumber\\\",\\r\\n         \\\"containerNumber\\\":\\\"TEST3165730\\\",\\r\\n         \\\"packingLineReferenceNumbers\\\":[\\r\\n            {\\r\\n               \\\"code\\\":\\\"Item Number\\\",\\r\\n               \\\"value\\\":\\\"TESTNUM000001\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"code\\\":\\\"Inner Qty\\\",\\r\\n               \\\"value\\\":\\\"750.00\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"code\\\":\\\"Inner Qty UOM\\\",\\r\\n               \\\"value\\\":\\\"PCE\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"code\\\":\\\"PO Number\\\",\\r\\n               \\\"value\\\":\\\"TEST000001\\\"\\r\\n            }\\r\\n         ]\\r\\n      }\\r\\n   ],\\r\\n   \\\"containers\\\":[\\r\\n      {\\r\\n         \\\"containerNumber\\\":\\\"TEST3165730\\\",\\r\\n         \\\"sealNumber\\\":\\\"2643754\\\",\\r\\n         \\\"goodsWeight\\\":15978.64,\\r\\n         \\\"grossWeight\\\":15978.640,\\r\\n         \\\"tareWeight\\\":0,\\r\\n         \\\"weightUomCode\\\":\\\"KG\\\",\\r\\n         \\\"export\\\":{\\r\\n            \\\"emptyRequiredBy\\\":\\\"2021-05-19T09:17:33.504Z\\\",\\r\\n            \\\"emptyReleasedFromCY\\\":\\\"2021-05-19T09:17:33.504Z\\\",\\r\\n            \\\"estimatedPickup\\\":\\\"2021-05-19T09:17:33.504Z\\\",\\r\\n            \\\"actualPickUp\\\":\\\"2021-05-19T09:17:33.504Z\\\",\\r\\n            \\\"fclWharfGateIn\\\":\\\"2021-05-19T09:17:33.504Z\\\",\\r\\n            \\\"fclVesselLoaded\\\":\\\"2021-05-19T09:17:33.504Z\\\"\\r\\n         },\\r\\n         \\\"import\\\":{\\r\\n            \\\"estimatedFullDelivery\\\":\\\"2021-05-19T09:17:33.504Z\\\"\\r\\n         },\\r\\n         \\\"containerType\\\":{\\r\\n            \\\"code\\\":\\\"40HC\\\",\\r\\n            \\\"description\\\":\\\"Forty foot high cube\\\",\\r\\n            \\\"isoCode\\\":\\\"45G0\\\"\\r\\n         },\\r\\n         \\\"containerReferenceNumbers\\\":[\\r\\n            {\\r\\n               \\\"type\\\":\\\"ET\\\",\\r\\n               \\\"value\\\":\\\"Reference3\\\"\\r\\n            }\\r\\n         ]\\r\\n      }\\r\\n   ],\\r\\n   \\\"transportLegs\\\":[\\r\\n      {\\r\\n         \\\"legOrder\\\":1,\\r\\n         \\\"transportationMode\\\":\\\"Road\\\",\\r\\n         \\\"legType\\\":\\\"Other\\\",\\r\\n         \\\"portOfLoadingCode\\\":\\\"CNWUH\\\",\\r\\n         \\\"portOfLoadingName\\\":\\\"Wuhu\\\",\\r\\n         \\\"portOfDischarge\\\":\\\"CNSGH\\\",\\r\\n         \\\"portOfDischargeName\\\":\\\"Shanghai\\\",\\r\\n         \\\"estimatedTimeOfArrival\\\":\\\"2021-04-13T09:00\\\",\\r\\n         \\\"estimatedTimeOfDeparture\\\":\\\"2021-04-12T09:00\\\",\\r\\n         \\\"actualTimeOfArrival\\\":\\\"2021-04-13T09:00\\\",\\r\\n         \\\"actualTimeOfDeparture\\\":\\\"2021-04-12T09:00\\\",\\r\\n         \\\"carrier\\\":{\\r\\n            \\\"carrierCode\\\":\\\"LEOVINEPV2\\\",\\r\\n            \\\"carrierName\\\":\\\"LEON VINCENT OVERSEAS\\\"\\r\\n         },\\r\\n         \\\"tripLegReferenceNumbers\\\":[\\r\\n            {\\r\\n               \\\"type\\\":\\\"Test\\\",\\r\\n               \\\"value\\\":\\\"Test referencez\\\"\\r\\n            }\\r\\n         ]\\r\\n      },\\r\\n      {\\r\\n         \\\"legOrder\\\":2,\\r\\n         \\\"transportationMode\\\":\\\"Sea\\\",\\r\\n         \\\"legType\\\":\\\"Main\\\",\\r\\n         \\\"vesselName\\\":\\\"MSC JOSSELINE\\\",\\r\\n         \\\"portOfLoading\\\":\\\"CNSGH\\\",\\r\\n         \\\"portOfLoadingName\\\":\\\"Shanghai\\\",\\r\\n         \\\"portOfDischarge\\\":\\\"USLGB\\\",\\r\\n         \\\"portOfDischargeName\\\":\\\"Long Beach\\\",\\r\\n         \\\"estimatedTimeOfArrival\\\":\\\"2021-04-19T09:00\\\",\\r\\n         \\\"estimatedTimeOfDeparture\\\":\\\"2021-04-13T09:00\\\",\\r\\n         \\\"actualTimeOfArrival\\\":\\\"2021-04-19T09:00\\\",\\r\\n         \\\"actualTimeOfDeparture\\\":\\\"2021-04-13T09:00\\\"\\r\\n      },\\r\\n      {\\r\\n         \\\"legOrder\\\":3,\\r\\n         \\\"transportationMode\\\":\\\"Road\\\",\\r\\n         \\\"legType\\\":\\\"Other\\\",\\r\\n         \\\"portOfLoading\\\":\\\"USLGB\\\",\\r\\n         \\\"portOfLoadingName\\\":\\\"Long Beach\\\",\\r\\n         \\\"portOfDischarge\\\":\\\"USPAF\\\",\\r\\n         \\\"portOfDischargeName\\\":\\\"Plainfield\\\",\\r\\n         \\\"estimatedTimeOfArrival\\\":\\\"2021-04-22T09:00\\\",\\r\\n         \\\"estimatedTimeOfDeparture\\\":\\\"2021-04-20T09:00\\\",\\r\\n         \\\"actualTimeOfArrival\\\":\\\"2021-04-22T09:00\\\",\\r\\n         \\\"actualTimeOfDeparture\\\":\\\"2021-04-20T09:00\\\"\\r\\n      }\\r\\n   ],\\r\\n   \\\"shipmentReferenceNumbers\\\":[\\r\\n      {\\r\\n         \\\"type\\\":\\\"TT\\\",\\r\\n         \\\"value\\\":\\\"testing\\\"\\r\\n      }\\r\\n   ]\\r\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://api-uat-xpoconnect.xpo.com/shipmentAPI/rest/v1/shipmentBooking/\")\n  .method(\"POST\", body)\n  .addHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXXX\")\n  .addHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXXXXXXX\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .build();\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "NodeJS",
            "source": "var https = require('follow-redirects').https;\nvar fs = require('fs');\nvar options = {\n  'method': 'POST',\n  'hostname': 'api-uat-xpoconnect.xpo.com',\n  'path': '/shipmentAPI/rest/v1/shipmentBooking/',\n  'headers': {\n    'x-api-key': 'XXXXXXXXXXXXXXXXXXX',\n    'xpoauthorization': 'XXXXXXXXXXXXXXXXXXX',\n    'Content-Type': 'application/json'\n  },\n  'maxRedirects': 20\n};\nvar req = https.request(options, function (res) {\n  var chunks = [];\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n  res.on(\"end\", function (chunk) {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n  res.on(\"error\", function (error) {\n    console.error(error);\n  });\n});\nvar postData = JSON.stringify({\n  \"masterBillNumber\": \"898TestMaster\",\n  \"partnerIdentifierCode\": \"10-1-MOHAWKNYC\",\n  \"shipment\": [\n    {\n      \"houseBillNumber\": \"HB23042021906\",\n      \"transportationMode\": \"Sea\",\n      \"goodsDescription\": \"Test Description\",\n      \"totalQuantity\": 14,\n      \"quantityUomCode\": \"PLT\",\n      \"totalWeight\": 13,\n      \"chargeableWeight\": 10,\n      \"weightUomCode\": \"KG\",\n      \"originCode\": \"CNSHG\",\n      \"originETD\": \"2021-05-19T19:22:00.942Z\",\n      \"destinationCode\": \"USLGB\",\n      \"destinationETA\": \"2021-05-20T19:22:00.942Z\",\n      \"incoTermsCode\": \"FOB\",\n      \"additionalTerms\": \"Additionalterms\",\n      \"locations\": [\n        {\n          \"locationType\": \"Shipper\",\n          \"locationCode\": \"XPOC-CHB\",\n          \"locationName\": \"XPO Customs Clearance Solutions, LLC\",\n          \"addressLine1\": \"290 GERZEVSKE LN\",\n          \"cityName\": \"CAROL STREAM\",\n          \"stateCode\": \"IL\",\n          \"zipCode\": \"60188\",\n          \"countryCode\": \"US\",\n          \"countryName\": \"United States\"\n        },\n        {\n          \"locationType\": \"Delivery\",\n          \"locationCode\": \"XPO-SZX\",\n          \"locationName\": \"XPO GLOBAL FORWARDING SHANGHAI LIMITED SHENZHEN\",\n          \"addressLine1\": \"Room E-F, 24 Floor, Tower B, Hong Long\",\n          \"addressLine2\": \"Century Plaza, 4002 East Shennan Road, Luohu\",\n          \"cityName\": \"Shenzhen\",\n          \"zipCode\": \"518002\",\n          \"countryCode\": \"CN\",\n          \"countryName\": \"China\"\n        },\n        {\n          \"locationType\": \"Consignee\",\n          \"locationCode\": \"WUHMATWUH1\",\n          \"locationName\": \"WUHU MATY AIR-CONDITIONING EQUIPMENT CO, LTD\",\n          \"addressLine1\": \"SILVERLAKE ROAD AND HENGSHAN ROAD\",\n          \"addressLine2\": \"INTERSECTION OF WEDA, WUHU, ANHUI PROVINCE, CINA\",\n          \"cityName\": \"WUHU\",\n          \"countryCode\": \"CN\",\n          \"countryName\": \"China\"\n        },\n        {\n          \"locationType\": \"Intermediate\",\n          \"locationCode\": \"WUHMATWUH1\",\n          \"locationName\": \"WUHU MATY AIR-CONDITIONING EQUIPMENT CO, LTD\",\n          \"addressLine1\": \"SILVERLAKE ROAD AND HENGSHAN ROAD\",\n          \"addressLine2\": \"INTERSECTION OF WEDA, WUHU, ANHUI PROVINCE, CINA\",\n          \"cityName\": \"WUHU\",\n          \"countryCode\": \"US\",\n          \"countryName\": \"China\"\n        },\n        {\n          \"locationType\": \"Intermediate\",\n          \"locationCode\": \"MOHAWKNYC\",\n          \"locationName\": \"Mohawk Group Inc\",\n          \"addressLine1\": \"37 E 18TH ST\",\n          \"cityName\": \"NEW YORK\",\n          \"stateCode\": \"NY\",\n          \"zipCode\": \"10003\",\n          \"countryCode\": \"US\",\n          \"countryName\": \"United States\"\n        },\n        {\n          \"locationType\": \"Intermediate\",\n          \"locationCode\": \"GEODISPAF\",\n          \"locationName\": \"GEODIS\",\n          \"addressLine1\": \"1101 Whitaker Rd\",\n          \"cityName\": \"Plainfield\",\n          \"stateCode\": \"IN\",\n          \"zipCode\": \"46168\",\n          \"countryCode\": \"US\",\n          \"countryName\": \"United States\"\n        },\n        {\n          \"locationType\": \"Delivery\",\n          \"locationCode\": \"MOHAWKNYC\",\n          \"locationName\": \"Mohawk Group Inc\",\n          \"addressLine1\": \"37 E 18TH ST\",\n          \"cityName\": \"NEW YORK\",\n          \"stateCode\": \"NY\",\n          \"zipCode\": \"10003\",\n          \"countryCode\": \"US\",\n          \"countryName\": \"United States\"\n        }\n      ]\n    }\n  ],\n  \"notes\": [\n    {\n      \"type\": \"Special Instructions\",\n      \"value\": \"Special Instructions\"\n    }\n  ],\n  \"packingLineDetails\": [\n    {\n      \"productNumber\": \"1\",\n      \"packageQuantity\": 750,\n      \"packageTypeCode\": \"CTN\",\n      \"packageDescription\": \"DEHUMIDIFIER\",\n      \"height\": 10,\n      \"length\": 10,\n      \"width\": 10,\n      \"hlwUomCode\": \"IN\",\n      \"weight\": 15000,\n      \"weightUomCode\": \"KG\",\n      \"volume\": 70.67,\n      \"volumeUomCode\": \"M3\",\n      \"nmfc\": \"tetNMFC\",\n      \"unNumber\": \"testUNNumber\",\n      \"containerNumber\": \"TEST3165730\",\n      \"packingLineReferenceNumbers\": [\n        {\n          \"code\": \"Item Number\",\n          \"value\": \"TESTNUM000001\"\n        },\n        {\n          \"code\": \"Inner Qty\",\n          \"value\": \"750.00\"\n        },\n        {\n          \"code\": \"Inner Qty UOM\",\n          \"value\": \"PCE\"\n        },\n        {\n          \"code\": \"PO Number\",\n          \"value\": \"TEST000001\"\n        }\n      ]\n    }\n  ],\n  \"containers\": [\n    {\n      \"containerNumber\": \"TEST3165730\",\n      \"sealNumber\": \"2643754\",\n      \"goodsWeight\": 15978.64,\n      \"grossWeight\": 15978.64,\n      \"tareWeight\": 0,\n      \"weightUomCode\": \"KG\",\n      \"export\": {\n        \"emptyRequiredBy\": \"2021-05-19T09:17:33.504Z\",\n        \"emptyReleasedFromCY\": \"2021-05-19T09:17:33.504Z\",\n        \"estimatedPickup\": \"2021-05-19T09:17:33.504Z\",\n        \"actualPickUp\": \"2021-05-19T09:17:33.504Z\",\n        \"fclWharfGateIn\": \"2021-05-19T09:17:33.504Z\",\n        \"fclVesselLoaded\": \"2021-05-19T09:17:33.504Z\"\n      },\n      \"import\": {\n        \"estimatedFullDelivery\": \"2021-05-19T09:17:33.504Z\"\n      },\n      \"containerType\": {\n        \"code\": \"40HC\",\n        \"description\": \"Forty foot high cube\",\n        \"isoCode\": \"45G0\"\n      },\n      \"containerReferenceNumbers\": [\n        {\n          \"type\": \"ET\",\n          \"value\": \"Reference3\"\n        }\n      ]\n    }\n  ],\n  \"transportLegs\": [\n    {\n      \"legOrder\": 1,\n      \"transportationMode\": \"Road\",\n      \"legType\": \"Other\",\n      \"portOfLoadingCode\": \"CNWUH\",\n      \"portOfLoadingName\": \"Wuhu\",\n      \"portOfDischarge\": \"CNSGH\",\n      \"portOfDischargeName\": \"Shanghai\",\n      \"estimatedTimeOfArrival\": \"2021-04-13T09:00\",\n      \"estimatedTimeOfDeparture\": \"2021-04-12T09:00\",\n      \"actualTimeOfArrival\": \"2021-04-13T09:00\",\n      \"actualTimeOfDeparture\": \"2021-04-12T09:00\",\n      \"carrier\": {\n        \"carrierCode\": \"LEOVINEPV2\",\n        \"carrierName\": \"LEON VINCENT OVERSEAS\"\n      },\n      \"tripLegReferenceNumbers\": [\n        {\n          \"type\": \"Test\",\n          \"value\": \"Test referencez\"\n        }\n      ]\n    },\n    {\n      \"legOrder\": 2,\n      \"transportationMode\": \"Sea\",\n      \"legType\": \"Main\",\n      \"vesselName\": \"MSC JOSSELINE\",\n      \"portOfLoading\": \"CNSGH\",\n      \"portOfLoadingName\": \"Shanghai\",\n      \"portOfDischarge\": \"USLGB\",\n      \"portOfDischargeName\": \"Long Beach\",\n      \"estimatedTimeOfArrival\": \"2021-04-19T09:00\",\n      \"estimatedTimeOfDeparture\": \"2021-04-13T09:00\",\n      \"actualTimeOfArrival\": \"2021-04-19T09:00\",\n      \"actualTimeOfDeparture\": \"2021-04-13T09:00\"\n    },\n    {\n      \"legOrder\": 3,\n      \"transportationMode\": \"Road\",\n      \"legType\": \"Other\",\n      \"portOfLoading\": \"USLGB\",\n      \"portOfLoadingName\": \"Long Beach\",\n      \"portOfDischarge\": \"USPAF\",\n      \"portOfDischargeName\": \"Plainfield\",\n      \"estimatedTimeOfArrival\": \"2021-04-22T09:00\",\n      \"estimatedTimeOfDeparture\": \"2021-04-20T09:00\",\n      \"actualTimeOfArrival\": \"2021-04-22T09:00\",\n      \"actualTimeOfDeparture\": \"2021-04-20T09:00\"\n    }\n  ],\n  \"shipmentReferenceNumbers\": [\n    {\n      \"type\": \"TT\",\n      \"value\": \"testing\"\n    }\n  ]\n});\nreq.write(postData);\nreq.end();"
          },
          {
            "lang": "C#",
            "source": "var client = new RestClient(\"https://api-uat-xpoconnect.xpo.com/shipmentAPI/rest/v1/shipmentBooking/\");\nclient.Timeout = -1;\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"x-api-key\", \"XXXXXXXXXXXXXXXXXXX\");\nrequest.AddHeader(\"xpoauthorization\", \"XXXXXXXXXXXXXXXXXXX\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddParameter(\"application/json\", \"{\\r\\n   \\\"masterBillNumber\\\":\\\"898TestMaster\\\",\\r\\n   \\\"partnerIdentifierCode\\\":\\\"10-1-MOHAWKNYC\\\",\\r\\n   \\\"shipment\\\":[\\r\\n      {\\r\\n         \\\"houseBillNumber\\\":\\\"HB23042021906\\\",\\r\\n         \\\"transportationMode\\\":\\\"Sea\\\",\\r\\n         \\\"goodsDescription\\\":\\\"Test Description\\\",\\r\\n         \\\"totalQuantity\\\":14,\\r\\n         \\\"quantityUomCode\\\":\\\"PLT\\\",\\r\\n         \\\"totalWeight\\\":13,\\r\\n         \\\"chargeableWeight\\\":10,\\r\\n         \\\"weightUomCode\\\":\\\"KG\\\",\\r\\n         \\\"originCode\\\":\\\"CNSHG\\\",\\r\\n         \\\"originETD\\\":\\\"2021-05-19T19:22:00.942Z\\\",\\r\\n         \\\"destinationCode\\\":\\\"USLGB\\\",\\r\\n         \\\"destinationETA\\\":\\\"2021-05-20T19:22:00.942Z\\\",\\r\\n         \\\"incoTermsCode\\\":\\\"FOB\\\",\\r\\n         \\\"additionalTerms\\\":\\\"Additionalterms\\\",\\r\\n         \\\"locations\\\":[\\r\\n            {\\r\\n               \\\"locationType\\\":\\\"Shipper\\\",\\r\\n               \\\"locationCode\\\":\\\"XPOC-CHB\\\",\\r\\n               \\\"locationName\\\":\\\"XPO Customs Clearance Solutions, LLC\\\",\\r\\n               \\\"addressLine1\\\":\\\"290 GERZEVSKE LN\\\",\\r\\n               \\\"cityName\\\":\\\"CAROL STREAM\\\",\\r\\n               \\\"stateCode\\\":\\\"IL\\\",\\r\\n               \\\"zipCode\\\":\\\"60188\\\",\\r\\n               \\\"countryCode\\\":\\\"US\\\",\\r\\n               \\\"countryName\\\":\\\"United States\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"locationType\\\":\\\"Delivery\\\",\\r\\n               \\\"locationCode\\\":\\\"XPO-SZX\\\",\\r\\n               \\\"locationName\\\":\\\"XPO GLOBAL FORWARDING SHANGHAI LIMITED SHENZHEN\\\",\\r\\n               \\\"addressLine1\\\":\\\"Room E-F, 24 Floor, Tower B, Hong Long\\\",\\r\\n               \\\"addressLine2\\\":\\\"Century Plaza, 4002 East Shennan Road, Luohu\\\",\\r\\n               \\\"cityName\\\":\\\"Shenzhen\\\",\\r\\n               \\\"zipCode\\\":\\\"518002\\\",\\r\\n               \\\"countryCode\\\":\\\"CN\\\",\\r\\n               \\\"countryName\\\":\\\"China\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"locationType\\\":\\\"Consignee\\\",\\r\\n               \\\"locationCode\\\":\\\"WUHMATWUH1\\\",\\r\\n               \\\"locationName\\\":\\\"WUHU MATY AIR-CONDITIONING EQUIPMENT CO, LTD\\\",\\r\\n               \\\"addressLine1\\\":\\\"SILVERLAKE ROAD AND HENGSHAN ROAD\\\",\\r\\n               \\\"addressLine2\\\":\\\"INTERSECTION OF WEDA, WUHU, ANHUI PROVINCE, CINA\\\",\\r\\n               \\\"cityName\\\":\\\"WUHU\\\",\\r\\n               \\\"countryCode\\\":\\\"CN\\\",\\r\\n               \\\"countryName\\\":\\\"China\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"locationType\\\":\\\"Intermediate\\\",\\r\\n               \\\"locationCode\\\":\\\"WUHMATWUH1\\\",\\r\\n               \\\"locationName\\\":\\\"WUHU MATY AIR-CONDITIONING EQUIPMENT CO, LTD\\\",\\r\\n               \\\"addressLine1\\\":\\\"SILVERLAKE ROAD AND HENGSHAN ROAD\\\",\\r\\n               \\\"addressLine2\\\":\\\"INTERSECTION OF WEDA, WUHU, ANHUI PROVINCE, CINA\\\",\\r\\n               \\\"cityName\\\":\\\"WUHU\\\",\\r\\n               \\\"countryCode\\\":\\\"US\\\",\\r\\n               \\\"countryName\\\":\\\"China\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"locationType\\\":\\\"Intermediate\\\",\\r\\n               \\\"locationCode\\\":\\\"MOHAWKNYC\\\",\\r\\n               \\\"locationName\\\":\\\"Mohawk Group Inc\\\",\\r\\n               \\\"addressLine1\\\":\\\"37 E 18TH ST\\\",\\r\\n               \\\"cityName\\\":\\\"NEW YORK\\\",\\r\\n               \\\"stateCode\\\":\\\"NY\\\",\\r\\n               \\\"zipCode\\\":\\\"10003\\\",\\r\\n               \\\"countryCode\\\":\\\"US\\\",\\r\\n               \\\"countryName\\\":\\\"United States\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"locationType\\\":\\\"Intermediate\\\",\\r\\n               \\\"locationCode\\\":\\\"GEODISPAF\\\",\\r\\n               \\\"locationName\\\":\\\"GEODIS\\\",\\r\\n               \\\"addressLine1\\\":\\\"1101 Whitaker Rd\\\",\\r\\n               \\\"cityName\\\":\\\"Plainfield\\\",\\r\\n               \\\"stateCode\\\":\\\"IN\\\",\\r\\n               \\\"zipCode\\\":\\\"46168\\\",\\r\\n               \\\"countryCode\\\":\\\"US\\\",\\r\\n               \\\"countryName\\\":\\\"United States\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"locationType\\\":\\\"Delivery\\\",\\r\\n               \\\"locationCode\\\":\\\"MOHAWKNYC\\\",\\r\\n               \\\"locationName\\\":\\\"Mohawk Group Inc\\\",\\r\\n               \\\"addressLine1\\\":\\\"37 E 18TH ST\\\",\\r\\n               \\\"cityName\\\":\\\"NEW YORK\\\",\\r\\n               \\\"stateCode\\\":\\\"NY\\\",\\r\\n               \\\"zipCode\\\":\\\"10003\\\",\\r\\n               \\\"countryCode\\\":\\\"US\\\",\\r\\n               \\\"countryName\\\":\\\"United States\\\"\\r\\n            }\\r\\n         ]\\r\\n      }\\r\\n   ],\\r\\n   \\\"notes\\\":[\\r\\n      {\\r\\n         \\\"type\\\":\\\"Special Instructions\\\",\\r\\n         \\\"value\\\":\\\"Special Instructions\\\"\\r\\n      }\\r\\n   ],\\r\\n   \\\"packingLineDetails\\\":[\\r\\n      {\\r\\n         \\\"productNumber\\\":\\\"1\\\",\\r\\n         \\\"packageQuantity\\\":750,\\r\\n         \\\"packageTypeCode\\\":\\\"CTN\\\",\\r\\n         \\\"packageDescription\\\":\\\"DEHUMIDIFIER\\\",\\r\\n         \\\"height\\\":10,\\r\\n         \\\"length\\\":10,\\r\\n         \\\"width\\\":10,\\r\\n         \\\"hlwUomCode\\\":\\\"IN\\\",\\r\\n         \\\"weight\\\":15000,\\r\\n         \\\"weightUomCode\\\":\\\"KG\\\",\\r\\n         \\\"volume\\\":70.670,\\r\\n         \\\"volumeUomCode\\\":\\\"M3\\\",\\r\\n         \\\"nmfc\\\":\\\"tetNMFC\\\",\\r\\n         \\\"unNumber\\\":\\\"testUNNumber\\\",\\r\\n         \\\"containerNumber\\\":\\\"TEST3165730\\\",\\r\\n         \\\"packingLineReferenceNumbers\\\":[\\r\\n            {\\r\\n               \\\"code\\\":\\\"Item Number\\\",\\r\\n               \\\"value\\\":\\\"TESTNUM000001\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"code\\\":\\\"Inner Qty\\\",\\r\\n               \\\"value\\\":\\\"750.00\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"code\\\":\\\"Inner Qty UOM\\\",\\r\\n               \\\"value\\\":\\\"PCE\\\"\\r\\n            },\\r\\n            {\\r\\n               \\\"code\\\":\\\"PO Number\\\",\\r\\n               \\\"value\\\":\\\"TEST000001\\\"\\r\\n            }\\r\\n         ]\\r\\n      }\\r\\n   ],\\r\\n   \\\"containers\\\":[\\r\\n      {\\r\\n         \\\"containerNumber\\\":\\\"TEST3165730\\\",\\r\\n         \\\"sealNumber\\\":\\\"2643754\\\",\\r\\n         \\\"goodsWeight\\\":15978.64,\\r\\n         \\\"grossWeight\\\":15978.640,\\r\\n         \\\"tareWeight\\\":0,\\r\\n         \\\"weightUomCode\\\":\\\"KG\\\",\\r\\n         \\\"export\\\":{\\r\\n            \\\"emptyRequiredBy\\\":\\\"2021-05-19T09:17:33.504Z\\\",\\r\\n            \\\"emptyReleasedFromCY\\\":\\\"2021-05-19T09:17:33.504Z\\\",\\r\\n            \\\"estimatedPickup\\\":\\\"2021-05-19T09:17:33.504Z\\\",\\r\\n            \\\"actualPickUp\\\":\\\"2021-05-19T09:17:33.504Z\\\",\\r\\n            \\\"fclWharfGateIn\\\":\\\"2021-05-19T09:17:33.504Z\\\",\\r\\n            \\\"fclVesselLoaded\\\":\\\"2021-05-19T09:17:33.504Z\\\"\\r\\n         },\\r\\n         \\\"import\\\":{\\r\\n            \\\"estimatedFullDelivery\\\":\\\"2021-05-19T09:17:33.504Z\\\"\\r\\n         },\\r\\n         \\\"containerType\\\":{\\r\\n            \\\"code\\\":\\\"40HC\\\",\\r\\n            \\\"description\\\":\\\"Forty foot high cube\\\",\\r\\n            \\\"isoCode\\\":\\\"45G0\\\"\\r\\n         },\\r\\n         \\\"containerReferenceNumbers\\\":[\\r\\n            {\\r\\n               \\\"type\\\":\\\"ET\\\",\\r\\n               \\\"value\\\":\\\"Reference3\\\"\\r\\n            }\\r\\n         ]\\r\\n      }\\r\\n   ],\\r\\n   \\\"transportLegs\\\":[\\r\\n      {\\r\\n         \\\"legOrder\\\":1,\\r\\n         \\\"transportationMode\\\":\\\"Road\\\",\\r\\n         \\\"legType\\\":\\\"Other\\\",\\r\\n         \\\"portOfLoadingCode\\\":\\\"CNWUH\\\",\\r\\n         \\\"portOfLoadingName\\\":\\\"Wuhu\\\",\\r\\n         \\\"portOfDischarge\\\":\\\"CNSGH\\\",\\r\\n         \\\"portOfDischargeName\\\":\\\"Shanghai\\\",\\r\\n         \\\"estimatedTimeOfArrival\\\":\\\"2021-04-13T09:00\\\",\\r\\n         \\\"estimatedTimeOfDeparture\\\":\\\"2021-04-12T09:00\\\",\\r\\n         \\\"actualTimeOfArrival\\\":\\\"2021-04-13T09:00\\\",\\r\\n         \\\"actualTimeOfDeparture\\\":\\\"2021-04-12T09:00\\\",\\r\\n         \\\"carrier\\\":{\\r\\n            \\\"carrierCode\\\":\\\"LEOVINEPV2\\\",\\r\\n            \\\"carrierName\\\":\\\"LEON VINCENT OVERSEAS\\\"\\r\\n         },\\r\\n         \\\"tripLegReferenceNumbers\\\":[\\r\\n            {\\r\\n               \\\"type\\\":\\\"Test\\\",\\r\\n               \\\"value\\\":\\\"Test referencez\\\"\\r\\n            }\\r\\n         ]\\r\\n      },\\r\\n      {\\r\\n         \\\"legOrder\\\":2,\\r\\n         \\\"transportationMode\\\":\\\"Sea\\\",\\r\\n         \\\"legType\\\":\\\"Main\\\",\\r\\n         \\\"vesselName\\\":\\\"MSC JOSSELINE\\\",\\r\\n         \\\"portOfLoading\\\":\\\"CNSGH\\\",\\r\\n         \\\"portOfLoadingName\\\":\\\"Shanghai\\\",\\r\\n         \\\"portOfDischarge\\\":\\\"USLGB\\\",\\r\\n         \\\"portOfDischargeName\\\":\\\"Long Beach\\\",\\r\\n         \\\"estimatedTimeOfArrival\\\":\\\"2021-04-19T09:00\\\",\\r\\n         \\\"estimatedTimeOfDeparture\\\":\\\"2021-04-13T09:00\\\",\\r\\n         \\\"actualTimeOfArrival\\\":\\\"2021-04-19T09:00\\\",\\r\\n         \\\"actualTimeOfDeparture\\\":\\\"2021-04-13T09:00\\\"\\r\\n      },\\r\\n      {\\r\\n         \\\"legOrder\\\":3,\\r\\n         \\\"transportationMode\\\":\\\"Road\\\",\\r\\n         \\\"legType\\\":\\\"Other\\\",\\r\\n         \\\"portOfLoading\\\":\\\"USLGB\\\",\\r\\n         \\\"portOfLoadingName\\\":\\\"Long Beach\\\",\\r\\n         \\\"portOfDischarge\\\":\\\"USPAF\\\",\\r\\n         \\\"portOfDischargeName\\\":\\\"Plainfield\\\",\\r\\n         \\\"estimatedTimeOfArrival\\\":\\\"2021-04-22T09:00\\\",\\r\\n         \\\"estimatedTimeOfDeparture\\\":\\\"2021-04-20T09:00\\\",\\r\\n         \\\"actualTimeOfArrival\\\":\\\"2021-04-22T09:00\\\",\\r\\n         \\\"actualTimeOfDeparture\\\":\\\"2021-04-20T09:00\\\"\\r\\n      }\\r\\n   ],\\r\\n   \\\"shipmentReferenceNumbers\\\":[\\r\\n      {\\r\\n         \\\"type\\\":\\\"TT\\\",\\r\\n         \\\"value\\\":\\\"testing\\\"\\r\\n      }\\r\\n   ]\\r\\n}\",  ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);\nConsole.WriteLine(response.Content);"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shipmentBookingResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error401"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          },
          "404": {
            "description": "Error 404 Unknown operation. Please contact XPO representative."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "tokenrequest": {
        "type": "object",
        "properties": {
          "client_id": {
            "type": "string",
            "description": "Client Id as provided by XPO."
          },
          "client_secret": {
            "type": "string",
            "description": "Client Secret as provided by XPO."
          },
          "scope": {
            "type": "string",
            "description": "Scope as provided by XPO to access requested API."
          },
          "grant_type": {
            "type": "string",
            "description": "Grant Type, typical value is client_credentials."
          }
        },
        "required": [
          "client_id",
          "client_secret",
          "scope",
          "grant_type"
        ],
        "example": {
          "client_id": "xpo-tran-boomi-test-app",
          "client_secret": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
          "scope": "xpo-rates-api",
          "grant_type": "client_credentials"
        }
      },
      "quoterequest": {
        "type": "object",
        "discriminator": {
          "propertyName": "x-mode",
          "mapping": {
            "TL": "#/components/schemas/TLRequiredFields",
            "LTL": "#/components/schemas/LTLRequiredFields"
          }
        },
        "properties": {
          "x-mode": {
            "type": "string",
            "description": "Choose transportation mode",
            "enum": [ "TL", "LTL" ]
          },
          "partnerOrderCode": {
            "type": "string",
            "description": "Partner order unique identifier code.(PartnerOrderCode should be same as ShipmentId)"
          },
          "partnerIdentifierCode": {
            "type": "string",
            "description": "Partner identifier code used for uniquely identify the partner."
          },
          "equipmentCategoryCode": {
            "$ref": "#/components/schemas/equipmentCategoryCode"
          },
          "equipmentTypeCode": {
            "$ref": "#/components/schemas/equipmentTypeCode"
          },
          "transportationMode": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Mode of Transportation, accepted values are string of array as TL, LTL.\n\n Note: For LTL mode please provide Pickup/Delivery time within normal business hours (8am – 5pm). An order request outside of those bounds could lead to either a non-pickup, or an inability to deliver.",
            "enum": [ "TL", "LTL" ]
          },
          "bolNumber": {
            "type": "string",
            "description": "Partner specified BOL Number."
          },
            "shipmentId": {
                "type": "string",
                "description": "Shipment Id.(Shipment Id should be same as PartnerOrderCode)"
            },
          "contactInformations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "description": "First name of contact person."
                },
                "lastName": {
                  "type": "string",
                  "description": "Last name of contact person."
                },
                "email": {
                  "type": "string",
                  "description": "Email for communication."
                },
                "phoneNumbers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Phone number types.",
                        "enum": [ "MOBILE", "WORK", "HOME" ]
                      },
                      "number": {
                        "type": "string",
                        "description": "Contact number."
                      }
                    }
                  },
                  "description": "Primary and alternate numbers for communication."
                },
                "title": {
                  "type": "string",
                  "description": "Title of contact person."
                },
                "isPrimary": {
                  "type": "boolean",
                  "description": "Is it the primary contact information?."
                }
              },
              "required": [ "firstName", "email", "phoneNumbers" ]
            },
            "description": "Contact Information for this Order."
          },
          "referenceNumbers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "typeCode": {
                  "type": "string",
                  "description": "Reference Type code.",
                  "enum": [
                    "AN",
                    "AO",
                    "BM",
                    "CG",
                    "MB",
                    "OI",
                    "OR",
                    "PO",
                    "PS",
                    "PU",
                    "QL",
                    "SI",
                    "SN",
                    "ZZ",
                    "11",
                    "19",
                    "2I",
                    "6O",
                    "6Y",
                    "CN",
                    "CO",
                    "CR",
                    "DJ",
                    "DN",
                    "DO",
                    "DP",
                    "EH",
                    "EMM",
                    "EQ",
                    "IA",
                    "IL",
                    "KK",
                    "KR",
                    "MI",
                    "MO",
                    "OQ",
                    "P8",
                    "PRT",
                    "QN",
                    "QY",
                    "RB",
                    "RE",
                    "RN",
                    "SC",
                    "SO",
                    "SQ",
                    "TH",
                    "TN",
                    "VD",
                    "VR",
                    "RSN",
                    "8",
                    "23",
                    "4B",
                    "51",
                    "6A",
                    "6M",
                    "6P",
                    "71",
                    "A0",
                    "A6",
                    "A8",
                    "ACI",
                    "AG",
                    "AQ",
                    "AT",
                    "BC",
                    "BL",
                    "BN",
                    "BV",
                    "CB",
                    "CF",
                    "CH",
                    "CP",
                    "CT",
                    "DAN",
                    "DG",
                    "DI",
                    "DK",
                    "DM",
                    "DU",
                    "GD",
                    "GM",
                    "IK",
                    "K6",
                    "LI",
                    "LM",
                    "LO",
                    "MH",
                    "NS",
                    "OC",
                    "ON",
                    "OP",
                    "OU",
                    "OW",
                    "PI",
                    "PL",
                    "PP",
                    "PUA",
                    "Q1",
                    "QJ",
                    "RI",
                    "RZ",
                    "S5",
                    "TDT",
                    "TF",
                    "TO",
                    "TP",
                    "TS",
                    "UP",
                    "VA",
                    "VE",
                    "ZG",
                    "ZM",
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6",
                    "7",
                    "8",
                    "9",
                    "0A",
                    "0B",
                    "0D",
                    "0E",
                    "0F",
                    "0G",
                    "0H",
                    "0I",
                    "0J",
                    "0K",
                    "0L",
                    "0M",
                    "0N",
                    "0P",
                    "10",
                    "12",
                    "13",
                    "14",
                    "15",
                    "16",
                    "17",
                    "18",
                    "1A",
                    "1B",
                    "1C",
                    "1D",
                    "1E",
                    "1F",
                    "1G",
                    "1H",
                    "1I",
                    "1J",
                    "1K",
                    "1L",
                    "1M",
                    "1N",
                    "1O",
                    "1P",
                    "1Q",
                    "1R",
                    "1S",
                    "1T",
                    "1U",
                    "1V",
                    "1W",
                    "1X",
                    "1Y",
                    "1Z",
                    "20",
                    "21",
                    "22",
                    "24",
                    "25",
                    "26",
                    "27",
                    "28",
                    "29",
                    "2A",
                    "2B",
                    "2C",
                    "2D",
                    "2E",
                    "2F",
                    "2G",
                    "2H",
                    "2J",
                    "2K",
                    "2L",
                    "2M",
                    "2N",
                    "2O",
                    "2P",
                    "2Q",
                    "2R",
                    "2S",
                    "2T",
                    "2U",
                    "2V",
                    "2W",
                    "2X",
                    "2Y",
                    "2Z",
                    "30",
                    "31",
                    "32",
                    "33",
                    "34",
                    "35",
                    "36",
                    "37",
                    "38",
                    "39",
                    "3A",
                    "3B",
                    "3C",
                    "3D",
                    "3E",
                    "3F",
                    "3G",
                    "3H",
                    "3I",
                    "3J",
                    "3K",
                    "3L",
                    "3M",
                    "3N",
                    "3O",
                    "3P",
                    "3Q",
                    "3R",
                    "3S",
                    "3T",
                    "3U",
                    "3V",
                    "3W",
                    "3X",
                    "3Y",
                    "3Z",
                    "40",
                    "41",
                    "42",
                    "43",
                    "44",
                    "45",
                    "46",
                    "47",
                    "48",
                    "49",
                    "4A",
                    "4C",
                    "4D",
                    "4E",
                    "4F",
                    "4G",
                    "4H",
                    "4I",
                    "4J",
                    "4K",
                    "4L",
                    "4M",
                    "4N",
                    "4O",
                    "4P",
                    "4Q",
                    "4R",
                    "4S",
                    "4T",
                    "4U",
                    "4V",
                    "4W",
                    "4X",
                    "4Y",
                    "4Z",
                    "50",
                    "52",
                    "53",
                    "54",
                    "55",
                    "56",
                    "57",
                    "58",
                    "59",
                    "5A",
                    "5B",
                    "5C",
                    "5D",
                    "5E",
                    "5F",
                    "5G",
                    "5H",
                    "5I",
                    "5J",
                    "5K",
                    "5L",
                    "5M",
                    "5N",
                    "5O",
                    "5P",
                    "5Q",
                    "5R",
                    "5S",
                    "5T",
                    "5U",
                    "5V",
                    "5W",
                    "5X",
                    "5Y",
                    "5Z",
                    "60",
                    "61",
                    "63",
                    "64",
                    "65",
                    "66",
                    "67",
                    "68",
                    "69",
                    "6B",
                    "6C",
                    "6D",
                    "6E",
                    "6F",
                    "6G",
                    "6H",
                    "6I",
                    "6J",
                    "6K",
                    "6L",
                    "6N",
                    "6Q",
                    "6R",
                    "6S",
                    "6T",
                    "6U",
                    "6V",
                    "6W",
                    "6X",
                    "6Z",
                    "70",
                    "72",
                    "73",
                    "74",
                    "75",
                    "76",
                    "77",
                    "78",
                    "79",
                    "7A",
                    "7B",
                    "7C",
                    "7D",
                    "7E",
                    "7F",
                    "7G",
                    "7H",
                    "7I",
                    "7J",
                    "7K",
                    "7L",
                    "7M",
                    "7N",
                    "7O",
                    "7P",
                    "7Q",
                    "7R",
                    "7S",
                    "7T",
                    "7U",
                    "7W",
                    "7X",
                    "7Y",
                    "7Z",
                    "80",
                    "81",
                    "82",
                    "83",
                    "84",
                    "85",
                    "86",
                    "87",
                    "88",
                    "89",
                    "8A",
                    "8B",
                    "8C",
                    "8D",
                    "8E",
                    "8F",
                    "8G",
                    "8H",
                    "8I",
                    "8J",
                    "8K",
                    "8L",
                    "8M",
                    "8N",
                    "8O",
                    "8P",
                    "8Q",
                    "8R",
                    "8S",
                    "8U",
                    "8V",
                    "8W",
                    "8X",
                    "8Y",
                    "8Z",
                    "90",
                    "91",
                    "92",
                    "93",
                    "94",
                    "95",
                    "96",
                    "97",
                    "98",
                    "99",
                    "9A",
                    "9B",
                    "9C",
                    "9D",
                    "9E",
                    "9F",
                    "9G",
                    "9H",
                    "9I",
                    "9J",
                    "9K",
                    "9L",
                    "9M",
                    "9N",
                    "9P",
                    "9Q",
                    "9R",
                    "9S",
                    "9T",
                    "9U",
                    "9V",
                    "9W",
                    "9X",
                    "9Y",
                    "9Z",
                    "A1",
                    "A2",
                    "A3",
                    "A4",
                    "A5",
                    "A7",
                    "A9",
                    "AA",
                    "AAA",
                    "AAB",
                    "AAC",
                    "AAD",
                    "AAE",
                    "AAF",
                    "AAG",
                    "AAH",
                    "AAI",
                    "AAJ",
                    "AAK",
                    "AAL",
                    "AAM",
                    "AAN",
                    "AAO",
                    "AAP",
                    "AAQ",
                    "AAR",
                    "AAS",
                    "AAT",
                    "AAU",
                    "AAV",
                    "AAW",
                    "AAX",
                    "AAY",
                    "AAZ",
                    "AB",
                    "ABA",
                    "ABB",
                    "ABC",
                    "ABD",
                    "ABE",
                    "ABF",
                    "ABG",
                    "ABH",
                    "ABJ",
                    "ABK",
                    "ABL",
                    "ABM",
                    "ABN",
                    "ABO",
                    "ABP",
                    "ABQ",
                    "ABR",
                    "ABS",
                    "ABT",
                    "ABU",
                    "ABV",
                    "ABY",
                    "AC",
                    "ACA",
                    "ACB",
                    "ACC",
                    "ACD",
                    "ACE",
                    "ACF",
                    "ACG",
                    "ACH",
                    "ACJ",
                    "ACK",
                    "ACR",
                    "ACS",
                    "ACT",
                    "AD",
                    "ADA",
                    "ADB",
                    "ADC",
                    "ADD",
                    "ADE",
                    "ADF",
                    "ADG",
                    "ADH",
                    "ADI",
                    "ADM",
                    "AE",
                    "AEA",
                    "AEB",
                    "AEC",
                    "AED",
                    "AEE",
                    "AEF",
                    "AEG",
                    "AEH",
                    "AEI",
                    "AEJ",
                    "AEK",
                    "AEL",
                    "AEM",
                    "AF",
                    "AH",
                    "AHC",
                    "AI",
                    "AJ",
                    "AK",
                    "AL",
                    "ALC",
                    "ALG",
                    "ALH",
                    "ALI",
                    "ALJ",
                    "ALT",
                    "AM",
                    "AP",
                    "API",
                    "AR",
                    "AS",
                    "ASL",
                    "ASP",
                    "AST",
                    "ATC",
                    "AU",
                    "AV",
                    "AW",
                    "AX",
                    "AY",
                    "AZ",
                    "B1",
                    "B2",
                    "B3",
                    "B4",
                    "B5",
                    "B6",
                    "B7",
                    "B8",
                    "B9",
                    "BA",
                    "BAA",
                    "BAB",
                    "BAC",
                    "BAD",
                    "BAE",
                    "BAF",
                    "BAG",
                    "BAH",
                    "BAI",
                    "BB",
                    "BCI",
                    "BD",
                    "BE",
                    "BF",
                    "BG",
                    "BH",
                    "BI",
                    "BJ",
                    "BK",
                    "BKT",
                    "BLT",
                    "BMM",
                    "BO",
                    "BOI",
                    "BP",
                    "BQ",
                    "BR",
                    "BS",
                    "BT",
                    "BU",
                    "BW",
                    "BX",
                    "BY",
                    "BZ",
                    "C0",
                    "C1",
                    "C2",
                    "C3",
                    "C4",
                    "C5",
                    "C6",
                    "C7",
                    "C8",
                    "C9",
                    "CA",
                    "CBG",
                    "CC",
                    "CD",
                    "CDN",
                    "CE",
                    "CI",
                    "CIR",
                    "CIT",
                    "CJ",
                    "CK",
                    "CL",
                    "CM",
                    "CMN",
                    "CMP",
                    "CMT",
                    "CNO",
                    "COL",
                    "COT",
                    "CPA",
                    "CPT",
                    "CQ",
                    "CRN",
                    "CRS",
                    "CS",
                    "CSC",
                    "CSG",
                    "CST",
                    "CTS",
                    "CU",
                    "CV",
                    "CW",
                    "CX",
                    "CY",
                    "CYC",
                    "CZ",
                    "D0",
                    "D1",
                    "D2",
                    "D3",
                    "D4",
                    "D5",
                    "D6",
                    "D7",
                    "D8",
                    "D9",
                    "DA",
                    "DB",
                    "DC",
                    "DD",
                    "DE",
                    "DF",
                    "DH",
                    "DHH",
                    "DIS",
                    "DL",
                    "DNR",
                    "DNS",
                    "DOA",
                    "DOC",
                    "DOE",
                    "DOI",
                    "DOJ",
                    "DOL",
                    "DON",
                    "DOS",
                    "DOT",
                    "DQ",
                    "DR",
                    "DRN",
                    "DS",
                    "DSC",
                    "DSI",
                    "DST",
                    "DT",
                    "DTS",
                    "DUN",
                    "DV",
                    "DW",
                    "DX",
                    "DY",
                    "DZ",
                    "E1",
                    "E2",
                    "E3",
                    "E4",
                    "E5",
                    "E6",
                    "E7",
                    "E8",
                    "E9",
                    "EA",
                    "EB",
                    "EC",
                    "ED",
                    "EDA",
                    "EE",
                    "EF",
                    "EG",
                    "EI",
                    "EJ",
                    "EK",
                    "EL",
                    "EM",
                    "EN",
                    "END",
                    "EO",
                    "EP",
                    "EPA",
                    "EPB",
                    "ER",
                    "ES",
                    "ESN",
                    "ET",
                    "EU",
                    "EV",
                    "EW",
                    "EX",
                    "EY",
                    "EZ",
                    "F1",
                    "F2",
                    "F3",
                    "F4",
                    "F5",
                    "F6",
                    "F7",
                    "F8",
                    "F9",
                    "FA",
                    "FB",
                    "FC",
                    "FCN",
                    "FD",
                    "FE",
                    "FF",
                    "FG",
                    "FH",
                    "FI",
                    "FJ",
                    "FK",
                    "FL",
                    "FLZ",
                    "FM",
                    "FMP",
                    "FN",
                    "FND",
                    "FO",
                    "FP",
                    "FQ",
                    "FR",
                    "FS",
                    "FSN",
                    "FT",
                    "FTN",
                    "FU",
                    "FV",
                    "FW",
                    "FWC",
                    "FX",
                    "FY",
                    "FZ",
                    "G1",
                    "G2",
                    "G3",
                    "G4",
                    "G5",
                    "G6",
                    "G7",
                    "G8",
                    "G9",
                    "GA",
                    "GB",
                    "GC",
                    "GE",
                    "GF",
                    "GG",
                    "GH",
                    "GI",
                    "GJ",
                    "GK",
                    "GL",
                    "GN",
                    "GO",
                    "GP",
                    "GQ",
                    "GR",
                    "GS",
                    "GT",
                    "GU",
                    "GV",
                    "GW",
                    "GWS",
                    "GX",
                    "GY",
                    "GZ",
                    "H1",
                    "H2",
                    "H3",
                    "H4",
                    "H5",
                    "H6",
                    "H7",
                    "H8",
                    "H9",
                    "HA",
                    "HB",
                    "HC",
                    "HD",
                    "HE",
                    "HF",
                    "HG",
                    "HH",
                    "HHT",
                    "HI",
                    "HJ",
                    "HK",
                    "HL",
                    "HM",
                    "HMB",
                    "HN",
                    "HO",
                    "HP",
                    "HPI",
                    "HQ",
                    "HR",
                    "HS",
                    "HT",
                    "HU",
                    "HUD",
                    "HV",
                    "HW",
                    "HX",
                    "HY",
                    "HZ",
                    "I1",
                    "I2",
                    "I3",
                    "I4",
                    "I5",
                    "I7",
                    "I8",
                    "I9",
                    "IB",
                    "IC",
                    "ICD",
                    "ID",
                    "IE",
                    "IF",
                    "IFT",
                    "IG",
                    "IH",
                    "II",
                    "IID",
                    "IJ",
                    "IM",
                    "IMP",
                    "IMS",
                    "IN",
                    "IND",
                    "IO",
                    "IP",
                    "IQ",
                    "IR",
                    "IRN",
                    "IRP",
                    "IS",
                    "ISC",
                    "ISN",
                    "ISS",
                    "IT",
                    "IU",
                    "IV",
                    "IW",
                    "IX",
                    "IZ",
                    "J0",
                    "J1",
                    "J2",
                    "J3",
                    "J4",
                    "J5",
                    "J6",
                    "J7",
                    "J8",
                    "J9",
                    "JA",
                    "JB",
                    "JC",
                    "JD",
                    "JE",
                    "JF",
                    "JH",
                    "JI",
                    "JK",
                    "JL",
                    "JM",
                    "JN",
                    "JO",
                    "JP",
                    "JQ",
                    "JR",
                    "JS",
                    "JT",
                    "JU",
                    "JV",
                    "JW",
                    "JX",
                    "JY",
                    "JZ",
                    "K0",
                    "K1",
                    "K2",
                    "K3",
                    "K4",
                    "K5",
                    "K7",
                    "K8",
                    "K9",
                    "KA",
                    "KB",
                    "KC",
                    "KD",
                    "KE",
                    "KG",
                    "KH",
                    "KI",
                    "KJ",
                    "KL",
                    "KM",
                    "KN",
                    "KO",
                    "KP",
                    "KQ",
                    "KS",
                    "KT",
                    "KU",
                    "KV",
                    "KW",
                    "KX",
                    "KY",
                    "KZ",
                    "L1",
                    "L2",
                    "L3",
                    "L4",
                    "L5",
                    "L6",
                    "L7",
                    "L8",
                    "L9",
                    "LA",
                    "LB",
                    "LC",
                    "LD",
                    "LE",
                    "LEN",
                    "LF",
                    "LG",
                    "LH",
                    "LIC",
                    "LJ",
                    "LK",
                    "LL",
                    "LN",
                    "LOI",
                    "LP",
                    "LQ",
                    "LR",
                    "LS",
                    "LSD",
                    "LT",
                    "LU",
                    "LV",
                    "LVO",
                    "LW",
                    "LX",
                    "LY",
                    "LZ",
                    "M1",
                    "M2",
                    "M3",
                    "M5",
                    "M6",
                    "M7",
                    "M8",
                    "M9",
                    "MA",
                    "MBX",
                    "MC",
                    "MCI",
                    "MD",
                    "MDN",
                    "ME",
                    "MF",
                    "MG",
                    "MJ",
                    "MK",
                    "ML",
                    "MM",
                    "MN",
                    "MP",
                    "MQ",
                    "MR",
                    "MS",
                    "MSL",
                    "MT",
                    "MU",
                    "MV",
                    "MW",
                    "MX",
                    "MY",
                    "MZ",
                    "MZO",
                    "N0",
                    "N1",
                    "N2",
                    "N3",
                    "N4",
                    "N5",
                    "N6",
                    "N7",
                    "N8",
                    "N9",
                    "NA",
                    "NAS",
                    "NB",
                    "NC",
                    "ND",
                    "NDA",
                    "NDB",
                    "NE",
                    "NF",
                    "NFC",
                    "NFD",
                    "NFM",
                    "NFN",
                    "NFS",
                    "NG",
                    "NH",
                    "NI",
                    "NJ",
                    "NK",
                    "NL",
                    "NM",
                    "NN",
                    "NO",
                    "NP",
                    "NQ",
                    "NR",
                    "NT",
                    "NU",
                    "NW",
                    "NX",
                    "NY",
                    "NZ",
                    "O1",
                    "O2",
                    "O5",
                    "O7",
                    "O8",
                    "O9",
                    "OA",
                    "OB",
                    "OD",
                    "OE",
                    "OF",
                    "OG",
                    "OH",
                    "OJ",
                    "OK",
                    "OL",
                    "OM",
                    "OS",
                    "OT",
                    "OV",
                    "OX",
                    "OZ",
                    "P1",
                    "P2",
                    "P3",
                    "P4",
                    "P5",
                    "P6",
                    "P7",
                    "P9",
                    "PA",
                    "PAC",
                    "PAN",
                    "PAP",
                    "PB",
                    "PC",
                    "PCC",
                    "PCN",
                    "PD",
                    "PDL",
                    "PE",
                    "PF",
                    "PG",
                    "PGC",
                    "PGN",
                    "PGS",
                    "PH",
                    "PHC",
                    "PID",
                    "PIN",
                    "PJ",
                    "PK",
                    "PLA",
                    "PLN",
                    "PM",
                    "PMN",
                    "PN",
                    "PNN",
                    "POL",
                    "PQ",
                    "PR",
                    "PRS",
                    "PSI",
                    "PSL",
                    "PSM",
                    "PSN",
                    "PT",
                    "PTC",
                    "PV",
                    "PW",
                    "PWC",
                    "PWS",
                    "PX",
                    "PY",
                    "PZ",
                    "Q2",
                    "Q3",
                    "Q4",
                    "Q5",
                    "Q6",
                    "Q7",
                    "Q8",
                    "Q9",
                    "QA",
                    "QB",
                    "QC",
                    "QD",
                    "QE",
                    "QF",
                    "QG",
                    "QH",
                    "QI",
                    "QK",
                    "QM",
                    "QO",
                    "QP",
                    "QQ",
                    "QR",
                    "QS",
                    "QT",
                    "QU",
                    "QV",
                    "QW",
                    "QX",
                    "QZ",
                    "R0",
                    "R1",
                    "R2",
                    "R3",
                    "R4",
                    "R5",
                    "R6",
                    "R7",
                    "R8",
                    "R9",
                    "RA",
                    "RAA",
                    "RAN",
                    "RC",
                    "RD",
                    "REC",
                    "RF",
                    "RG",
                    "RGI",
                    "RH",
                    "RIG",
                    "RJ",
                    "RK",
                    "RL",
                    "RM",
                    "RO",
                    "RP",
                    "RPP",
                    "RPT",
                    "RQ",
                    "RR",
                    "RRS",
                    "RS",
                    "RT",
                    "RU",
                    "RV",
                    "RW",
                    "RX",
                    "RY",
                    "S0",
                    "S1",
                    "S2",
                    "S3",
                    "S4",
                    "S6",
                    "S7",
                    "S8",
                    "S9",
                    "SA",
                    "SB",
                    "SBN",
                    "SCA",
                    "SD",
                    "SE",
                    "SEK",
                    "SES",
                    "SF",
                    "SG",
                    "SH",
                    "SHL",
                    "SJ",
                    "SK",
                    "SL",
                    "SM",
                    "SNH",
                    "SNV",
                    "SP",
                    "SPL",
                    "SPN",
                    "SR",
                    "SS",
                    "ST",
                    "STB",
                    "STR",
                    "SU",
                    "SUB",
                    "SUO",
                    "SV",
                    "SW",
                    "SX",
                    "SY",
                    "SZ",
                    "T0",
                    "T1",
                    "T2",
                    "T3",
                    "T4",
                    "T5",
                    "T6",
                    "T7",
                    "T8",
                    "T9",
                    "TA",
                    "TB",
                    "TC",
                    "TD",
                    "TE",
                    "TG",
                    "TI",
                    "TIP",
                    "TJ",
                    "TK",
                    "TL",
                    "TM",
                    "TOC",
                    "TPN",
                    "TQ",
                    "TR",
                    "TSN",
                    "TT",
                    "TU",
                    "TV",
                    "TW",
                    "TX",
                    "TY",
                    "TZ",
                    "U0",
                    "U1",
                    "U2",
                    "U3",
                    "U4",
                    "U5",
                    "U6",
                    "U8",
                    "U9",
                    "UA",
                    "UB",
                    "UC",
                    "UD",
                    "UE",
                    "UF",
                    "UG",
                    "UH",
                    "UI",
                    "UJ",
                    "UK",
                    "UL",
                    "UM",
                    "UN",
                    "UO",
                    "UQ",
                    "UR",
                    "URL",
                    "US",
                    "UT",
                    "UU",
                    "UV",
                    "UW",
                    "UX",
                    "UY",
                    "UZ",
                    "V0",
                    "V1",
                    "V2",
                    "V3",
                    "V4",
                    "V5",
                    "V6",
                    "V7",
                    "V8",
                    "V9",
                    "VB",
                    "VC",
                    "VF",
                    "VG",
                    "VH",
                    "VI",
                    "VJ",
                    "VK",
                    "VL",
                    "VM",
                    "VN",
                    "VO",
                    "VP",
                    "VQ",
                    "VS",
                    "VT",
                    "VU",
                    "VV",
                    "VW",
                    "VX",
                    "VY",
                    "VZ",
                    "W1",
                    "W2",
                    "W3",
                    "W4",
                    "W5",
                    "W6",
                    "W7",
                    "W8",
                    "W9",
                    "WA",
                    "WB",
                    "WC",
                    "WCS",
                    "WD",
                    "WDR",
                    "WE",
                    "WF",
                    "WG",
                    "WH",
                    "WI",
                    "WJ",
                    "WK",
                    "WL",
                    "WM",
                    "WN",
                    "WO",
                    "WP",
                    "WQ",
                    "WR",
                    "WS",
                    "WT",
                    "WU",
                    "WV",
                    "WW",
                    "WX",
                    "WY",
                    "WZ",
                    "X0",
                    "X1",
                    "X2",
                    "X3",
                    "X4",
                    "X5",
                    "X6",
                    "X7",
                    "X8",
                    "X9",
                    "XA",
                    "XB",
                    "XC",
                    "XD",
                    "XE",
                    "XF",
                    "XG",
                    "XH",
                    "XI",
                    "XJ",
                    "XK",
                    "XL",
                    "XM",
                    "XN",
                    "XO",
                    "XP",
                    "XQ",
                    "XR",
                    "XS",
                    "XT",
                    "XU",
                    "XV",
                    "XW",
                    "XX",
                    "XY",
                    "XZ",
                    "Y0",
                    "Y1",
                    "Y2",
                    "Y3",
                    "Y4",
                    "Y5",
                    "Y6",
                    "Y7",
                    "Y8",
                    "Y9",
                    "YA",
                    "YB",
                    "YC",
                    "YD",
                    "YE",
                    "YF",
                    "YH",
                    "YI",
                    "YJ",
                    "YK",
                    "YL",
                    "YM",
                    "YN",
                    "YO",
                    "YP",
                    "YQ",
                    "YR",
                    "YS",
                    "YT",
                    "YV",
                    "YW",
                    "YX",
                    "YY",
                    "YZ",
                    "Z1",
                    "Z2",
                    "Z3",
                    "Z4",
                    "Z5",
                    "Z6",
                    "Z7",
                    "Z8",
                    "Z9",
                    "ZA",
                    "ZB",
                    "ZC",
                    "ZD",
                    "ZE",
                    "ZF",
                    "ZH",
                    "ZI",
                    "ZJ",
                    "ZK",
                    "ZL",
                    "ZN",
                    "ZO",
                    "ZP",
                    "ZQ",
                    "ZR",
                    "ZS",
                    "ZT",
                    "ZU",
                    "ZV",
                    "ZW",
                    "ZX",
                    "ZY",
                    "TRN",
                    "TCE",
                    "TCO",
                    "UUID"
                  ]
                },
                "value": {
                  "type": "string",
                  "description": "Actual value of reference code."
                }
              }
            },
            "description": "If customer has more than one reference number e.g. primary order number , secondary order number."
          },
          "applicationSource": {
            "type": "string",
            "description": "Application source is an enum, which indicates this quote created by which source like API, XpoConnect, EDI etc.",
            "enum": [ "GPAPI", "XpoConnect", "EDI" ]
          }
        },
        "required": [
          "partnerIdentifierCode",
          "transportationMode",
          "contactInformations",
          "applicationSource"
        ],
        "example": {
          "partnerOrderCode": "",
          "partnerIdentifierCode": "2-1-TESTCHN2",
          "equipmentCategoryCode": "VN",
          "equipmentTypeCode": "V",
          "transportationMode": [
            "LTL"
          ],
          "additionalServices": [
            {
              "code": "GUARANTEED"
            }
          ],
          "contactInformations": [
            {
              "firstName": "Customer Admin",
              "lastName": "",
              "email": "devcustomer@gmail.com",
              "phoneNumbers": [
                {
                  "type": "1",
                  "number": "+15444454555"
                }
              ]
            }
          ],
          "applicationSource": "GPAPI"
        }
      },
      "TLRequiredFields": {
        "allOf": [
          {
            "$ref": "#/components/schemas/quoterequest"
          },
          {
            "type": "object",
            "properties": {
              "stops": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "addressInformations": {
                      "type": "object",
                      "properties": {
                        "locationId": {
                          "type": "string",
                          "description": "Id of location."
                        },
                        "locationName": {
                            "type": "string",
                            "description": "Name of location.(For minimal request to work for conversion to order, locationName should be provided in quote request)"
                        },
                        "addressLine1": {
                          "type": "string",
                          "description": "Address line 1 of stop location."
                        },
                        "addressLine2": {
                          "type": "string",
                          "description": "Address line 2 of stop location."
                        },
                        "cityName": {
                          "type": "string",
                          "description": "City name belongs to stop location."
                        },
                        "stateCode": {
                          "type": "string",
                          "description": "State code of the stop location."
                        },
                        "country": {
                          "type": "string",
                          "description": "Country belongs to stop location."
                        },
                        "zipCode": {
                          "type": "string",
                          "description": "Postal Code."
                        }
                      },
                      "required": [
                        "cityName",
                        "country",
                        "stateCode",
                        "zipCode"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of stop.",
                      "enum": [ "PICKUP", "INTERMEDIATE", "DELIVERY" ]
                    },
                    "scheduledTimeFrom": {
                      "type": "string",
                      "description": "The earliest time by which the service provider can reach the stop. ISO8601 UTC date-time format required"
                    },
                    "scheduledTimeTo": {
                      "type": "string",
                      "description": "The Latest time by which the service provider can reach the stop. ISO8601 UTC date-time format required"
                    },
                    "stopContactInformations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "firstName": {
                            "type": "string",
                            "description": "First name of contact person."
                          },
                          "lastName": {
                            "type": "string",
                            "description": "Last name of contact person."
                          },
                          "email": {
                            "type": "string",
                            "description": "Email for communication."
                          },
                          "phoneNumbers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "Type": {
                                  "type": "string",
                                  "description": "Phone number types.",
                                  "enum": [ "MOBILE", "WORK", "HOME" ]
                                },
                                "number": {
                                  "type": "string",
                                  "description": "Contact number."
                                },
                                "isPrimary": {
                                  "type": "boolean",
                                  "description": "Is contact primary information."
                                }
                              }
                            },
                            "description": "Primary and alternate numbers for communication."
                          },
                          "title": {
                            "type": "string",
                            "description": "Title of contact person."
                          },
                          "isPrimary": {
                            "type": "boolean",
                            "description": "Is it the primary contact information?."
                          }
                        },
                        "required": [
                          "firstName",
                          "email",
                          "phoneNumbers"
                        ]
                      },
                      "description": "Contact Information for each stop."
                    },
                    "specialRequirement": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "enum": [
                              "LFD: Liftgate Delivery",
                              "LFP: Liftgate Pickup",
                              "RSD: Residential Delivery",
                              "RSP: Residential Pickup"
                            ],
                            "description": "Special requirement type."
                          },
                          "value": {
                            "type": "string",
                            "description": "Special requirements value."
                          }
                        }
                      },
                      "description": "The array of special requirements for this stop."
                    },
                    "stopReferenceNumbers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "typeCode": {
                            "type": "string",
                            "description": "Stop Reference Type code."
                          },
                          "value": {
                            "type": "string",
                            "description": "Actual value of stop reference code."
                          }
                        }
                      },
                      "description": "The collection of reference numbers associated with this stop, its type is same as order reference object."
                    },
                    "note": {
                      "type": "string",
                      "description": " Stop notes string value"
                    },
                    "sequenceNo": {
                      "type": "integer",
                      "description": "Stop sequence number, required Required only if multi stop quote request."
                    }
                  },
                    "required": [
                        "addressInformations",
                        "type",
                        "scheduledTimeFrom",
                        "scheduledTimeTo",
                        "stopContactInformations",
                        "sequenceNo"
                    ]
                },
                "description": "Stops information for this Quote including origin and destination."
              },
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "productCode": {
                      "type": "string",
                      "description": "Item's Product Code."
                    },
                    "itemDescription": {
                      "type": "string",
                      "description": "Item's description."
                    },
                    "itemNumber": {
                      "type": "string",
                      "description": "Item's number."
                    },
                    "units": {
                      "type": "integer",
                      "description": "Number of units."
                    },
                    "unitTypeCode": {
                      "type": "string",
                      "description": "Item's unit type.",
                      "enum": [
                        "ACCE",
                        "DRUM",
                        "SKIDS",
                        "ATTCH",
                        "ENVE",
                        "SLIP",
                        "BAGS",
                        "FEET",
                        "SPRS",
                        "BALE",
                        "FIRK",
                        "TOTE",
                        "BASK",
                        "GYLD",
                        "TRKL",
                        "BHDS",
                        "GAYL",
                        "TRLR",
                        "BNDL",
                        "KEGS",
                        "TRNK",
                        "BOXES",
                        "LOOS",
                        "TRAY",
                        "BRRL",
                        "OCTA",
                        "TUBE",
                        "BUCK",
                        "PACK",
                        "UNIT",
                        "CARB",
                        "PAIL",
                        "UNPK",
                        "CASES",
                        "PIEC",
                        "VEH",
                        "CASE",
                        "PALLETS",
                        "BINS",
                        "CHST",
                        "PLTS",
                        "COIL",
                        "RACK",
                        "CARTONS",
                        "RACKS",
                        "CRTS",
                        "REEL",
                        "CTN",
                        "ROLL",
                        "CYLS",
                        "SKID"
                      ]
                    },
                    "packageUnits": {
                      "type": "integer",
                      "description": "Number of packages."
                    },
                    "packageTypeCode": {
                      "type": "string",
                      "description": "Package type.",
                      "enum": [
                        "ACCE",
                        "DRUM",
                        "SKIDS",
                        "ATTCH",
                        "ENVE",
                        "SLIP",
                        "BAGS",
                        "FEET",
                        "SPRS",
                        "BALE",
                        "FIRK",
                        "TOTE",
                        "BASK",
                        "GYLD",
                        "TRKL",
                        "BHDS",
                        "GAYL",
                        "TRLR",
                        "BNDL",
                        "KEGS",
                        "TRNK",
                        "BOXES",
                        "LOOS",
                        "TRAY",
                        "BRRL",
                        "OCTA",
                        "TUBE",
                        "BUCK",
                        "PACK",
                        "UNIT",
                        "CARB",
                        "PAIL",
                        "UNPK",
                        "CASES",
                        "PIEC",
                        "VEH",
                        "CASE",
                        "PALLETS",
                        "BINS",
                        "CHST",
                        "PLTS",
                        "COIL",
                        "RACK",
                        "CARTONS",
                        "RACKS",
                        "CRTS",
                        "REEL",
                        "CTN",
                        "ROLL",
                        "CYLS",
                        "SKID"
                      ]
                    },
                    "weight": {
                      "type": "integer",
                      "description": "Item's weight."
                    },
                    "weightUomCode": {
                      "type": "string",
                      "description": "Weight- Unit of measure.",
                      "enum": [ "KG", "LB" ]
                    },
                    "height": {
                      "type": "number",
                      "description": "Item's height."
                    },
                    "heightUomCode": {
                      "type": "string",
                      "description": "Height- Unit of measure.",
                      "enum": [ "CM", "IN", "FT" ]
                    },
                    "length": {
                      "type": "number",
                      "description": "Item's length."
                    },
                    "lengthUomCode": {
                      "type": "string",
                      "description": "Length - Unit of measure.",
                      "enum": [ "CM", "IN", "FT" ]
                    },
                    "width": {
                      "type": "integer",
                      "description": "Item's width."
                    },
                    "widthUomCode": {
                      "type": "string",
                      "description": "Width - Unit of measure.",
                      "enum": [ "CM", "IN", "FT" ]
                    },
                    "isHazmat": {
                      "type": "boolean",
                      "description": "Whether item is hazardous or not."
                    },
                    "hazardousItemInfo": {
                      "type": "object",
                      "properties": {
                        "unNumber": {
                          "type": "integer",
                          "description": "Identification number to identify dangerous goods."
                        },
                        "packingGroup": {
                          "type": "integer",
                          "description": "Packaging group."
                        },
                        "receptacleSize": {
                          "type": "integer",
                          "description": "Receptacle size."
                        },
                        "hazardousClass": {
                          "type": "string",
                          "description": "Hazardous class."
                        },
                        "numberofReceptacles": {
                          "type": "integer",
                          "description": "Number of receptacles."
                        },
                        "unitofMeasure": {
                          "type": "string",
                          "description": "Unit of measure."

                        },
                        "containerType": {
                          "type": "string",
                          "description": "Container type."
                        },
                        "hazardousDescription": {
                          "type": "string",
                          "description": "Hazardous description."
                        },
                        "hazardousPhoneNumber": {
                          "type": "string",
                          "description": "Phone number."
                        },
                        "shippingName": {
                          "type": "string",
                          "description": "Shipping Name."
                        }
                      },
                      "description": "Hazardous information if the item is Hazardous material (IsHazmat = true)"
                    },
                    "isTemperatureControlled": {
                      "type": "boolean",
                      "description": "Whether item is temperature controlled or not."
                    },
                    "temperatureInformation": {
                      "type": "object",
                      "properties": {
                        "high": {
                          "type": "string",
                          "description": "High temperature."
                        },
                        "low": {
                          "type": "string",
                          "description": "Low temperature."
                        },
                        "highUom": {
                          "type": "string",
                          "description": "High temperature Unit of measure."
                        },
                        "lowUom": {
                          "type": "string",
                          "description": "Low temperature Unit of measure."
                        }
                      },
                      "description": "Temperature information of the Item."
                    },
                    "sku": {
                      "type": "string",
                      "description": "Stock-keeping unit or SKU refers to a specific item stored to a specific location."
                    },
                    "class": {
                      "type": "string",
                      "description": "This code represents product freight class.."
                    },
                    "nmfcCode": {
                      "type": "string",
                      "description": "Commodity or type of product is assigned a National Motor Freight Classification"
                    },
                    "declaredValueAmount": {
                      "type": "number",
                      "description": "Item's declared amount value."
                    }
                  },
                  "required": [
                    "declaredValueAmount",
                    "weight"
                  ]
                },
                "description": "All item details of Quote."
              },
              "additionalServices": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    }
                  }
                },
                "description": "Additional services required for this quote.",
                "enum": [ "Single", "Team" ]
              }
            },
            "required": [
              "stops",
              "items",
              "equipmentCategoryCode",
              "equipmentTypeCode"
            ],
            "example": {
                    "additionalServices": [
                        {
                            "code": "Single"
                        },
                        {
                            "code": "Team"
                        }
                    ],
                    "stops": [
                        {
                            "addressInformations": {
                                "locationName": "North Ridgeville",
                                "addressLine1": "North Ridgeville",
                                "cityName": "North Ridgeville",
                                "stateCode": "WI",
                                "country": "USA",
                                "zipCode": "53706"
                            },
                            "type": "Pickup",
                            "scheduledTimeFrom": "2021-08-17T00:00:00-04:00",
                            "scheduledTimeTo": "2021-08-18T10:20:00-04:00",
                            "sequenceNo": 1,
                            "specialRequirement": [
                                {
                                    "code": "LFP"
                                }
                            ],
                            "stopReferenceNumbers": [
                                {
                                    "typeCode": "PO",
                                    "value": "254123"
                                }
                            ],
                            "StopContactInformations": [
                                {
                                    "firstName": "PickupFName",
                                    "lastName": "",
                                    "email": "PickupFName@test.com",
                                    "PhoneNumbers": [
                                        {
                                            "type": "Mobile",
                                            "number": "2165473876"
                                        }
                                    ],
                                    "isPrimary": false
                                }
                            ]
                        },
                        {
                            "addressInformations": {
                                "locationName": "Chicago",
                                "addressLine1": "Chicago",
                                "cityName": "Chicago",
                                "stateCode": "IL",
                                "country": "USA",
                                "zipCode": "60606"
                            },
                            "type": "Delivery",
                            "scheduledTimeFrom": "2021-08-18T10:20:00-04:00",
                            "scheduledTimeTo": "2021-08-19T10:20:00-04:00",
                            "sequenceNo": 2,
                            "specialRequirement": [
                                {
                                    "code": "APT"
                                },
                                {
                                    "code": "AST"
                                },
                                {
                                    "code": "DT"
                                },
                                {
                                    "code": "TWC"
                                }
                            ],
                            "stopReferenceNumbers": [
                                {
                                    "typeCode": "PO",
                                    "value": "254123"
                                }
                            ],
                            "StopContactInformations": [
                                {
                                    "firstName": "DeliveryFName",
                                    "lastName": "",
                                    "email": "DeliveryFName@test.com",
                                    "PhoneNumbers": [
                                        {
                                            "type": "Mobile",
                                            "number": "2132764532"
                                        }
                                    ],
                                    "isPrimary": false
                                }
                            ],
                            "note": null
                        }
                    ],
                    "transportationMode": [
                        "TL"
                    ],
                    "contactInformations": [
                        {
                            "lastName": "ZNH1N22H",
                            "firstName": "AXFS8LM2",
                            "email": "SK9QM7W3@BDPUWM26.com",
                            "phoneNumbers": [
                                {
                                    "type": "Mobile",
                                    "number": "5999213443"
                                }
                            ]
                        }
                    ],
                    "items": [
                        {
                            "productCode": "Paper",
                            "itemDescription": "test",
                            "itemNumber": "1",
                            "units": 1,
                            "unitTypeCode": "BAGS",
                            "packageUnits": 1,
                            "packageTypeCode": "BOXS",
                            "weight": 1000,
                            "weightUomCode": "LB",
                            "height": 10,
                            "heightUomCode": "IN",
                            "length": 10,
                            "lengthUomCode": "IN",
                            "width": 10,
                            "WidthUomCode": "IN",
                            "declaredValueAmount": 1000,
                            "DeclaredValueCurrencyCode": "USD",
                            "isTemperatureControlled": true,
                            "temperatureInformation": {
                                "high": 50,
                                "low": 30,
                                "highUom": "",
                                "lowUom": ""
                            },
                            "isHazmat": true,
                            "hazardousItemInfo": {
                                "unNumber": 10,
                                "packingGroup": 10,
                                "receptacleSize": 10,
                                "hazardousClass": "hc",
                                "numberofReceptacles": 10,
                                "unitofMeasure": "ibs",
                                "containerType": "van",
                                "hazardousDescription": "hd",
                                "hazardousPhoneNumber": "hp",
                                "shippingName": "sn"
                            },
                            "class": "50"
                        }
                    ],
                    "applicationSource": "GPAPI",
                    "partnerIdentifierCode": "2-1-TESTCHNC",
                    "partnerOrderCode": "test1",
                    "equipmentCategoryCode": "VN",
                    "equipmentTypeCode": "V"
            }
          }
        ]
      },
      "LTLRequiredFields": {
        "allOf": [
          {
            "$ref": "#/components/schemas/quoterequest"
          },
          {
            "type": "object",
            "properties": {
              "stops": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "addressInformations": {
                      "type": "object",
                      "properties": {
                        "locationId": {
                          "type": "string",
                          "description": "Id of location."
                        },
                        "locationName": {
                            "type": "string",
                            "description": "Name of location.(For minimal request to work for conversion to order, locationName should be provided in quote request)"
                        },
                        "addressLine1": {
                          "type": "string",
                          "description": "Address line 1 of stop location."
                        },
                        "addressLine2": {
                          "type": "string",
                          "description": "Address line 2 of stop location."
                        },
                        "cityName": {
                          "type": "string",
                          "description": "City name belongs to stop location."
                        },
                        "stateCode": {
                          "type": "string",
                          "description": "State code of the stop location."
                        },
                        "country": {
                          "type": "string",
                          "description": "Country belongs to stop location."
                        },
                        "zipCode": {
                          "type": "string",
                          "description": "Postal Code."
                        }
                      },
                      "required": [
                        "cityName",
                        "country",
                        "stateCode",
                        "zipCode"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of stop.",
                      "enum": [ "PICKUP", "INTERMEDIATE", "DELIVERY" ]
                    },
                    "scheduledTimeFrom": {
                      "type": "string",
                      "description": "The earliest time by which the service provider can reach the stop.\n\n Note: Time should be round up to 00,15,30,45 minutes. ISO8601 UTC date-time format required"
                    },
                    "scheduledTimeTo": {
                      "type": "string",
                      "description": "The Latest time by which the service provider can reach the stop.\n\n Note: Time should be round up to 00,15,30,45 minutes. ISO8601 UTC date-time format required"
                    },
                    "stopContactInformations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "firstName": {
                            "type": "string",
                            "description": "First name of contact person."
                          },
                          "lastName": {
                            "type": "string",
                            "description": "Last name of contact person."
                          },
                          "email": {
                            "type": "string",
                            "description": "Email for communication."
                          },
                          "phoneNumbers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "Type": {
                                  "type": "string",
                                  "description": "Phone number types.",
                                  "enum": [ "MOBILE", "WORK", "HOME" ]
                                },
                                "number": {
                                  "type": "string",
                                  "description": "Contact number."
                                },
                                "isPrimary": {
                                  "type": "boolean",
                                  "description": "Is contact primary information."
                                }
                              }
                            },
                            "description": "Primary and alternate numbers for communication."
                          },
                          "title": {
                            "type": "string",
                            "description": "Title of contact person."
                          },
                          "isPrimary": {
                            "type": "boolean",
                            "description": "Is it the primary contact information?."
                          }
                        },
                        "required": [
                          "firstName",
                          "email",
                          "phoneNumbers"
                        ]
                      },
                      "description": "Contact Information for each stop."
                    },
                    "specialRequirement": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Special requirement type.",
                            "enum": [
                              "APT: Appointment Required (Consignee)",
                              "APT: Appointment Required (Shipper)",
                              "CHD: Church Delivery",
                              "CHP: Church Pickup",
                              "CSD: Construction Site Delivery",
                              "CSP: Construction Site Pickup",
                              "ID: Inside Delivery",
                              "IP: Inside Pickup",
                              "MLD: Military Base Delivery",
                              "MLP: Military Base Pickup",
                              "MND: Mine Site Delivery",
                              "MNP: Mine Site Pickup",
                              "MID: Mini-Storage Delivery",
                              "MIP: Mini-Storage Pickup",
                              "NYC: NYC Metro (Consignee)",
                              "NYC: NYC Metro (Shipper)",
                              "APT: Appointment Required Code",
                              "LFD: Liftgate Delivery",
                              "LFP: Liftgate Pickup",
                              "RSD: Residential Delivery",
                              "RSP: Residential Pickup",
                              "SLD: School Delivery",
                              "SLP: School Pickup",
                              "SGS: Single Shipment"
                            ]
                          },
                          "value": {
                            "type": "string",
                            "description": "Special requirements value."
                          }
                        }
                      },
                      "description": "The array of special requirements for this stop."
                    },
                    "stopReferenceNumbers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "typeCode": {
                            "type": "string",
                            "description": "Stop Reference Type code."
                          },
                          "value": {
                            "type": "string",
                            "description": "Actual value of stop reference code."
                          }
                        }
                      },
                      "description": "The collection of reference numbers associated with this stop, its type is same as order reference object."
                    },
                    "note": {
                      "type": "string",
                      "description": "Stop notes string value"
                    },
                    "sequenceNo": {
                      "type": "integer",
                      "description": "Stop sequence number, required Required only if multi stop quote request."
                    }
                  },
                  "required": [
                    "addressInformations",
                    "type",
                    "sequenceNo",
                    "scheduledTimeFrom",
                    "scheduledTimeTo",
                    "stopContactInformations"
                  ]
                },
                "description": "Stops information for this Quote including origin and destination."
              },
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "productCode": {
                      "type": "string",
                      "description": "Item's Product Code."
                    },
                    "itemDescription": {
                      "type": "string",
                      "description": "Item's description."
                    },
                    "itemNumber": {
                      "type": "string",
                      "description": "Item's number."
                    },
                    "units": {
                      "type": "integer",
                      "description": "Number of units."
                    },
                    "unitTypeCode": {
                      "type": "string",
                      "description": "Item's unit type.",
                      "enum": [
                        "ACCE",
                        "DRUM",
                        "SKIDS",
                        "ATTCH",
                        "ENVE",
                        "SLIP",
                        "BAGS",
                        "FEET",
                        "SPRS",
                        "BALE",
                        "FIRK",
                        "TOTE",
                        "BASK",
                        "GYLD",
                        "TRKL",
                        "BHDS",
                        "GAYL",
                        "TRLR",
                        "BNDL",
                        "KEGS",
                        "TRNK",
                        "BOXES",
                        "LOOS",
                        "TRAY",
                        "BRRL",
                        "OCTA",
                        "TUBE",
                        "BUCK",
                        "PACK",
                        "UNIT",
                        "CARB",
                        "PAIL",
                        "UNPK",
                        "CASES",
                        "PIEC",
                        "VEH",
                        "CASE",
                        "PALLETS",
                        "BINS",
                        "CHST",
                        "PLTS",
                        "COIL",
                        "RACK",
                        "CARTONS",
                        "RACKS",
                        "CRTS",
                        "REEL",
                        "CTN",
                        "ROLL",
                        "CYLS",
                        "SKID"
                      ]
                    },
                    "packageUnits": {
                      "type": "integer",
                      "description": "Number of packages."
                    },
                    "packageTypeCode": {
                      "type": "string",
                      "description": "Package type.",
                      "enum": [
                        "ACCE",
                        "DRUM",
                        "SKIDS",
                        "ATTCH",
                        "ENVE",
                        "SLIP",
                        "BAGS",
                        "FEET",
                        "SPRS",
                        "BALE",
                        "FIRK",
                        "TOTE",
                        "BASK",
                        "GYLD",
                        "TRKL",
                        "BHDS",
                        "GAYL",
                        "TRLR",
                        "BNDL",
                        "KEGS",
                        "TRNK",
                        "BOXES",
                        "LOOS",
                        "TRAY",
                        "BRRL",
                        "OCTA",
                        "TUBE",
                        "BUCK",
                        "PACK",
                        "UNIT",
                        "CARB",
                        "PAIL",
                        "UNPK",
                        "CASES",
                        "PIEC",
                        "VEH",
                        "CASE",
                        "PALLETS",
                        "BINS",
                        "CHST",
                        "PLTS",
                        "COIL",
                        "RACK",
                        "CARTONS",
                        "RACKS",
                        "CRTS",
                        "REEL",
                        "CTN",
                        "ROLL",
                        "CYLS",
                        "SKID"
                      ]
                    },
                    "weight": {
                      "type": "integer",
                      "description": "Item's weight."
                    },
                    "weightUomCode": {
                      "type": "string",
                      "description": "Weight- Unit of measure.",
                      "enum": [ "KG", "LB" ]
                    },
                    "height": {
                      "type": "number",
                      "description": "Item's height."
                    },
                    "heightUomCode": {
                      "type": "string",
                      "description": "Height- Unit of measure.",
                      "enum": [ "CM", "IN", "FT" ]
                    },
                    "length": {
                      "type": "number",
                      "description": "Item's length."
                    },
                    "lengthUomCode": {
                      "type": "string",
                      "description": "Length - Unit of measure.",
                      "enum": [ "CM", "IN", "FT" ]
                    },
                    "width": {
                      "type": "integer",
                      "description": "Item's width."
                    },
                    "widthUomCode": {
                      "type": "string",
                      "description": "Width - Unit of measure.",
                      "enum": [ "CM", "IN", "FT" ]
                    },
                    "isHazmat": {
                      "type": "boolean",
                      "description": "Whether item is hazardous or not."
                    },
                    "hazardousItemInfo": {
                      "type": "object",
                      "properties": {
                        "unNumber": {
                          "type": "integer",
                          "description": "Identification number to identify dangerous goods."
                        },
                        "packingGroup": {
                          "type": "integer",
                          "description": "Packaging group."
                        },
                        "receptacleSize": {
                          "type": "integer",
                          "description": "Receptacle size."
                        },
                        "hazardousClass": {
                          "type": "string",
                          "description": "Hazardous class."
                        },
                        "numberofReceptacles": {
                          "type": "integer",
                          "description": "Number of receptacles."
                        },
                        "unitofMeasure": {
                          "type": "string",
                          "description": "Unit of measure."

                        },
                        "containerType": {
                          "type": "string",
                          "description": "Container type."
                        },
                        "hazardousDescription": {
                          "type": "string",
                          "description": "Hazardous description."
                        },
                        "hazardousPhoneNumber": {
                          "type": "string",
                          "description": "Phone number."
                        },
                        "shippingName": {
                          "type": "string",
                          "description": "Shipping Name."
                        }
                      },
                      "description": "Hazardous information if the item is Hazardous material (IsHazmat = true)"
                    },
                    "isTemperatureControlled": {
                      "type": "boolean",
                      "description": "Whether item is temperature controlled or not."
                    },
                    "temperatureInformation": {
                      "type": "object",
                      "properties": {
                        "high": {
                          "type": "string",
                          "description": "High temperature."
                        },
                        "low": {
                          "type": "string",
                          "description": "Low temperature."
                        },
                        "highUom": {
                          "type": "string",
                          "description": "High temperature Unit of measure."
                        },
                        "lowUom": {
                          "type": "string",
                          "description": "Low temperature Unit of measure."
                        }
                      },
                      "description": "Temperature information of the Item."
                    },
                    "sku": {
                      "type": "string",
                      "description": "Stock-keeping unit or SKU refers to a specific item stored to a specific location."
                    },
                    "class": {
                      "type": "string",
                      "description": "This code represents product freight class.."
                    },
                    "nmfcCode": {
                      "type": "string",
                      "description": "Commodity or type of product is assigned a National Motor Freight Classification"
                    },
                    "declaredValueAmount": {
                      "type": "number",
                      "description": "Item's declared amount value."
                    }
                  },
                  "required": [
                    "productCode",
                    "units",
                    "unitTypeCode",
                    "packageUnits",
                    "packageTypeCode",
                    "weight",
                    "weightUomCode",
                    "height",
                    "heightUomCode",
                    "width",
                    "widthUomCode",
                    "length",
                    "lengthUomCode"
                  ]
                },
                "description": "All item details of Quote."
              },
              "additionalServices": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    }
                  }
                },
                "description": "Additional services required for this quote.",
                "enum": [ "Standard", "Gauranteed" ]
              }
            },
            "required": [
              "stops",
              "items"
            ],
            "example": {
                "additionalServices": [
                    {
                        "code": "GUARANTEED"
                    },
                    {
                        "code": "STANDARD"
                    }
                ],
                "stops": [
                    {
                        "addressInformations": {
                            "locationName": "ABC PAINTING",
                            "addressLine1": "1260 RAILROAD AVE",
                            "addressLine2": "",
                            "cityName": "Vallejo",
                            "stateCode": "CA",
                            "country": "USA",
                            "zipCode": "94592"
                        },
                        "type": "Pickup",
                        "scheduledTimeFrom": "2021-08-17T00:00:00-04:00",
                        "scheduledTimeTo": "2021-08-18T10:20:00-04:00",
                        "sequenceNo": 1,
                        "specialRequirement": [
                            {
                                "code": "LFP"
                            }
                        ],
                        "StopContactInformations": [
                            {
                                "firstName": "PickupStop1",
                                "lastName": "",
                                "email": "LTLTeam@xpo.com",
                                "PhoneNumbers": [
                                    {
                                        "type": "Mobile",
                                        "Number": "(713) 898-8134"

                                    }
                                ],
                                "isPrimary": false
                            }
                        ],
                        "stopReferenceNumbers": [
                            {
                                "typeCode": "BM",
                                "value": "15423"
                            }
                        ]
                    },
                    {
                        "addressInformations": {
                            "locationName": "A B C SPLY 527 BEAVERTON",
                            "addressLine1": "6605 SW 11TH AVE",
                            "addressLine2": "",
                            "cityName": "Beaverton",
                            "stateCode": "OR",
                            "country": "USA",
                            "zipCode": "97008"
                        },
                        "type": "Delivery",
                        "scheduledTimeFrom": "2021-08-18T10:20:00-04:00",
                        "scheduledTimeTo": "2021-08-19T10:20:00-04:00",
                        "sequenceNo": 2,
                        "specialRequirement": [
                            {
                                "code": "LFD"
                            }
                        ],
                        "StopContactInformations": [
                            {
                                "firstName": "DeliveryStop1",
                                "lastName": "",
                                "email": "LTLTeam@xpo.com",
                                "PhoneNumbers": [
                                    {
                                        "Number": "9802100810"

                                    }
                                ],
                                "isPrimary": false
                            }
                        ],
                        "stopReferenceNumbers": [
                            {
                                "typeCode": "PO",
                                "value": "43252"
                            }
                        ],
                        "note": null
                    }
                ],
                "transportationMode": [
                    "LTL"
                ],
                "contactInformations": [
                    {
                        "lastName": "TestLName",
                        "firstName": "TestFName",
                        "email": "SK9Y7TW3@BDPUWM26.com",
                        "phoneNumbers": [
                            {
                                "type": "Mobile",
                                "number": "5999213443"
                            }
                        ]

                    }
                ],
                "items": [
                    {
                        "productCode": "Paper",
                        "itemDescription": "test",
                        "itemNumber": "1",
                        "units": 1,
                        "unitTypeCode": "BAGS",
                        "packageUnits": 1,
                        "packageTypeCode": "BOXS",
                        "weight": 1000,
                        "weightUomCode": "LB",
                        "height": 10,
                        "heightUomCode": "IN",
                        "length": 10,
                        "lengthUomCode": "IN",
                        "width": 10,
                        "WidthUomCode": "IN",
                        "isTemperatureControlled": true,
                        "temperatureInformation": {
                            "high": 50,
                            "low": 30,
                            "highUom": "",
                            "lowUom": ""
                        },
                        "isHazmat": true,
                        "hazardousItemInfo": {
                            "unNumber": 10,
                            "packingGroup": 10,
                            "receptacleSize": 10,
                            "hazardousClass": "hc",
                            "numberofReceptacles": 10,
                            "unitofMeasure": "ibs",
                            "containerType": "van",
                            "hazardousDescription": "hd",
                            "hazardousPhoneNumber": "hp",
                            "shippingName": "sn"
                        },
                        "class": "85"
                    }
                ],
                "partnerIdentifierCode": "2-1-TESTCHNC",
                "partnerOrderCode": "test1"
            }
          }
        ]
      },
      "convertquoterequest": {
        "type": "object",
        "discriminator": {
          "propertyName": "transportationMode",
          "mapping": {
            "TL": "#/components/schemas/TLStops",
            "LTL": "#/components/schemas/LTLStops"
          }
        },
        "properties": {
            "orderId": {
                "type": "integer",
                "description": "Unique Identifier for Order. This is only applicable during Order edit.(It is not used during conversion of quote to order)"
            },
          "orderDate ": {
            "type": "string",
            "description": "Date which the order is placed,If order date is not provided, system will add the current date."
          },
          "accountId ": {
            "type": "integer",
            "description": "The identifier used for sub-accounts under a customer."
          },
            "orderNumber ": {
                "type": "string",
                "description": "Order's number to uniquely identify order.(It is not used during conversion of quote to order)"
            },
          "shipmentId": {
            "type": "string",
            "description": "Shipment Id."
          },
          "transportationMode": {
            "type": "string",
            "description": "Mode of Transportation as TL, LTL.\n\n Note: For LTL mode please provide Pickup/Delivery time within normal business hours (8am – 5pm). An order request outside of those bounds could lead to either a non-pickup, or an inability to deliver.",
            "enum": [ "TL", "LTL" ]
          },
          "contractId ": {
            "type": "string",
            "description": "The identifier for the contract with the customer."
          },
            "orderReferenceNumbers": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "code": {
                            "type": "string",
                            "description": "Custom reference code.",
                            "enum": [
                                "AN",
                                "AO",
                                "BM",
                                "CG",
                                "MB",
                                "OI",
                                "OR",
                                "PO",
                                "PS",
                                "PU",
                                "QL",
                                "SI",
                                "SN",
                                "ZZ",
                                "11",
                                "19",
                                "2I",
                                "6O",
                                "6Y",
                                "CN",
                                "CO",
                                "CR",
                                "DJ",
                                "DN",
                                "DO",
                                "DP",
                                "EH",
                                "EMM",
                                "EQ",
                                "IA",
                                "IL",
                                "KK",
                                "KR",
                                "MI",
                                "MO",
                                "OQ",
                                "P8",
                                "PRT",
                                "QN",
                                "QY",
                                "RB",
                                "RE",
                                "RN",
                                "SC",
                                "SO",
                                "SQ",
                                "TH",
                                "TN",
                                "VD",
                                "VR",
                                "RSN",
                                "8",
                                "23",
                                "4B",
                                "51",
                                "6A",
                                "6M",
                                "6P",
                                "71",
                                "A0",
                                "A6",
                                "A8",
                                "ACI",
                                "AG",
                                "AQ",
                                "AT",
                                "BC",
                                "BL",
                                "BN",
                                "BV",
                                "CB",
                                "CF",
                                "CH",
                                "CP",
                                "CT",
                                "DAN",
                                "DG",
                                "DI",
                                "DK",
                                "DM",
                                "DU",
                                "GD",
                                "GM",
                                "IK",
                                "K6",
                                "LI",
                                "LM",
                                "LO",
                                "MH",
                                "NS",
                                "OC",
                                "ON",
                                "OP",
                                "OU",
                                "OW",
                                "PI",
                                "PL",
                                "PP",
                                "PUA",
                                "Q1",
                                "QJ",
                                "RI",
                                "RZ",
                                "S5",
                                "TDT",
                                "TF",
                                "TO",
                                "TP",
                                "TS",
                                "UP",
                                "VA",
                                "VE",
                                "ZG",
                                "ZM",
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "7",
                                "8",
                                "9",
                                "0A",
                                "0B",
                                "0D",
                                "0E",
                                "0F",
                                "0G",
                                "0H",
                                "0I",
                                "0J",
                                "0K",
                                "0L",
                                "0M",
                                "0N",
                                "0P",
                                "10",
                                "12",
                                "13",
                                "14",
                                "15",
                                "16",
                                "17",
                                "18",
                                "1A",
                                "1B",
                                "1C",
                                "1D",
                                "1E",
                                "1F",
                                "1G",
                                "1H",
                                "1I",
                                "1J",
                                "1K",
                                "1L",
                                "1M",
                                "1N",
                                "1O",
                                "1P",
                                "1Q",
                                "1R",
                                "1S",
                                "1T",
                                "1U",
                                "1V",
                                "1W",
                                "1X",
                                "1Y",
                                "1Z",
                                "20",
                                "21",
                                "22",
                                "24",
                                "25",
                                "26",
                                "27",
                                "28",
                                "29",
                                "2A",
                                "2B",
                                "2C",
                                "2D",
                                "2E",
                                "2F",
                                "2G",
                                "2H",
                                "2J",
                                "2K",
                                "2L",
                                "2M",
                                "2N",
                                "2O",
                                "2P",
                                "2Q",
                                "2R",
                                "2S",
                                "2T",
                                "2U",
                                "2V",
                                "2W",
                                "2X",
                                "2Y",
                                "2Z",
                                "30",
                                "31",
                                "32",
                                "33",
                                "34",
                                "35",
                                "36",
                                "37",
                                "38",
                                "39",
                                "3A",
                                "3B",
                                "3C",
                                "3D",
                                "3E",
                                "3F",
                                "3G",
                                "3H",
                                "3I",
                                "3J",
                                "3K",
                                "3L",
                                "3M",
                                "3N",
                                "3O",
                                "3P",
                                "3Q",
                                "3R",
                                "3S",
                                "3T",
                                "3U",
                                "3V",
                                "3W",
                                "3X",
                                "3Y",
                                "3Z",
                                "40",
                                "41",
                                "42",
                                "43",
                                "44",
                                "45",
                                "46",
                                "47",
                                "48",
                                "49",
                                "4A",
                                "4C",
                                "4D",
                                "4E",
                                "4F",
                                "4G",
                                "4H",
                                "4I",
                                "4J",
                                "4K",
                                "4L",
                                "4M",
                                "4N",
                                "4O",
                                "4P",
                                "4Q",
                                "4R",
                                "4S",
                                "4T",
                                "4U",
                                "4V",
                                "4W",
                                "4X",
                                "4Y",
                                "4Z",
                                "50",
                                "52",
                                "53",
                                "54",
                                "55",
                                "56",
                                "57",
                                "58",
                                "59",
                                "5A",
                                "5B",
                                "5C",
                                "5D",
                                "5E",
                                "5F",
                                "5G",
                                "5H",
                                "5I",
                                "5J",
                                "5K",
                                "5L",
                                "5M",
                                "5N",
                                "5O",
                                "5P",
                                "5Q",
                                "5R",
                                "5S",
                                "5T",
                                "5U",
                                "5V",
                                "5W",
                                "5X",
                                "5Y",
                                "5Z",
                                "60",
                                "61",
                                "63",
                                "64",
                                "65",
                                "66",
                                "67",
                                "68",
                                "69",
                                "6B",
                                "6C",
                                "6D",
                                "6E",
                                "6F",
                                "6G",
                                "6H",
                                "6I",
                                "6J",
                                "6K",
                                "6L",
                                "6N",
                                "6Q",
                                "6R",
                                "6S",
                                "6T",
                                "6U",
                                "6V",
                                "6W",
                                "6X",
                                "6Z",
                                "70",
                                "72",
                                "73",
                                "74",
                                "75",
                                "76",
                                "77",
                                "78",
                                "79",
                                "7A",
                                "7B",
                                "7C",
                                "7D",
                                "7E",
                                "7F",
                                "7G",
                                "7H",
                                "7I",
                                "7J",
                                "7K",
                                "7L",
                                "7M",
                                "7N",
                                "7O",
                                "7P",
                                "7Q",
                                "7R",
                                "7S",
                                "7T",
                                "7U",
                                "7W",
                                "7X",
                                "7Y",
                                "7Z",
                                "80",
                                "81",
                                "82",
                                "83",
                                "84",
                                "85",
                                "86",
                                "87",
                                "88",
                                "89",
                                "8A",
                                "8B",
                                "8C",
                                "8D",
                                "8E",
                                "8F",
                                "8G",
                                "8H",
                                "8I",
                                "8J",
                                "8K",
                                "8L",
                                "8M",
                                "8N",
                                "8O",
                                "8P",
                                "8Q",
                                "8R",
                                "8S",
                                "8U",
                                "8V",
                                "8W",
                                "8X",
                                "8Y",
                                "8Z",
                                "90",
                                "91",
                                "92",
                                "93",
                                "94",
                                "95",
                                "96",
                                "97",
                                "98",
                                "99",
                                "9A",
                                "9B",
                                "9C",
                                "9D",
                                "9E",
                                "9F",
                                "9G",
                                "9H",
                                "9I",
                                "9J",
                                "9K",
                                "9L",
                                "9M",
                                "9N",
                                "9P",
                                "9Q",
                                "9R",
                                "9S",
                                "9T",
                                "9U",
                                "9V",
                                "9W",
                                "9X",
                                "9Y",
                                "9Z",
                                "A1",
                                "A2",
                                "A3",
                                "A4",
                                "A5",
                                "A7",
                                "A9",
                                "AA",
                                "AAA",
                                "AAB",
                                "AAC",
                                "AAD",
                                "AAE",
                                "AAF",
                                "AAG",
                                "AAH",
                                "AAI",
                                "AAJ",
                                "AAK",
                                "AAL",
                                "AAM",
                                "AAN",
                                "AAO",
                                "AAP",
                                "AAQ",
                                "AAR",
                                "AAS",
                                "AAT",
                                "AAU",
                                "AAV",
                                "AAW",
                                "AAX",
                                "AAY",
                                "AAZ",
                                "AB",
                                "ABA",
                                "ABB",
                                "ABC",
                                "ABD",
                                "ABE",
                                "ABF",
                                "ABG",
                                "ABH",
                                "ABJ",
                                "ABK",
                                "ABL",
                                "ABM",
                                "ABN",
                                "ABO",
                                "ABP",
                                "ABQ",
                                "ABR",
                                "ABS",
                                "ABT",
                                "ABU",
                                "ABV",
                                "ABY",
                                "AC",
                                "ACA",
                                "ACB",
                                "ACC",
                                "ACD",
                                "ACE",
                                "ACF",
                                "ACG",
                                "ACH",
                                "ACJ",
                                "ACK",
                                "ACR",
                                "ACS",
                                "ACT",
                                "AD",
                                "ADA",
                                "ADB",
                                "ADC",
                                "ADD",
                                "ADE",
                                "ADF",
                                "ADG",
                                "ADH",
                                "ADI",
                                "ADM",
                                "AE",
                                "AEA",
                                "AEB",
                                "AEC",
                                "AED",
                                "AEE",
                                "AEF",
                                "AEG",
                                "AEH",
                                "AEI",
                                "AEJ",
                                "AEK",
                                "AEL",
                                "AEM",
                                "AF",
                                "AH",
                                "AHC",
                                "AI",
                                "AJ",
                                "AK",
                                "AL",
                                "ALC",
                                "ALG",
                                "ALH",
                                "ALI",
                                "ALJ",
                                "ALT",
                                "AM",
                                "AP",
                                "API",
                                "AR",
                                "AS",
                                "ASL",
                                "ASP",
                                "AST",
                                "ATC",
                                "AU",
                                "AV",
                                "AW",
                                "AX",
                                "AY",
                                "AZ",
                                "B1",
                                "B2",
                                "B3",
                                "B4",
                                "B5",
                                "B6",
                                "B7",
                                "B8",
                                "B9",
                                "BA",
                                "BAA",
                                "BAB",
                                "BAC",
                                "BAD",
                                "BAE",
                                "BAF",
                                "BAG",
                                "BAH",
                                "BAI",
                                "BB",
                                "BCI",
                                "BD",
                                "BE",
                                "BF",
                                "BG",
                                "BH",
                                "BI",
                                "BJ",
                                "BK",
                                "BKT",
                                "BLT",
                                "BMM",
                                "BO",
                                "BOI",
                                "BP",
                                "BQ",
                                "BR",
                                "BS",
                                "BT",
                                "BU",
                                "BW",
                                "BX",
                                "BY",
                                "BZ",
                                "C0",
                                "C1",
                                "C2",
                                "C3",
                                "C4",
                                "C5",
                                "C6",
                                "C7",
                                "C8",
                                "C9",
                                "CA",
                                "CBG",
                                "CC",
                                "CD",
                                "CDN",
                                "CE",
                                "CI",
                                "CIR",
                                "CIT",
                                "CJ",
                                "CK",
                                "CL",
                                "CM",
                                "CMN",
                                "CMP",
                                "CMT",
                                "CNO",
                                "COL",
                                "COT",
                                "CPA",
                                "CPT",
                                "CQ",
                                "CRN",
                                "CRS",
                                "CS",
                                "CSC",
                                "CSG",
                                "CST",
                                "CTS",
                                "CU",
                                "CV",
                                "CW",
                                "CX",
                                "CY",
                                "CYC",
                                "CZ",
                                "D0",
                                "D1",
                                "D2",
                                "D3",
                                "D4",
                                "D5",
                                "D6",
                                "D7",
                                "D8",
                                "D9",
                                "DA",
                                "DB",
                                "DC",
                                "DD",
                                "DE",
                                "DF",
                                "DH",
                                "DHH",
                                "DIS",
                                "DL",
                                "DNR",
                                "DNS",
                                "DOA",
                                "DOC",
                                "DOE",
                                "DOI",
                                "DOJ",
                                "DOL",
                                "DON",
                                "DOS",
                                "DOT",
                                "DQ",
                                "DR",
                                "DRN",
                                "DS",
                                "DSC",
                                "DSI",
                                "DST",
                                "DT",
                                "DTS",
                                "DUN",
                                "DV",
                                "DW",
                                "DX",
                                "DY",
                                "DZ",
                                "E1",
                                "E2",
                                "E3",
                                "E4",
                                "E5",
                                "E6",
                                "E7",
                                "E8",
                                "E9",
                                "EA",
                                "EB",
                                "EC",
                                "ED",
                                "EDA",
                                "EE",
                                "EF",
                                "EG",
                                "EI",
                                "EJ",
                                "EK",
                                "EL",
                                "EM",
                                "EN",
                                "END",
                                "EO",
                                "EP",
                                "EPA",
                                "EPB",
                                "ER",
                                "ES",
                                "ESN",
                                "ET",
                                "EU",
                                "EV",
                                "EW",
                                "EX",
                                "EY",
                                "EZ",
                                "F1",
                                "F2",
                                "F3",
                                "F4",
                                "F5",
                                "F6",
                                "F7",
                                "F8",
                                "F9",
                                "FA",
                                "FB",
                                "FC",
                                "FCN",
                                "FD",
                                "FE",
                                "FF",
                                "FG",
                                "FH",
                                "FI",
                                "FJ",
                                "FK",
                                "FL",
                                "FLZ",
                                "FM",
                                "FMP",
                                "FN",
                                "FND",
                                "FO",
                                "FP",
                                "FQ",
                                "FR",
                                "FS",
                                "FSN",
                                "FT",
                                "FTN",
                                "FU",
                                "FV",
                                "FW",
                                "FWC",
                                "FX",
                                "FY",
                                "FZ",
                                "G1",
                                "G2",
                                "G3",
                                "G4",
                                "G5",
                                "G6",
                                "G7",
                                "G8",
                                "G9",
                                "GA",
                                "GB",
                                "GC",
                                "GE",
                                "GF",
                                "GG",
                                "GH",
                                "GI",
                                "GJ",
                                "GK",
                                "GL",
                                "GN",
                                "GO",
                                "GP",
                                "GQ",
                                "GR",
                                "GS",
                                "GT",
                                "GU",
                                "GV",
                                "GW",
                                "GWS",
                                "GX",
                                "GY",
                                "GZ",
                                "H1",
                                "H2",
                                "H3",
                                "H4",
                                "H5",
                                "H6",
                                "H7",
                                "H8",
                                "H9",
                                "HA",
                                "HB",
                                "HC",
                                "HD",
                                "HE",
                                "HF",
                                "HG",
                                "HH",
                                "HHT",
                                "HI",
                                "HJ",
                                "HK",
                                "HL",
                                "HM",
                                "HMB",
                                "HN",
                                "HO",
                                "HP",
                                "HPI",
                                "HQ",
                                "HR",
                                "HS",
                                "HT",
                                "HU",
                                "HUD",
                                "HV",
                                "HW",
                                "HX",
                                "HY",
                                "HZ",
                                "I1",
                                "I2",
                                "I3",
                                "I4",
                                "I5",
                                "I7",
                                "I8",
                                "I9",
                                "IB",
                                "IC",
                                "ICD",
                                "ID",
                                "IE",
                                "IF",
                                "IFT",
                                "IG",
                                "IH",
                                "II",
                                "IID",
                                "IJ",
                                "IM",
                                "IMP",
                                "IMS",
                                "IN",
                                "IND",
                                "IO",
                                "IP",
                                "IQ",
                                "IR",
                                "IRN",
                                "IRP",
                                "IS",
                                "ISC",
                                "ISN",
                                "ISS",
                                "IT",
                                "IU",
                                "IV",
                                "IW",
                                "IX",
                                "IZ",
                                "J0",
                                "J1",
                                "J2",
                                "J3",
                                "J4",
                                "J5",
                                "J6",
                                "J7",
                                "J8",
                                "J9",
                                "JA",
                                "JB",
                                "JC",
                                "JD",
                                "JE",
                                "JF",
                                "JH",
                                "JI",
                                "JK",
                                "JL",
                                "JM",
                                "JN",
                                "JO",
                                "JP",
                                "JQ",
                                "JR",
                                "JS",
                                "JT",
                                "JU",
                                "JV",
                                "JW",
                                "JX",
                                "JY",
                                "JZ",
                                "K0",
                                "K1",
                                "K2",
                                "K3",
                                "K4",
                                "K5",
                                "K7",
                                "K8",
                                "K9",
                                "KA",
                                "KB",
                                "KC",
                                "KD",
                                "KE",
                                "KG",
                                "KH",
                                "KI",
                                "KJ",
                                "KL",
                                "KM",
                                "KN",
                                "KO",
                                "KP",
                                "KQ",
                                "KS",
                                "KT",
                                "KU",
                                "KV",
                                "KW",
                                "KX",
                                "KY",
                                "KZ",
                                "L1",
                                "L2",
                                "L3",
                                "L4",
                                "L5",
                                "L6",
                                "L7",
                                "L8",
                                "L9",
                                "LA",
                                "LB",
                                "LC",
                                "LD",
                                "LE",
                                "LEN",
                                "LF",
                                "LG",
                                "LH",
                                "LIC",
                                "LJ",
                                "LK",
                                "LL",
                                "LN",
                                "LOI",
                                "LP",
                                "LQ",
                                "LR",
                                "LS",
                                "LSD",
                                "LT",
                                "LU",
                                "LV",
                                "LVO",
                                "LW",
                                "LX",
                                "LY",
                                "LZ",
                                "M1",
                                "M2",
                                "M3",
                                "M5",
                                "M6",
                                "M7",
                                "M8",
                                "M9",
                                "MA",
                                "MBX",
                                "MC",
                                "MCI",
                                "MD",
                                "MDN",
                                "ME",
                                "MF",
                                "MG",
                                "MJ",
                                "MK",
                                "ML",
                                "MM",
                                "MN",
                                "MP",
                                "MQ",
                                "MR",
                                "MS",
                                "MSL",
                                "MT",
                                "MU",
                                "MV",
                                "MW",
                                "MX",
                                "MY",
                                "MZ",
                                "MZO",
                                "N0",
                                "N1",
                                "N2",
                                "N3",
                                "N4",
                                "N5",
                                "N6",
                                "N7",
                                "N8",
                                "N9",
                                "NA",
                                "NAS",
                                "NB",
                                "NC",
                                "ND",
                                "NDA",
                                "NDB",
                                "NE",
                                "NF",
                                "NFC",
                                "NFD",
                                "NFM",
                                "NFN",
                                "NFS",
                                "NG",
                                "NH",
                                "NI",
                                "NJ",
                                "NK",
                                "NL",
                                "NM",
                                "NN",
                                "NO",
                                "NP",
                                "NQ",
                                "NR",
                                "NT",
                                "NU",
                                "NW",
                                "NX",
                                "NY",
                                "NZ",
                                "O1",
                                "O2",
                                "O5",
                                "O7",
                                "O8",
                                "O9",
                                "OA",
                                "OB",
                                "OD",
                                "OE",
                                "OF",
                                "OG",
                                "OH",
                                "OJ",
                                "OK",
                                "OL",
                                "OM",
                                "OS",
                                "OT",
                                "OV",
                                "OX",
                                "OZ",
                                "P1",
                                "P2",
                                "P3",
                                "P4",
                                "P5",
                                "P6",
                                "P7",
                                "P9",
                                "PA",
                                "PAC",
                                "PAN",
                                "PAP",
                                "PB",
                                "PC",
                                "PCC",
                                "PCN",
                                "PD",
                                "PDL",
                                "PE",
                                "PF",
                                "PG",
                                "PGC",
                                "PGN",
                                "PGS",
                                "PH",
                                "PHC",
                                "PID",
                                "PIN",
                                "PJ",
                                "PK",
                                "PLA",
                                "PLN",
                                "PM",
                                "PMN",
                                "PN",
                                "PNN",
                                "POL",
                                "PQ",
                                "PR",
                                "PRS",
                                "PSI",
                                "PSL",
                                "PSM",
                                "PSN",
                                "PT",
                                "PTC",
                                "PV",
                                "PW",
                                "PWC",
                                "PWS",
                                "PX",
                                "PY",
                                "PZ",
                                "Q2",
                                "Q3",
                                "Q4",
                                "Q5",
                                "Q6",
                                "Q7",
                                "Q8",
                                "Q9",
                                "QA",
                                "QB",
                                "QC",
                                "QD",
                                "QE",
                                "QF",
                                "QG",
                                "QH",
                                "QI",
                                "QK",
                                "QM",
                                "QO",
                                "QP",
                                "QQ",
                                "QR",
                                "QS",
                                "QT",
                                "QU",
                                "QV",
                                "QW",
                                "QX",
                                "QZ",
                                "R0",
                                "R1",
                                "R2",
                                "R3",
                                "R4",
                                "R5",
                                "R6",
                                "R7",
                                "R8",
                                "R9",
                                "RA",
                                "RAA",
                                "RAN",
                                "RC",
                                "RD",
                                "REC",
                                "RF",
                                "RG",
                                "RGI",
                                "RH",
                                "RIG",
                                "RJ",
                                "RK",
                                "RL",
                                "RM",
                                "RO",
                                "RP",
                                "RPP",
                                "RPT",
                                "RQ",
                                "RR",
                                "RRS",
                                "RS",
                                "RT",
                                "RU",
                                "RV",
                                "RW",
                                "RX",
                                "RY",
                                "S0",
                                "S1",
                                "S2",
                                "S3",
                                "S4",
                                "S6",
                                "S7",
                                "S8",
                                "S9",
                                "SA",
                                "SB",
                                "SBN",
                                "SCA",
                                "SD",
                                "SE",
                                "SEK",
                                "SES",
                                "SF",
                                "SG",
                                "SH",
                                "SHL",
                                "SJ",
                                "SK",
                                "SL",
                                "SM",
                                "SNH",
                                "SNV",
                                "SP",
                                "SPL",
                                "SPN",
                                "SR",
                                "SS",
                                "ST",
                                "STB",
                                "STR",
                                "SU",
                                "SUB",
                                "SUO",
                                "SV",
                                "SW",
                                "SX",
                                "SY",
                                "SZ",
                                "T0",
                                "T1",
                                "T2",
                                "T3",
                                "T4",
                                "T5",
                                "T6",
                                "T7",
                                "T8",
                                "T9",
                                "TA",
                                "TB",
                                "TC",
                                "TD",
                                "TE",
                                "TG",
                                "TI",
                                "TIP",
                                "TJ",
                                "TK",
                                "TL",
                                "TM",
                                "TOC",
                                "TPN",
                                "TQ",
                                "TR",
                                "TSN",
                                "TT",
                                "TU",
                                "TV",
                                "TW",
                                "TX",
                                "TY",
                                "TZ",
                                "U0",
                                "U1",
                                "U2",
                                "U3",
                                "U4",
                                "U5",
                                "U6",
                                "U8",
                                "U9",
                                "UA",
                                "UB",
                                "UC",
                                "UD",
                                "UE",
                                "UF",
                                "UG",
                                "UH",
                                "UI",
                                "UJ",
                                "UK",
                                "UL",
                                "UM",
                                "UN",
                                "UO",
                                "UQ",
                                "UR",
                                "URL",
                                "US",
                                "UT",
                                "UU",
                                "UV",
                                "UW",
                                "UX",
                                "UY",
                                "UZ",
                                "V0",
                                "V1",
                                "V2",
                                "V3",
                                "V4",
                                "V5",
                                "V6",
                                "V7",
                                "V8",
                                "V9",
                                "VB",
                                "VC",
                                "VF",
                                "VG",
                                "VH",
                                "VI",
                                "VJ",
                                "VK",
                                "VL",
                                "VM",
                                "VN",
                                "VO",
                                "VP",
                                "VQ",
                                "VS",
                                "VT",
                                "VU",
                                "VV",
                                "VW",
                                "VX",
                                "VY",
                                "VZ",
                                "W1",
                                "W2",
                                "W3",
                                "W4",
                                "W5",
                                "W6",
                                "W7",
                                "W8",
                                "W9",
                                "WA",
                                "WB",
                                "WC",
                                "WCS",
                                "WD",
                                "WDR",
                                "WE",
                                "WF",
                                "WG",
                                "WH",
                                "WI",
                                "WJ",
                                "WK",
                                "WL",
                                "WM",
                                "WN",
                                "WO",
                                "WP",
                                "WQ",
                                "WR",
                                "WS",
                                "WT",
                                "WU",
                                "WV",
                                "WW",
                                "WX",
                                "WY",
                                "WZ",
                                "X0",
                                "X1",
                                "X2",
                                "X3",
                                "X4",
                                "X5",
                                "X6",
                                "X7",
                                "X8",
                                "X9",
                                "XA",
                                "XB",
                                "XC",
                                "XD",
                                "XE",
                                "XF",
                                "XG",
                                "XH",
                                "XI",
                                "XJ",
                                "XK",
                                "XL",
                                "XM",
                                "XN",
                                "XO",
                                "XP",
                                "XQ",
                                "XR",
                                "XS",
                                "XT",
                                "XU",
                                "XV",
                                "XW",
                                "XX",
                                "XY",
                                "XZ",
                                "Y0",
                                "Y1",
                                "Y2",
                                "Y3",
                                "Y4",
                                "Y5",
                                "Y6",
                                "Y7",
                                "Y8",
                                "Y9",
                                "YA",
                                "YB",
                                "YC",
                                "YD",
                                "YE",
                                "YF",
                                "YH",
                                "YI",
                                "YJ",
                                "YK",
                                "YL",
                                "YM",
                                "YN",
                                "YO",
                                "YP",
                                "YQ",
                                "YR",
                                "YS",
                                "YT",
                                "YV",
                                "YW",
                                "YX",
                                "YY",
                                "YZ",
                                "Z1",
                                "Z2",
                                "Z3",
                                "Z4",
                                "Z5",
                                "Z6",
                                "Z7",
                                "Z8",
                                "Z9",
                                "ZA",
                                "ZB",
                                "ZC",
                                "ZD",
                                "ZE",
                                "ZF",
                                "ZH",
                                "ZI",
                                "ZJ",
                                "ZK",
                                "ZL",
                                "ZN",
                                "ZO",
                                "ZP",
                                "ZQ",
                                "ZR",
                                "ZS",
                                "ZT",
                                "ZU",
                                "ZV",
                                "ZW",
                                "ZX",
                                "ZY",
                                "TRN",
                                "TCE",
                                "TCO",
                                "UUID"
                            ]
                        },
                        "type": {
                            "type": "string",
                            "description": "Type values such as CLIENT_REFERENCE , CP, CS etc."
                        },
                        "value": {
                            "type": "string",
                            "description": "Actual value of reference code."
                        }
                    }
                },
                "description": "If customer has more than one reference number e.g. primary order number , secondary order number.(Only type is required and is same as code, code property can be ignored)"
            },
          "orderNotes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Note's type.",
                  "enum": [ "GENERAL", "ORDER_DESCRIPTION" ]
                },
                "value": {
                  "type": "string",
                  "description": "Note's value."
                }
              }
            },
            "description": "Notes for this order as array values."
          },
          "orderContactInformations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "description": "First name of contact person."
                },
                "lastName": {
                  "type": "string",
                  "description": "Last name of contact person."
                },
                "email": {
                  "type": "string",
                  "description": "Email for communication."
                },
                "phoneNumbers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Phone number types.",
                        "enum": [ "MOBILE", "WORK", "HOME" ]
                      },
                      "number": {
                        "type": "string",
                        "description": "Contact number."
                      }
                    }
                  },
                  "description": "Primary and alternate numbers for communication."
                },
                "title,": {
                  "type": "string",
                  "description": "Title of contact person."
                },
                "isPrimary": {
                  "type": "boolean",
                  "description": "Is it the primary contact information?."
                }
              }
            },
            "description": "Contact Information for this order."
          },
          "additionalServices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Service code."
                },
                "name": {
                  "type": "string",
                  "description": "Service name."
                },
                "description": {
                  "type": "string",
                  "description": "Service description."
                },
                "quantity": {
                  "type": "integer",
                  "description": "Service quantity."
                },
                "unitOfMeasure,": {
                  "type": "string",
                  "description": "Unit of measure."
                }
              },
              "required": [
                "Code",
                "Name",
                "Description",
                "Quantity",
                "UnitofMeasure"
              ]
            },
            "description": "Additional service required for this order."
          },
          "orderDocuments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Document's type code."
                },
                "name": {
                  "type": "string",
                  "description": "Document's name."
                },
                "key": {
                  "type": "string",
                  "description": "Document's key generated from DMS after uploading the document."
                }
              }
            },
            "description": "Documents associated with this order."
          },
          "crossSellOrderNumber": {
            "type": "string",
            "description": "Related or complementary item order number."
          },
          "salesReps": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "description": "First name of sales representative."
                },
                "lastName": {
                  "type": "string",
                  "description": "Last name of sales representative."
                },
                "email": {
                  "type": "string",
                  "description": "Email of sales representative."
                },
                "phoneNumbers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Phone number types.",
                        "enum": [ "MOBILE", "WORK", "HOME" ]
                      },
                      "number": {
                        "type": "string",
                        "description": "Contact number."
                      }
                    }
                  },
                  "description": "Primary and alternate numbers for communication."
                },
                "title": {
                  "type": "string",
                  "description": "Title of sales representative."
                },
                "isPrimary": {
                  "type": "boolean",
                  "description": "Is it primary sales representative?"
                }
              }
            },
            "description": "This object represents Sale's representative information."

          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "itemCode": {
                  "type": "string",
                  "description": "Item's Product Code."
                },
                "itemDescription": {
                  "type": "string",
                  "description": "Item's description."
                },
                "itemNumber": {
                  "type": "string",
                  "description": "Item's number."
                },
                "units": {
                  "type": "integer",
                  "description": "Number of units."
                },
                "unitTypeCode": {
                  "type": "string",
                  "description": "Item's unit type.",
                  "enum": [
                    "ACCE",
                    "DRUM",
                    "SKIDS",
                    "ATTCH",
                    "ENVE",
                    "SLIP",
                    "BAGS",
                    "FEET",
                    "SPRS",
                    "BALE",
                    "FIRK",
                    "TOTE",
                    "BASK",
                    "GYLD",
                    "TRKL",
                    "BHDS",
                    "GAYL",
                    "TRLR",
                    "BNDL",
                    "KEGS",
                    "TRNK",
                    "BOXES",
                    "LOOS",
                    "TRAY",
                    "BRRL",
                    "OCTA",
                    "TUBE",
                    "BUCK",
                    "PACK",
                    "UNIT",
                    "CARB",
                    "PAIL",
                    "UNPK",
                    "CASES",
                    "PIEC",
                    "VEH",
                    "CASE",
                    "PALLETS",
                    "BINS",
                    "CHST",
                    "PLTS",
                    "COIL",
                    "RACK",
                    "CARTONS",
                    "RACKS",
                    "CRTS",
                    "REEL",
                    "CTN",
                    "ROLL",
                    "CYLS",
                    "SKID"
                  ]
                },
                "packageUnits": {
                  "type": "integer",
                  "description": "Number of packages."
                },
                "packageTypeCode": {
                  "type": "string",
                  "description": "Package type.",
                  "enum": [
                    "ACCE",
                    "DRUM",
                    "SKIDS",
                    "ATTCH",
                    "ENVE",
                    "SLIP",
                    "BAGS",
                    "FEET",
                    "SPRS",
                    "BALE",
                    "FIRK",
                    "TOTE",
                    "BASK",
                    "GYLD",
                    "TRKL",
                    "BHDS",
                    "GAYL",
                    "TRLR",
                    "BNDL",
                    "KEGS",
                    "TRNK",
                    "BOXES",
                    "LOOS",
                    "TRAY",
                    "BRRL",
                    "OCTA",
                    "TUBE",
                    "BUCK",
                    "PACK",
                    "UNIT",
                    "CARB",
                    "PAIL",
                    "UNPK",
                    "CASES",
                    "PIEC",
                    "VEH",
                    "CASE",
                    "PALLETS",
                    "BINS",
                    "CHST",
                    "PLTS",
                    "COIL",
                    "RACK",
                    "CARTONS",
                    "RACKS",
                    "CRTS",
                    "REEL",
                    "CTN",
                    "ROLL",
                    "CYLS",
                    "SKID"
                  ]
                },
                "weight": {
                  "type": "integer",
                  "description": "Item's weight."
                },
                "weightUomCode": {
                  "type": "string",
                  "description": "Weight- Unit of measure.",
                  "enum": [ "KG", "LB" ]
                },
                "height": {
                  "type": "number",
                  "description": "Item's height."

                },
                "heightUomCode": {
                  "type": "string",
                  "description": "Height- Unit of measure.",
                  "enum": [ "CM", "IN", "FT" ]
                },
                "length": {
                  "type": "number",
                  "description": "Item's length."
                },
                "lengthUomCode": {
                  "type": "string",
                  "description": "Length - Unit of measure.",
                  "enum": [ "CM", "IN", "FT" ]
                },
                "width": {
                  "type": "integer",
                  "description": "Item's width."
                },
                "widthUomCode": {
                  "type": "string",
                  "description": "Width - Unit of measure.",
                  "enum": [ "CM", "IN", "FT" ]
                },
                "isHazmat": {
                  "type": "boolean",
                  "description": "Whether item is hazardous or not."
                },
                "hazardousItemInfo": {
                  "type": "object",
                  "properties": {
                    "unNumber": {
                      "type": "integer",
                      "description": "Identification number to identify dangerous goods."
                    },
                    "packingGroup": {
                      "type": "integer",
                      "description": "Packaging group."
                    },
                    "receptacleSize": {
                      "type": "integer",
                      "description": "Receptacle size."
                    },
                    "hazardousClass": {
                      "type": "string",
                      "description": "Hazardous class."
                    },
                    "numberofReceptacles": {
                      "type": "integer",
                      "description": "Number of receptacles."
                    },
                    "unitofMeasure": {
                      "type": "string",
                      "description": "Unit of measure."

                    },
                    "containerType": {
                      "type": "string",
                      "description": "Container type."
                    },
                    "hazardousDescription": {
                      "type": "string",
                      "description": "Hazardous description."
                    },
                    "hazardousPhoneNumber": {
                      "type": "string",
                      "description": "Phone number."
                    },
                    "shippingName": {
                      "type": "string",
                      "description": "Shipping Name."
                    }
                  },
                  "description": "Hazardous information if the item is Hazardous material (IsHazmat = true)"
                },
                "htsCode": {
                  "type": "string",
                  "description": "HTS codes are used to classify and define internationally traded goods"
                },
                "purchaseOrderNumber": {
                  "type": "string",
                  "description": "Purchase Order Number."
                },
                "isOversized": {
                  "type": "boolean",
                  "description": "Flag to represent, whether item is over sized or not."
                },
                "isStackable": {
                  "type": "boolean",
                  "description": "Flag to represent, item is stackable or not.."
                },
                "isTemperatureControlled": {
                  "type": "boolean",
                  "description": "Whether item is temperature controlled or not."
                },
                "temperatureInformation": {
                  "type": "object",
                  "properties": {
                    "high": {
                      "type": "string",
                      "description": "High temperature."
                    },
                    "low": {
                      "type": "string",
                      "description": "Low temperature."
                    },
                    "highUom": {
                      "type": "string",
                      "description": "High temperature Unit of measure."
                    },
                    "lowUom": {
                      "type": "string",
                      "description": "Low temperature Unit of measure."
                    }
                  },
                  "description": "Temperature information of the Item."
                },
                "sku": {
                  "type": "string",
                  "description": "Stock-keeping unit or SKU refers to a specific item stored to a specific location."
                },
                "classCode": {
                  "type": "string",
                  "description": "This code represents product freight class.."
                },
                "nmfcCode": {
                  "type": "string",
                  "description": "Commodity or type of product is assigned a National Motor Freight Classification"
                },
                "declaredValue": {
                  "type": "number",
                  "description": "Item's declared amount value."
                },
                "declaredValueCurrencyCode": {
                  "type": "string",
                  "description": "Item's declared value currency code."
                },
                "itemPrice": {
                  "type": "number",
                  "description": "Item's price value."
                },
                "itemPriceCurrencyCode": {
                  "type": "string",
                  "description": "Item's price currency code."
                },
                "itemServices": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Service code."
                      },
                      "name": {
                        "type": "string",
                        "description": "Service name."
                      },
                      "description": {
                        "type": "string",
                        "description": "Service description."
                      },
                      "quantity": {
                        "type": "integer",
                        "description": "Service quantity."
                      },
                      "unitOfMeasure,": {
                        "type": "string",
                        "description": "Unit of measure."
                      }
                    }
                  },
                  "description": "Additional service required for this Item."
                },
                "itemReferenceNumbers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Custom reference code."
                      },
                      "type": {
                        "type": "string",
                        "description": "Type values such as CLIENT_REFERENCE , CP, CS etc.",
                        "enum": [
                          "CP",
                          "CS",
                          "NON_OTM_USER_EMAIL",
                          "INCO_TERM",
                          "SHIPPING_SERVICE",
                          "SHIPPING_SERVICE",
                          "PUBLIC_CG",
                          "CG",
                          "NAMED_LOCATION",
                          "SHIPPER_PICKUP_NUM",
                          "CLIENT_REFERENCE",
                          "NON_MANAGED",
                          "ZWF_REPORTED",
                          "ZWF_STD_REASON",
                          "ZWF_XPD_REASON",
                          "ZWF_XPD",
                          "BUS_UNIT",
                          "PRO",
                          "SHIPPER_BOL",
                          "HOUSE_BOL",
                          "SEAL_NUMBER",
                          "OVERSIZE"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Actual value of reference code."
                      }
                    }
                  },
                  "description": "This object holds the collection of reference numbers associated with this items."
                },
                "itemNotes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Note's type.",
                        "enum": [ "GENERAL", "ORDER_DESCRIPTION" ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Note's value."
                      }
                    }
                  },
                  "description": "Notes for this item as array values."
                }
              },
              "required": [ "itemCode" ]
            },
            "description": "Item Details."
          },
          "requestedDeliveryDate": {
            "type": "string",
            "description": "Requested delivery date of order. ISO8601 UTC date-time format required"
          },
          "isPartOfConsolidatedShipment": {
            "type": "boolean",
            "description": "Whether this order is part of consolidated shipment or not."
          },
          "ordersOnConsolidatedShipment": {
            "type": "integer",
            "description": "Consolidated shipment."
          },
          "isExpedited": {
            "type": "boolean",
            "description": "Whether this order is an expedited delivery or not."
          },
          "isXpoManaged": {
            "type": "boolean",
            "description": "Whether this order is managed by XPO."
          },
          "paymentMethod": {
            "type": "string",
            "description": "Method of payment.",
            "enum": [ "COL", "PPD", "THIRDPARTY" ]
          },
          "equipmentCategoryCode": {
            "$ref": "#/components/schemas/equipmentCategoryCode"
          },
          "equipmentTypeCode": {
            "$ref": "#/components/schemas/equipmentTypeCode"
          },
          "quoteId": {
            "type": "string",
            "description": "Quote id against submitted against this order."
          },
          "invoiceDate": {
            "type": "string",
            "description": "Order Invoice Date."
          },
          "invoiceNumber": {
            "type": "string",
            "description": "Order Invoice numver."
          },
          "emailBOL": {
            "type": "boolean",
            "description": "Boolean flag to email the BOL of the shipment."
          },
          "applicationSource": {
            "type": "string",
            "description": "Application source is an enum, which indicates this quote created by which source like API, XpoConnect, EDI etc.",
            "enum": [ "GPAPI", "XpoConnect", "EDI" ]
          },
          "partnerIdentifierCode": {
            "type": "string",
            "description": "Partner identifier code used for uniquely identify the partner."
          }
        },
        "required": [
          "partnerIdentifierCode",
          "transportationMode",
          "applicationSource",
          "quoteId"
        ],
        "example": {
            "accountId": null,
            "applicationSource": "GPAPI",
            "contractId": null,
            "crossSellOrderNumber": "",
            "emailBol": true,
            "equipmentCategoryCode": "VN",
            "equipmentTypeCode": "V",
            "invoiceDate": null,
            "invoiceNumber": null,
            "isExpedited": false,
            "isPartOfConsolidatedShipment": false,
            "isXpoManaged": true,
            "items": [
                {
                    "classCode": "50",
                    "declaredValue": 1000,
                    "declaredValueAmount": 1000,
                    "declaredValueCurrencyCode": "USD",
                    "hazardousItemInfo": {
                        "containerType": "van",
                        "hazardousClass": "hc",
                        "hazardousDescription": "hd",
                        "hazardousPhoneNumber": "hp",
                        "numberofReceptacles": 10,
                        "packingGroup": 10,
                        "receptacleSize": 10,
                        "shippingName": "sn",
                        "unNumber": 1111,
                        "unitofMeasure": "ibs"
                    },
                    "height": 10,
                    "heightUomCode": "IN",
                    "htscode": null,
                    "isHazmat": true,
                    "isOversized": null,
                    "isStackable": null,
                    "isTemperatureControlled": true,
                    "itemCode": "Paper",
                    "itemDescription": "paper-123",
                    "itemNotes": null,
                    "itemNumber": "100056005",
                    "itemPrice": 20.5,
                    "itemPriceCurrencyCode": "USD",
                    "itemReferenceNumbers": null,
                    "itemServices": null,
                    "length": 10,
                    "lengthUomCode": "IN",
                    "nmfcCode": "",
                    "packageTypeCode": "BOXS",
                    "packageUnits": 1,
                    "purchaseOrderNumber": null,
                    "sku": "",
                    "temperatureInformation": {
                        "high": 50,
                        "highUom": null,
                        "low": 30,
                        "lowUom": null
                    },
                    "unitTypeCode": "BAGS",
                    "units": 1,
                    "volume": 868.0386,
                    "volumeUomCode": "CUFT",
                    "weight": 1000,
                    "weightUomCode": "LB",
                    "width": 10,
                    "widthUomCode": "IN"
                }
            ],
            "orderContactInformations": [
                {
                    "email": "devcustomer@gmail.com",
                    "firstName": "TestData",
                    "isPrimary": true,
                    "lastName": "Lname",
                    "phoneNumbers": [
                        {
                            "number": "6606546565",
                            "type": "Mobile"
                        }
                    ],
                    "title": "Mr"
                }
            ],
            "orderDate": "2021-08-10T06:21:09.31",
            "orderDocuments": [
                {
                    "key": "0000040VD7CES000000000",
                    "name": "28-FEB-2019.xlsx",
                    "type": "30"
                }
            ],
            "orderId": 0,
            "orderNotes": [
                {
                    "type": "GENERAL",
                    "value": "TESTING API DO NOT DISPATCH"
                }
            ],
            "orderNumber": null,
            "orderReferenceNumbers": [
                {
                    "code": null,
                    "type": "BM",
                    "value": "Test2021061701"
                }
            ],
            "orderServices": [
                {
                    "code": "12151",
                    "description": "Base delivery charge.",
                    "name": "Room of Choice Delivery",
                    "quantity": 1,
                    "unitOfMeasure": "Items Hauled Away"
                }
            ],
            "ordersOnConsolidatedShipment": 1,
            "partnerIdentifierCode": "2-1-TESTCHNC",
            "paymentMethod": null,
            "quoteId": "288917",
            "requestedDeliveryDate": "11/11/2021",
            "salesReps": [
                {
                    "email": "devcustomer@gmail.com",
                    "firstName": "TestData",
                    "isPrimary": false,
                    "lastName": "Lname",
                    "phoneNumbers": [
                        {
                            "number": "6606546565",
                            "type": "Mobile"
                        }
                    ],
                    "title": ""
                }
            ],
            "shipmentId": null,
            "specialRequirements": [
                {
                    "code": "Single"
                }
            ],
            "stops": [
                {
                    "addressInformation": {
                        "addressLine1": "1234 Warehouse",
                        "addressLine2": "",
                        "cityName": "North Ridgeville",
                        "countryCode": "USA",
                        "geoCodes": {
                            "latitude": null,
                            "longitude": null,
                            "s2cellId": null
                        },
                        "ianaTimeZone": null,
                        "locationId": null,
                        "locationName": "North Ridgeville",
                        "locationType": "Warehouse",
                        "region": null,
                        "stateCode": "OH",
                        "utcOffset": "-04:00:00",
                        "zipCode": "44039"
                    },
                    "isAppointmentConfirmed": false,
                    "isAppointmentRequired": false,
                    "scheduledTimeFrom": "10/12/2021",
                    "scheduledTimeTo": "10/12/2021",
                    "sequenceNo": 1,
                    "specialRequirement": [
                        {
                            "code": "LFP"
                        }
                    ],
                    "stopContactInformations": [
                        {
                            "email": "devcustomer@gmail.com",
                            "firstName": "TestData",
                            "isPrimary": true,
                            "lastName": "Lname",
                            "phoneNumbers": [
                                {
                                    "number": "7894561230",
                                    "type": "Mobile"
                                }
                            ],
                            "title": ""
                        }
                    ],
                    "stopNotes": null,
                    "stopReferenceNumbers": null,
                    "type": 1
                },
                {
                    "addressInformation": {
                        "addressLine1": "1232 Warehouse",
                        "addressLine2": "",
                        "cityName": "Chicago",
                        "countryCode": "USA",
                        "geoCodes": {
                            "latitude": null,
                            "longitude": null,
                            "s2cellId": null
                        },
                        "ianaTimeZone": null,
                        "locationId": null,
                        "locationName": "Chicago",
                        "locationType": "Warehouse",
                        "region": null,
                        "stateCode": "IL",
                        "utcOffset": "-04:00:00",
                        "zipCode": "60606"
                    },
                    "isAppointmentConfirmed": false,
                    "isAppointmentRequired": false,
                    "scheduledTimeFrom": "11/11/2021",
                    "scheduledTimeTo": "11/11/2021",
                    "sequenceNo": 2,
                    "specialRequirement": [
                        {
                            "code": "APT"
                        }                        
                    ],
                    "stopContactInformations": [
                        {
                            "email": "devcustomer@gmail.com",
                            "firstName": "TestData",
                            "isPrimary": true,
                            "lastName": "Lname",
                            "phoneNumbers": [
                                {
                                    "number": "3312244433",
                                    "type": "Mobile"
                                }
                            ],
                            "title": ""
                        }
                    ],
                    "stopNotes": null,
                    "stopReferenceNumbers": null,
                    "type": 3
                }
            ],
            "transportationMode":  "TL" 
        }
      },
      "TLStops": {
        "allOf": [
          {
            "$ref": "#/components/schemas/convertquoterequest"
          },
          {
            "type": "object",
            "properties": {
              "stops": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "addressInformation": {
                      "type": "object",
                      "properties": {
                        "locationId": {
                          "type": "string",
                          "description": "Id of location."
                        },
                        "locationName": {
                            "type": "string",
                            "description": "Name of location."
                        },
                        "addressLine1": {
                          "type": "string",
                          "description": "Address line 1 of stop location."
                        },
                        "addressLine2": {
                          "type": "string",
                          "description": "Address line 2 of stop location."
                        },
                        "cityName": {
                          "type": "string",
                          "description": "City name belongs to stop location."
                        },
                        "stateCode": {
                          "type": "string",
                          "description": "State code of the stop location."
                        },
                        "countryCode": {
                          "type": "string",
                          "description": "Country belongs to stop location."
                        },
                        "zipCode": {
                          "type": "string",
                          "description": "Postal Code."
                        }
                      },
                      "required": [
                        "cityName",
                        "CountryCode",
                        "stateCode",
                        "zipCode"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of stop.",
                      "enum": [ "PICKUP", "INTERMEDIATE", "DELIVERY" ]
                    },
                    "scheduledTimeFrom": {
                      "type": "string",
                      "description": "The earliest time by which the service provider can reach the stop. ISO8601 UTC date-time format required"
                    },
                    "scheduledTimeTo": {
                      "type": "string",
                      "description": "The Latest time by which the service provider can reach the stop. ISO8601 UTC date-time format required"
                    },
                    "stopContactInformations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "firstName": {
                            "type": "string",
                            "description": "First name of contact person."
                          },
                          "lastName": {
                            "type": "string",
                            "description": "Last name of contact person."
                          },
                          "email": {
                            "type": "string",
                            "description": "Email for communication."
                          },
                          "phoneNumbers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "Type": {
                                  "type": "string",
                                  "description": "Phone number types.",
                                  "enum": [ "MOBILE", "WORK", "HOME" ]
                                },
                                "number": {
                                  "type": "string",
                                  "description": "Contact number."
                                },
                                "isPrimary": {
                                  "type": "boolean",
                                  "description": "Is contact primary information."
                                }
                              }
                            },
                            "description": "Primary and alternate numbers for communication."
                          },
                          "title": {
                            "type": "string",
                            "description": "Title of contact person."
                          },
                          "isPrimary": {
                            "type": "boolean",
                            "description": "Is it the primary contact information?."
                          }
                        }
                      },
                      "description": "Contact Information for each stop."
                    },
                    "specialRequirement": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "enum": [
                              "LFD: Liftgate Delivery",
                              "LFP: Liftgate Pickup",
                              "RSD: Residential Delivery",
                              "RSP: Residential Pickup"
                            ],
                            "description": "Special requirement type."
                          },
                          "value": {
                            "type": "string",
                            "description": "Special requirements value."
                          }
                        }
                      },
                      "description": "The array of special requirements for this stop."
                    },
                    "stopReferenceNumbers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "typeCode": {
                            "type": "string",
                            "description": "Stop Reference Type code."
                          },
                          "value": {
                            "type": "string",
                            "description": "Actual value of stop reference code."
                          }
                        }
                      },
                      "description": "The collection of reference numbers associated with this stop, its type is same as order reference object."
                    },
                    "note": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Note's type."
                          },
                          "value": {
                            "type": "string",
                            "description": "Note's value."
                          }
                        }
                      }
                    },
                    "sequenceNo": {
                      "type": "integer",
                      "description": "Stop sequence number, required Required only if multi stop quote request."
                    }
                  }
                },
                "description": "Stops information for this Quote including origin and destination.",
                "required": [
                  "addressInformations",
                  "type"
                ]
              }
            },
            "example": {
                "quoteId": "288917",
                "orderReferenceNumbers": [
                    {
                        "code": null,
                        "type": "BM",
                        "value": "Test2021061701"
                    }
                ],
                "specialRequirements": [
                    {
                        "code": "Single"
                    }
                ],
                "items": [
                    {
                        "DeclaredValueCurrencyCode": "USD",
                        "classCode": "50",
                        "declaredValue": 1000,
                        "declaredValueAmount": 1000,
                        "declaredValueCurrencyCode": "USD",
                        "hazardousItemInfo": {
                            "containerType": "van",
                            "hazardousClass": "hc",
                            "hazardousDescription": "hd",
                            "hazardousPhoneNumber": "hp",
                            "numberofReceptacles": 10,
                            "packingGroup": 10,
                            "receptacleSize": 10,
                            "shippingName": "sn",
                            "unNumber": 1111,
                            "unitofMeasure": "ibs"
                        },
                        "height": 10,
                        "heightUomCode": "IN",
                        "htscode": null,
                        "isHazmat": true,
                        "isOversized": null,
                        "isStackable": null,
                        "isTemperatureControlled": true,
                        "itemCode": "Paper",
                        "itemDescription": "paper-123",
                        "itemNotes": null,
                        "itemNumber": "100056005",
                        "itemPrice": 20.5,
                        "itemPriceCurrencyCode": "USD",
                        "itemReferenceNumbers": null,
                        "itemServices": null,
                        "length": 10,
                        "lengthUomCode": "IN",
                        "nmfcCode": "",
                        "packageTypeCode": "BOXS",
                        "packageUnits": 1,
                        "productCode": "Paper",
                        "purchaseOrderNumber": null,
                        "sku": "",
                        "temperatureInformation": {
                            "high": 50,
                            "highUom": null,
                            "low": 30,
                            "lowUom": null
                        },
                        "unitTypeCode": "BAGS",
                        "units": 1,
                        "volume": 868.0386,
                        "volumeUomCode": "CUFT",
                        "weight": 1000,
                        "weightUomCode": "LB",
                        "width": 10,
                        "widthUomCode": "IN"
                    }
                ],
                "stops": [
                    {
                        "addressInformation": {
                            "addressLine1": "1234 Warehouse",
                            "addressLine2": "",
                            "cityName": "North Ridgeville",
                            "countryCode": "USA",
                            "geoCodes": {
                                "latitude": null,
                                "longitude": null,
                                "s2cellId": null
                            },
                            "ianaTimeZone": null,
                            "locationId": null,
                            "locationName": "North Ridgeville",
                            "locationType": "Warehouse",
                            "region": null,
                            "stateCode": "OH",
                            "utcOffset": "-04:00:00",
                            "zipCode": "44039"
                        },
                        "isAppointmentConfirmed": false,
                        "isAppointmentRequired": false,
                        "scheduledTimeFrom": "10/12/2021",
                        "scheduledTimeTo": "10/12/2021",
                        "sequenceNo": 1,
                        "specialRequirement": [
                            {
                                "code": "LFP"
                            }
                        ],
                        "stopContactInformations": [
                            {
                                "email": "devcustomer@gmail.com",
                                "firstName": "TestData",
                                "isPrimary": true,
                                "lastName": "Lname",
                                "phoneNumbers": [
                                    {
                                        "number": "7894561230",
                                        "type": "Mobile"
                                    }
                                ],
                                "title": ""
                            }
                        ],
                        "stopNotes": null,
                        "stopReferenceNumbers": null,
                        "type": 1
                    },
                    {
                        "addressInformation": {
                            "addressLine1": "1232 Warehouse",
                            "addressLine2": "",
                            "cityName": "Chicago",
                            "countryCode": "USA",
                            "geoCodes": {
                                "latitude": null,
                                "longitude": null,
                                "s2cellId": null
                            },
                            "ianaTimeZone": null,
                            "locationId": null,
                            "locationName": "Chicago",
                            "locationType": "Warehouse",
                            "region": null,
                            "stateCode": "IL",
                            "utcOffset": "-04:00:00",
                            "zipCode": "60606"
                        },
                        "isAppointmentConfirmed": false,
                        "isAppointmentRequired": false,
                        "scheduledTimeFrom": "11/11/2021",
                        "scheduledTimeTo": "11/11/2021",
                        "sequenceNo": 2,
                        "specialRequirement": [
                            {
                                "code": "APT"
                            },
                            {
                                "code": "AST"
                            },
                            {
                                "code": "DT"
                            },
                            {
                                "code": "TWC"
                            }
                        ],
                        "stopContactInformations": [
                            {
                                "email": "devcustomer@gmail.com",
                                "firstName": "TestData",
                                "isPrimary": true,
                                "lastName": "Lname",
                                "phoneNumbers": [
                                    {
                                        "number": "3312244433",
                                        "type": "Mobile"
                                    }
                                ],
                                "title": ""
                            }
                        ],
                        "stopNotes": null,
                        "stopReferenceNumbers": null,
                        "type": 3
                    }
                ]
            }
          }
        ]
      },
      "LTLStops": {
        "allOf": [
          {
            "$ref": "#/components/schemas/convertquoterequest"
          },
          {
            "type": "object",
            "properties": {
              "stops": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "addressInformation": {
                      "type": "object",
                      "properties": {
                        "locationId": {
                          "type": "string",
                          "description": "Id of location."
                        },
                        "locationName": {
                            "type": "string",
                            "description": "Name of location."
                        },
                        "addressLine1": {
                          "type": "string",
                          "description": "Address line 1 of stop location."
                        },
                        "addressLine2": {
                          "type": "string",
                          "description": "Address line 2 of stop location."
                        },
                        "cityName": {
                          "type": "string",
                          "description": "City name belongs to stop location."
                        },
                        "stateCode": {
                          "type": "string",
                          "description": "State code of the stop location."
                        },
                        "country": {
                          "type": "string",
                          "description": "Country belongs to stop location."
                        },
                        "zipCode": {
                          "type": "string",
                          "description": "Postal Code."
                        }
                      },
                      "required": [
                        "cityName",
                        "CountryCode",
                        "stateCode",
                        "zipCode"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of stop.",
                      "enum": [ "PICKUP", "INTERMEDIATE", "DELIVERY" ]
                    },
                    "scheduledTimeFrom": {
                      "type": "string",
                      "description": "The earliest time by which the service provider can reach the stop.\n\n Note: Time should be round up to 00,15,30,45 minutes. ISO8601 UTC date-time format required"
                    },
                    "scheduledTimeTo": {
                      "type": "string",
                      "description": "The Latest time by which the service provider can reach the stop.\n\n Note: Time should be round up to 00,15,30,45 minutes. ISO8601 UTC date-time format required"
                    },
                    "stopContactInformations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "firstName": {
                            "type": "string",
                            "description": "First name of contact person."
                          },
                          "lastName": {
                            "type": "string",
                            "description": "Last name of contact person."
                          },
                          "email": {
                            "type": "string",
                            "description": "Email for communication."
                          },
                          "phoneNumbers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "Type": {
                                  "type": "string",
                                  "description": "Phone number types.",
                                  "enum": [ "MOBILE", "WORK", "HOME" ]
                                },
                                "number": {
                                  "type": "string",
                                  "description": "Contact number."
                                },
                                "isPrimary": {
                                  "type": "boolean",
                                  "description": "Is contact primary information."
                                }
                              }
                            },
                            "description": "Primary and alternate numbers for communication."
                          },
                          "title": {
                            "type": "string",
                            "description": "Title of contact person."
                          },
                          "isPrimary": {
                            "type": "boolean",
                            "description": "Is it the primary contact information?."
                          }
                        }
                      },
                      "description": "Contact Information for each stop."
                    },
                    "specialRequirement": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Special requirement type.",
                            "enum": [
                              "APT: Appointment Required (Consignee)",
                              "APT: Appointment Required (Shipper)",
                              "CHD: Church Delivery",
                              "CHP: Church Pickup",
                              "CSD: Construction Site Delivery",
                              "CSP: Construction Site Pickup",
                              "ID: Inside Delivery",
                              "IP: Inside Pickup",
                              "MLD: Military Base Delivery",
                              "MLP: Military Base Pickup",
                              "MND: Mine Site Delivery",
                              "MNP: Mine Site Pickup",
                              "MID: Mini-Storage Delivery",
                              "MIP: Mini-Storage Pickup",
                              "NYC: NYC Metro (Consignee)",
                              "NYC: NYC Metro (Shipper)",
                              "APT: Appointment Required Code",
                              "LFD: Liftgate Delivery",
                              "LFP: Liftgate Pickup",
                              "RSD: Residential Delivery",
                              "RSP: Residential Pickup",
                              "SLD: School Delivery",
                              "SLP: School Pickup",
                              "SGS: Single Shipment"
                            ]
                          },
                          "value": {
                            "type": "string",
                            "description": "Special requirements value."
                          }
                        }
                      },
                      "description": "The array of special requirements for this stop."
                    },
                    "stopReferenceNumbers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "typeCode": {
                            "type": "string",
                            "description": "Stop Reference Type code."
                          },
                          "value": {
                            "type": "string",
                            "description": "Actual value of stop reference code."
                          }
                        }
                      },
                      "description": "The collection of reference numbers associated with this stop, its type is same as order reference object."
                    },
                    "note": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Note's type."
                          },
                          "value": {
                            "type": "string",
                            "description": "Note's value."
                          }
                        }
                      }
                    },
                    "sequenceNo": {
                      "type": "integer",
                      "description": "Stop sequence number, required Required only if multi stop quote request."
                    }
                  }
                },
                "description": "Stops information for this Quote including origin and destination.",
                "required": [
                  "addressInformations",
                  "type"
                ]
              }
            },
            "example": {
                "quoteId": "288896",
                "orderReferenceNumbers": [
                    {
                        "code": null,
                        "type": "PO",
                        "value": "Test2021061701"
                    }
                ],
                "specialRequirements": [
                    {
                        "code": "GUARANTEED"
                    }
                ],
                "items": [
                    {
                        "WidthUomCode": "IN",
                        "classCode": "85",
                        "declaredValue": 1000,
                        "declaredValueAmount": 1000,
                        "declaredValueCurrencyCode": "USD",
                        "hazardousItemInfo": {
                            "containerType": "van",
                            "hazardousClass": "hc",
                            "hazardousDescription": "hd",
                            "hazardousPhoneNumber": "hp",
                            "numberofReceptacles": 10,
                            "packingGroup": 10,
                            "receptacleSize": 10,
                            "shippingName": "sn",
                            "unNumber": 10,
                            "unitofMeasure": "ibs"
                        },
                        "height": 10,
                        "heightUomCode": "IN",
                        "htscode": null,
                        "isHazmat": true,
                        "isOversized": null,
                        "isStackable": null,
                        "isTemperatureControlled": true,
                        "itemCode": "Paper",
                        "itemDescription": "test",
                        "itemNotes": null,
                        "itemNumber": "1",
                        "itemPrice": 20.5,
                        "itemPriceCurrencyCode": "USD",
                        "itemReferenceNumbers": null,
                        "itemServices": null,
                        "length": 10,
                        "lengthUomCode": "IN",
                        "nmfcCode": "",
                        "packageTypeCode": "BOXS",
                        "packageUnits": 1,
                        "purchaseOrderNumber": null,
                        "sku": "",
                        "temperatureInformation": {
                            "high": 50,
                            "highUom": "",
                            "low": 30,
                            "lowUom": ""
                        },
                        "unitTypeCode": "BAGS",
                        "units": 1,
                        "volume": 868.0386,
                        "volumeUomCode": "CUFT",
                        "weight": 1000,
                        "weightUomCode": "LB",
                        "width": 10,
                        "widthUomCode": "IN"
                    }
                ],
                "stops": [
                    {
                        "addressInformation": {
                            "addressLine1": "1260 RAILROAD AVE",
                            "addressLine2": "",
                            "cityName": "Vallejo",
                            "countryCode": "USA",
                            "geoCodes": {
                                "latitude": null,
                                "longitude": null,
                                "s2cellId": null
                            },
                            "ianaTimeZone": null,
                            "locationId": null,
                            "locationName": "ABC PAINTING",
                            "locationType": "Warehouse",
                            "region": null,
                            "stateCode": "CA",
                            "utcOffset": "-04:00:00",
                            "zipCode": "94592"
                        },
                        "isAppointmentConfirmed": false,
                        "isAppointmentRequired": false,
                        "scheduledTimeFrom": "10/12/2021",
                        "scheduledTimeTo": "10/12/2021",
                        "sequenceNo": 1,
                        "specialRequirement": [
                            {
                                "code": "LFP"
                            }
                        ],
                        "stopContactInformations": [
                            {
                                "email": "devcustomer@gmail.com",
                                "firstName": "TestData",
                                "isPrimary": true,
                                "lastName": "Lname",
                                "phoneNumbers": [
                                    {
                                        "number": "7894561230",
                                        "type": "Mobile"
                                    }
                                ],
                                "title": ""
                            }
                        ],
                        "stopNotes": null,
                        "stopReferenceNumbers": [
                            {
                                "code": "BM",
                                "type": "BM",
                                "value": "15423"
                            }
                        ],
                        "type": 1
                    },
                    {
                        "addressInformation": {
                            "addressLine1": "6605 SW 11TH AVE",
                            "addressLine2": "",
                            "cityName": "Beaverton",
                            "countryCode": "USA",
                            "geoCodes": {
                                "latitude": null,
                                "longitude": null,
                                "s2cellId": null
                            },
                            "ianaTimeZone": null,
                            "locationId": null,
                            "locationName": "A B C SPLY 527 BEAVERTON",
                            "locationType": "Warehouse",
                            "region": null,
                            "stateCode": "OR",
                            "utcOffset": "-04:00:00",
                            "zipCode": "97008"
                        },
                        "isAppointmentConfirmed": false,
                        "isAppointmentRequired": false,
                        "scheduledTimeFrom": "11/11/2021",
                        "scheduledTimeTo": "11/11/2021",
                        "sequenceNo": 2,
                        "specialRequirement": [
                            {
                                "code": "LFD"
                            }
                        ],
                        "stopContactInformations": [
                            {
                                "email": "devcustomer@gmail.com",
                                "firstName": "TestData",
                                "isPrimary": true,
                                "lastName": "Lname",
                                "phoneNumbers": [
                                    {
                                        "number": "3312244433",
                                        "type": "Mobile"
                                    }
                                ],
                                "title": ""
                            }
                        ],
                        "stopNotes": null,
                        "stopReferenceNumbers": [
                            {
                                "code": "PO",
                                "type": "PO",
                                "value": "43252"
                            }
                        ],
                        "type": 3
                    }
                ]
            }
          }
        ]
      },
      "Order": {
        "type": "object",
        "discriminator": {
          "propertyName": "transportationMode",
          "mapping": {
            "TL": "#/components/schemas/equipmentRequired",
            "LTL": "#/components/schemas/equipmentNotRequired",
            "AIR": "#/components/schemas/Order",
            "SEA": "#/components/schemas/Order",
            "ROA": "#/components/schemas/Order",
            "RAI": "#/components/schemas/Order"
          }
        },
        "properties": {
          "orderDate ": {
            "type": "string",
            "description": "Date which the order is placed,If order date is not provided, system will add the current date."
          },
          "transportationMode": {
            "type": "string",
            "description": "Mode of Transportation"
          },
          "applicationSource": {
            "type": "string",
            "description": "Application source is an enum, which indicates this order created by which source like API, XpoConnect, EDI etc.",
            "enum": [ "GPAPI", "XpoConnect", "EDI" ]
          },
          "orderNumber ": {
            "type": "string",
            "description": "Order's number to uniquely identify order."
          },
          "shipmentId": {
            "type": "string",
            "description": "Shipment Id."
          },
          "orderType": {
            "type": "string",
            "description": "Order's Type"
          },
          "orderNotes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Note's type.",
                  "enum": [ "GENERAL", "ORDER_DESCRIPTION" ]
                },
                "value": {
                  "type": "string",
                  "description": "Note's value."
                }
              }
            },
            "description": "Notes for this order as array values."
          },
          "orderReferenceNumbers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Custom reference code.",
                  "enum": [
                    "AN",
                    "AO",
                    "BM",
                    "CG",
                    "MB",
                    "OI",
                    "OR",
                    "PO",
                    "PS",
                    "PU",
                    "QL",
                    "SI",
                    "SN",
                    "ZZ",
                    "11",
                    "19",
                    "2I",
                    "6O",
                    "6Y",
                    "CN",
                    "CO",
                    "CR",
                    "DJ",
                    "DN",
                    "DO",
                    "DP",
                    "EH",
                    "EMM",
                    "EQ",
                    "IA",
                    "IL",
                    "KK",
                    "KR",
                    "MI",
                    "MO",
                    "OQ",
                    "P8",
                    "PRT",
                    "QN",
                    "QY",
                    "RB",
                    "RE",
                    "RN",
                    "SC",
                    "SO",
                    "SQ",
                    "TH",
                    "TN",
                    "VD",
                    "VR",
                    "RSN",
                    "8",
                    "23",
                    "4B",
                    "51",
                    "6A",
                    "6M",
                    "6P",
                    "71",
                    "A0",
                    "A6",
                    "A8",
                    "ACI",
                    "AG",
                    "AQ",
                    "AT",
                    "BC",
                    "BL",
                    "BN",
                    "BV",
                    "CB",
                    "CF",
                    "CH",
                    "CP",
                    "CT",
                    "DAN",
                    "DG",
                    "DI",
                    "DK",
                    "DM",
                    "DU",
                    "GD",
                    "GM",
                    "IK",
                    "K6",
                    "LI",
                    "LM",
                    "LO",
                    "MH",
                    "NS",
                    "OC",
                    "ON",
                    "OP",
                    "OU",
                    "OW",
                    "PI",
                    "PL",
                    "PP",
                    "PUA",
                    "Q1",
                    "QJ",
                    "RI",
                    "RZ",
                    "S5",
                    "TDT",
                    "TF",
                    "TO",
                    "TP",
                    "TS",
                    "UP",
                    "VA",
                    "VE",
                    "ZG",
                    "ZM",
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6",
                    "7",
                    "8",
                    "9",
                    "0A",
                    "0B",
                    "0D",
                    "0E",
                    "0F",
                    "0G",
                    "0H",
                    "0I",
                    "0J",
                    "0K",
                    "0L",
                    "0M",
                    "0N",
                    "0P",
                    "10",
                    "12",
                    "13",
                    "14",
                    "15",
                    "16",
                    "17",
                    "18",
                    "1A",
                    "1B",
                    "1C",
                    "1D",
                    "1E",
                    "1F",
                    "1G",
                    "1H",
                    "1I",
                    "1J",
                    "1K",
                    "1L",
                    "1M",
                    "1N",
                    "1O",
                    "1P",
                    "1Q",
                    "1R",
                    "1S",
                    "1T",
                    "1U",
                    "1V",
                    "1W",
                    "1X",
                    "1Y",
                    "1Z",
                    "20",
                    "21",
                    "22",
                    "24",
                    "25",
                    "26",
                    "27",
                    "28",
                    "29",
                    "2A",
                    "2B",
                    "2C",
                    "2D",
                    "2E",
                    "2F",
                    "2G",
                    "2H",
                    "2J",
                    "2K",
                    "2L",
                    "2M",
                    "2N",
                    "2O",
                    "2P",
                    "2Q",
                    "2R",
                    "2S",
                    "2T",
                    "2U",
                    "2V",
                    "2W",
                    "2X",
                    "2Y",
                    "2Z",
                    "30",
                    "31",
                    "32",
                    "33",
                    "34",
                    "35",
                    "36",
                    "37",
                    "38",
                    "39",
                    "3A",
                    "3B",
                    "3C",
                    "3D",
                    "3E",
                    "3F",
                    "3G",
                    "3H",
                    "3I",
                    "3J",
                    "3K",
                    "3L",
                    "3M",
                    "3N",
                    "3O",
                    "3P",
                    "3Q",
                    "3R",
                    "3S",
                    "3T",
                    "3U",
                    "3V",
                    "3W",
                    "3X",
                    "3Y",
                    "3Z",
                    "40",
                    "41",
                    "42",
                    "43",
                    "44",
                    "45",
                    "46",
                    "47",
                    "48",
                    "49",
                    "4A",
                    "4C",
                    "4D",
                    "4E",
                    "4F",
                    "4G",
                    "4H",
                    "4I",
                    "4J",
                    "4K",
                    "4L",
                    "4M",
                    "4N",
                    "4O",
                    "4P",
                    "4Q",
                    "4R",
                    "4S",
                    "4T",
                    "4U",
                    "4V",
                    "4W",
                    "4X",
                    "4Y",
                    "4Z",
                    "50",
                    "52",
                    "53",
                    "54",
                    "55",
                    "56",
                    "57",
                    "58",
                    "59",
                    "5A",
                    "5B",
                    "5C",
                    "5D",
                    "5E",
                    "5F",
                    "5G",
                    "5H",
                    "5I",
                    "5J",
                    "5K",
                    "5L",
                    "5M",
                    "5N",
                    "5O",
                    "5P",
                    "5Q",
                    "5R",
                    "5S",
                    "5T",
                    "5U",
                    "5V",
                    "5W",
                    "5X",
                    "5Y",
                    "5Z",
                    "60",
                    "61",
                    "63",
                    "64",
                    "65",
                    "66",
                    "67",
                    "68",
                    "69",
                    "6B",
                    "6C",
                    "6D",
                    "6E",
                    "6F",
                    "6G",
                    "6H",
                    "6I",
                    "6J",
                    "6K",
                    "6L",
                    "6N",
                    "6Q",
                    "6R",
                    "6S",
                    "6T",
                    "6U",
                    "6V",
                    "6W",
                    "6X",
                    "6Z",
                    "70",
                    "72",
                    "73",
                    "74",
                    "75",
                    "76",
                    "77",
                    "78",
                    "79",
                    "7A",
                    "7B",
                    "7C",
                    "7D",
                    "7E",
                    "7F",
                    "7G",
                    "7H",
                    "7I",
                    "7J",
                    "7K",
                    "7L",
                    "7M",
                    "7N",
                    "7O",
                    "7P",
                    "7Q",
                    "7R",
                    "7S",
                    "7T",
                    "7U",
                    "7W",
                    "7X",
                    "7Y",
                    "7Z",
                    "80",
                    "81",
                    "82",
                    "83",
                    "84",
                    "85",
                    "86",
                    "87",
                    "88",
                    "89",
                    "8A",
                    "8B",
                    "8C",
                    "8D",
                    "8E",
                    "8F",
                    "8G",
                    "8H",
                    "8I",
                    "8J",
                    "8K",
                    "8L",
                    "8M",
                    "8N",
                    "8O",
                    "8P",
                    "8Q",
                    "8R",
                    "8S",
                    "8U",
                    "8V",
                    "8W",
                    "8X",
                    "8Y",
                    "8Z",
                    "90",
                    "91",
                    "92",
                    "93",
                    "94",
                    "95",
                    "96",
                    "97",
                    "98",
                    "99",
                    "9A",
                    "9B",
                    "9C",
                    "9D",
                    "9E",
                    "9F",
                    "9G",
                    "9H",
                    "9I",
                    "9J",
                    "9K",
                    "9L",
                    "9M",
                    "9N",
                    "9P",
                    "9Q",
                    "9R",
                    "9S",
                    "9T",
                    "9U",
                    "9V",
                    "9W",
                    "9X",
                    "9Y",
                    "9Z",
                    "A1",
                    "A2",
                    "A3",
                    "A4",
                    "A5",
                    "A7",
                    "A9",
                    "AA",
                    "AAA",
                    "AAB",
                    "AAC",
                    "AAD",
                    "AAE",
                    "AAF",
                    "AAG",
                    "AAH",
                    "AAI",
                    "AAJ",
                    "AAK",
                    "AAL",
                    "AAM",
                    "AAN",
                    "AAO",
                    "AAP",
                    "AAQ",
                    "AAR",
                    "AAS",
                    "AAT",
                    "AAU",
                    "AAV",
                    "AAW",
                    "AAX",
                    "AAY",
                    "AAZ",
                    "AB",
                    "ABA",
                    "ABB",
                    "ABC",
                    "ABD",
                    "ABE",
                    "ABF",
                    "ABG",
                    "ABH",
                    "ABJ",
                    "ABK",
                    "ABL",
                    "ABM",
                    "ABN",
                    "ABO",
                    "ABP",
                    "ABQ",
                    "ABR",
                    "ABS",
                    "ABT",
                    "ABU",
                    "ABV",
                    "ABY",
                    "AC",
                    "ACA",
                    "ACB",
                    "ACC",
                    "ACD",
                    "ACE",
                    "ACF",
                    "ACG",
                    "ACH",
                    "ACJ",
                    "ACK",
                    "ACR",
                    "ACS",
                    "ACT",
                    "AD",
                    "ADA",
                    "ADB",
                    "ADC",
                    "ADD",
                    "ADE",
                    "ADF",
                    "ADG",
                    "ADH",
                    "ADI",
                    "ADM",
                    "AE",
                    "AEA",
                    "AEB",
                    "AEC",
                    "AED",
                    "AEE",
                    "AEF",
                    "AEG",
                    "AEH",
                    "AEI",
                    "AEJ",
                    "AEK",
                    "AEL",
                    "AEM",
                    "AF",
                    "AH",
                    "AHC",
                    "AI",
                    "AJ",
                    "AK",
                    "AL",
                    "ALC",
                    "ALG",
                    "ALH",
                    "ALI",
                    "ALJ",
                    "ALT",
                    "AM",
                    "AP",
                    "API",
                    "AR",
                    "AS",
                    "ASL",
                    "ASP",
                    "AST",
                    "ATC",
                    "AU",
                    "AV",
                    "AW",
                    "AX",
                    "AY",
                    "AZ",
                    "B1",
                    "B2",
                    "B3",
                    "B4",
                    "B5",
                    "B6",
                    "B7",
                    "B8",
                    "B9",
                    "BA",
                    "BAA",
                    "BAB",
                    "BAC",
                    "BAD",
                    "BAE",
                    "BAF",
                    "BAG",
                    "BAH",
                    "BAI",
                    "BB",
                    "BCI",
                    "BD",
                    "BE",
                    "BF",
                    "BG",
                    "BH",
                    "BI",
                    "BJ",
                    "BK",
                    "BKT",
                    "BLT",
                    "BMM",
                    "BO",
                    "BOI",
                    "BP",
                    "BQ",
                    "BR",
                    "BS",
                    "BT",
                    "BU",
                    "BW",
                    "BX",
                    "BY",
                    "BZ",
                    "C0",
                    "C1",
                    "C2",
                    "C3",
                    "C4",
                    "C5",
                    "C6",
                    "C7",
                    "C8",
                    "C9",
                    "CA",
                    "CBG",
                    "CC",
                    "CD",
                    "CDN",
                    "CE",
                    "CI",
                    "CIR",
                    "CIT",
                    "CJ",
                    "CK",
                    "CL",
                    "CM",
                    "CMN",
                    "CMP",
                    "CMT",
                    "CNO",
                    "COL",
                    "COT",
                    "CPA",
                    "CPT",
                    "CQ",
                    "CRN",
                    "CRS",
                    "CS",
                    "CSC",
                    "CSG",
                    "CST",
                    "CTS",
                    "CU",
                    "CV",
                    "CW",
                    "CX",
                    "CY",
                    "CYC",
                    "CZ",
                    "D0",
                    "D1",
                    "D2",
                    "D3",
                    "D4",
                    "D5",
                    "D6",
                    "D7",
                    "D8",
                    "D9",
                    "DA",
                    "DB",
                    "DC",
                    "DD",
                    "DE",
                    "DF",
                    "DH",
                    "DHH",
                    "DIS",
                    "DL",
                    "DNR",
                    "DNS",
                    "DOA",
                    "DOC",
                    "DOE",
                    "DOI",
                    "DOJ",
                    "DOL",
                    "DON",
                    "DOS",
                    "DOT",
                    "DQ",
                    "DR",
                    "DRN",
                    "DS",
                    "DSC",
                    "DSI",
                    "DST",
                    "DT",
                    "DTS",
                    "DUN",
                    "DV",
                    "DW",
                    "DX",
                    "DY",
                    "DZ",
                    "E1",
                    "E2",
                    "E3",
                    "E4",
                    "E5",
                    "E6",
                    "E7",
                    "E8",
                    "E9",
                    "EA",
                    "EB",
                    "EC",
                    "ED",
                    "EDA",
                    "EE",
                    "EF",
                    "EG",
                    "EI",
                    "EJ",
                    "EK",
                    "EL",
                    "EM",
                    "EN",
                    "END",
                    "EO",
                    "EP",
                    "EPA",
                    "EPB",
                    "ER",
                    "ES",
                    "ESN",
                    "ET",
                    "EU",
                    "EV",
                    "EW",
                    "EX",
                    "EY",
                    "EZ",
                    "F1",
                    "F2",
                    "F3",
                    "F4",
                    "F5",
                    "F6",
                    "F7",
                    "F8",
                    "F9",
                    "FA",
                    "FB",
                    "FC",
                    "FCN",
                    "FD",
                    "FE",
                    "FF",
                    "FG",
                    "FH",
                    "FI",
                    "FJ",
                    "FK",
                    "FL",
                    "FLZ",
                    "FM",
                    "FMP",
                    "FN",
                    "FND",
                    "FO",
                    "FP",
                    "FQ",
                    "FR",
                    "FS",
                    "FSN",
                    "FT",
                    "FTN",
                    "FU",
                    "FV",
                    "FW",
                    "FWC",
                    "FX",
                    "FY",
                    "FZ",
                    "G1",
                    "G2",
                    "G3",
                    "G4",
                    "G5",
                    "G6",
                    "G7",
                    "G8",
                    "G9",
                    "GA",
                    "GB",
                    "GC",
                    "GE",
                    "GF",
                    "GG",
                    "GH",
                    "GI",
                    "GJ",
                    "GK",
                    "GL",
                    "GN",
                    "GO",
                    "GP",
                    "GQ",
                    "GR",
                    "GS",
                    "GT",
                    "GU",
                    "GV",
                    "GW",
                    "GWS",
                    "GX",
                    "GY",
                    "GZ",
                    "H1",
                    "H2",
                    "H3",
                    "H4",
                    "H5",
                    "H6",
                    "H7",
                    "H8",
                    "H9",
                    "HA",
                    "HB",
                    "HC",
                    "HD",
                    "HE",
                    "HF",
                    "HG",
                    "HH",
                    "HHT",
                    "HI",
                    "HJ",
                    "HK",
                    "HL",
                    "HM",
                    "HMB",
                    "HN",
                    "HO",
                    "HP",
                    "HPI",
                    "HQ",
                    "HR",
                    "HS",
                    "HT",
                    "HU",
                    "HUD",
                    "HV",
                    "HW",
                    "HX",
                    "HY",
                    "HZ",
                    "I1",
                    "I2",
                    "I3",
                    "I4",
                    "I5",
                    "I7",
                    "I8",
                    "I9",
                    "IB",
                    "IC",
                    "ICD",
                    "ID",
                    "IE",
                    "IF",
                    "IFT",
                    "IG",
                    "IH",
                    "II",
                    "IID",
                    "IJ",
                    "IM",
                    "IMP",
                    "IMS",
                    "IN",
                    "IND",
                    "IO",
                    "IP",
                    "IQ",
                    "IR",
                    "IRN",
                    "IRP",
                    "IS",
                    "ISC",
                    "ISN",
                    "ISS",
                    "IT",
                    "IU",
                    "IV",
                    "IW",
                    "IX",
                    "IZ",
                    "J0",
                    "J1",
                    "J2",
                    "J3",
                    "J4",
                    "J5",
                    "J6",
                    "J7",
                    "J8",
                    "J9",
                    "JA",
                    "JB",
                    "JC",
                    "JD",
                    "JE",
                    "JF",
                    "JH",
                    "JI",
                    "JK",
                    "JL",
                    "JM",
                    "JN",
                    "JO",
                    "JP",
                    "JQ",
                    "JR",
                    "JS",
                    "JT",
                    "JU",
                    "JV",
                    "JW",
                    "JX",
                    "JY",
                    "JZ",
                    "K0",
                    "K1",
                    "K2",
                    "K3",
                    "K4",
                    "K5",
                    "K7",
                    "K8",
                    "K9",
                    "KA",
                    "KB",
                    "KC",
                    "KD",
                    "KE",
                    "KG",
                    "KH",
                    "KI",
                    "KJ",
                    "KL",
                    "KM",
                    "KN",
                    "KO",
                    "KP",
                    "KQ",
                    "KS",
                    "KT",
                    "KU",
                    "KV",
                    "KW",
                    "KX",
                    "KY",
                    "KZ",
                    "L1",
                    "L2",
                    "L3",
                    "L4",
                    "L5",
                    "L6",
                    "L7",
                    "L8",
                    "L9",
                    "LA",
                    "LB",
                    "LC",
                    "LD",
                    "LE",
                    "LEN",
                    "LF",
                    "LG",
                    "LH",
                    "LIC",
                    "LJ",
                    "LK",
                    "LL",
                    "LN",
                    "LOI",
                    "LP",
                    "LQ",
                    "LR",
                    "LS",
                    "LSD",
                    "LT",
                    "LU",
                    "LV",
                    "LVO",
                    "LW",
                    "LX",
                    "LY",
                    "LZ",
                    "M1",
                    "M2",
                    "M3",
                    "M5",
                    "M6",
                    "M7",
                    "M8",
                    "M9",
                    "MA",
                    "MBX",
                    "MC",
                    "MCI",
                    "MD",
                    "MDN",
                    "ME",
                    "MF",
                    "MG",
                    "MJ",
                    "MK",
                    "ML",
                    "MM",
                    "MN",
                    "MP",
                    "MQ",
                    "MR",
                    "MS",
                    "MSL",
                    "MT",
                    "MU",
                    "MV",
                    "MW",
                    "MX",
                    "MY",
                    "MZ",
                    "MZO",
                    "N0",
                    "N1",
                    "N2",
                    "N3",
                    "N4",
                    "N5",
                    "N6",
                    "N7",
                    "N8",
                    "N9",
                    "NA",
                    "NAS",
                    "NB",
                    "NC",
                    "ND",
                    "NDA",
                    "NDB",
                    "NE",
                    "NF",
                    "NFC",
                    "NFD",
                    "NFM",
                    "NFN",
                    "NFS",
                    "NG",
                    "NH",
                    "NI",
                    "NJ",
                    "NK",
                    "NL",
                    "NM",
                    "NN",
                    "NO",
                    "NP",
                    "NQ",
                    "NR",
                    "NT",
                    "NU",
                    "NW",
                    "NX",
                    "NY",
                    "NZ",
                    "O1",
                    "O2",
                    "O5",
                    "O7",
                    "O8",
                    "O9",
                    "OA",
                    "OB",
                    "OD",
                    "OE",
                    "OF",
                    "OG",
                    "OH",
                    "OJ",
                    "OK",
                    "OL",
                    "OM",
                    "OS",
                    "OT",
                    "OV",
                    "OX",
                    "OZ",
                    "P1",
                    "P2",
                    "P3",
                    "P4",
                    "P5",
                    "P6",
                    "P7",
                    "P9",
                    "PA",
                    "PAC",
                    "PAN",
                    "PAP",
                    "PB",
                    "PC",
                    "PCC",
                    "PCN",
                    "PD",
                    "PDL",
                    "PE",
                    "PF",
                    "PG",
                    "PGC",
                    "PGN",
                    "PGS",
                    "PH",
                    "PHC",
                    "PID",
                    "PIN",
                    "PJ",
                    "PK",
                    "PLA",
                    "PLN",
                    "PM",
                    "PMN",
                    "PN",
                    "PNN",
                    "POL",
                    "PQ",
                    "PR",
                    "PRS",
                    "PSI",
                    "PSL",
                    "PSM",
                    "PSN",
                    "PT",
                    "PTC",
                    "PV",
                    "PW",
                    "PWC",
                    "PWS",
                    "PX",
                    "PY",
                    "PZ",
                    "Q2",
                    "Q3",
                    "Q4",
                    "Q5",
                    "Q6",
                    "Q7",
                    "Q8",
                    "Q9",
                    "QA",
                    "QB",
                    "QC",
                    "QD",
                    "QE",
                    "QF",
                    "QG",
                    "QH",
                    "QI",
                    "QK",
                    "QM",
                    "QO",
                    "QP",
                    "QQ",
                    "QR",
                    "QS",
                    "QT",
                    "QU",
                    "QV",
                    "QW",
                    "QX",
                    "QZ",
                    "R0",
                    "R1",
                    "R2",
                    "R3",
                    "R4",
                    "R5",
                    "R6",
                    "R7",
                    "R8",
                    "R9",
                    "RA",
                    "RAA",
                    "RAN",
                    "RC",
                    "RD",
                    "REC",
                    "RF",
                    "RG",
                    "RGI",
                    "RH",
                    "RIG",
                    "RJ",
                    "RK",
                    "RL",
                    "RM",
                    "RO",
                    "RP",
                    "RPP",
                    "RPT",
                    "RQ",
                    "RR",
                    "RRS",
                    "RS",
                    "RT",
                    "RU",
                    "RV",
                    "RW",
                    "RX",
                    "RY",
                    "S0",
                    "S1",
                    "S2",
                    "S3",
                    "S4",
                    "S6",
                    "S7",
                    "S8",
                    "S9",
                    "SA",
                    "SB",
                    "SBN",
                    "SCA",
                    "SD",
                    "SE",
                    "SEK",
                    "SES",
                    "SF",
                    "SG",
                    "SH",
                    "SHL",
                    "SJ",
                    "SK",
                    "SL",
                    "SM",
                    "SNH",
                    "SNV",
                    "SP",
                    "SPL",
                    "SPN",
                    "SR",
                    "SS",
                    "ST",
                    "STB",
                    "STR",
                    "SU",
                    "SUB",
                    "SUO",
                    "SV",
                    "SW",
                    "SX",
                    "SY",
                    "SZ",
                    "T0",
                    "T1",
                    "T2",
                    "T3",
                    "T4",
                    "T5",
                    "T6",
                    "T7",
                    "T8",
                    "T9",
                    "TA",
                    "TB",
                    "TC",
                    "TD",
                    "TE",
                    "TG",
                    "TI",
                    "TIP",
                    "TJ",
                    "TK",
                    "TL",
                    "TM",
                    "TOC",
                    "TPN",
                    "TQ",
                    "TR",
                    "TSN",
                    "TT",
                    "TU",
                    "TV",
                    "TW",
                    "TX",
                    "TY",
                    "TZ",
                    "U0",
                    "U1",
                    "U2",
                    "U3",
                    "U4",
                    "U5",
                    "U6",
                    "U8",
                    "U9",
                    "UA",
                    "UB",
                    "UC",
                    "UD",
                    "UE",
                    "UF",
                    "UG",
                    "UH",
                    "UI",
                    "UJ",
                    "UK",
                    "UL",
                    "UM",
                    "UN",
                    "UO",
                    "UQ",
                    "UR",
                    "URL",
                    "US",
                    "UT",
                    "UU",
                    "UV",
                    "UW",
                    "UX",
                    "UY",
                    "UZ",
                    "V0",
                    "V1",
                    "V2",
                    "V3",
                    "V4",
                    "V5",
                    "V6",
                    "V7",
                    "V8",
                    "V9",
                    "VB",
                    "VC",
                    "VF",
                    "VG",
                    "VH",
                    "VI",
                    "VJ",
                    "VK",
                    "VL",
                    "VM",
                    "VN",
                    "VO",
                    "VP",
                    "VQ",
                    "VS",
                    "VT",
                    "VU",
                    "VV",
                    "VW",
                    "VX",
                    "VY",
                    "VZ",
                    "W1",
                    "W2",
                    "W3",
                    "W4",
                    "W5",
                    "W6",
                    "W7",
                    "W8",
                    "W9",
                    "WA",
                    "WB",
                    "WC",
                    "WCS",
                    "WD",
                    "WDR",
                    "WE",
                    "WF",
                    "WG",
                    "WH",
                    "WI",
                    "WJ",
                    "WK",
                    "WL",
                    "WM",
                    "WN",
                    "WO",
                    "WP",
                    "WQ",
                    "WR",
                    "WS",
                    "WT",
                    "WU",
                    "WV",
                    "WW",
                    "WX",
                    "WY",
                    "WZ",
                    "X0",
                    "X1",
                    "X2",
                    "X3",
                    "X4",
                    "X5",
                    "X6",
                    "X7",
                    "X8",
                    "X9",
                    "XA",
                    "XB",
                    "XC",
                    "XD",
                    "XE",
                    "XF",
                    "XG",
                    "XH",
                    "XI",
                    "XJ",
                    "XK",
                    "XL",
                    "XM",
                    "XN",
                    "XO",
                    "XP",
                    "XQ",
                    "XR",
                    "XS",
                    "XT",
                    "XU",
                    "XV",
                    "XW",
                    "XX",
                    "XY",
                    "XZ",
                    "Y0",
                    "Y1",
                    "Y2",
                    "Y3",
                    "Y4",
                    "Y5",
                    "Y6",
                    "Y7",
                    "Y8",
                    "Y9",
                    "YA",
                    "YB",
                    "YC",
                    "YD",
                    "YE",
                    "YF",
                    "YH",
                    "YI",
                    "YJ",
                    "YK",
                    "YL",
                    "YM",
                    "YN",
                    "YO",
                    "YP",
                    "YQ",
                    "YR",
                    "YS",
                    "YT",
                    "YV",
                    "YW",
                    "YX",
                    "YY",
                    "YZ",
                    "Z1",
                    "Z2",
                    "Z3",
                    "Z4",
                    "Z5",
                    "Z6",
                    "Z7",
                    "Z8",
                    "Z9",
                    "ZA",
                    "ZB",
                    "ZC",
                    "ZD",
                    "ZE",
                    "ZF",
                    "ZH",
                    "ZI",
                    "ZJ",
                    "ZK",
                    "ZL",
                    "ZN",
                    "ZO",
                    "ZP",
                    "ZQ",
                    "ZR",
                    "ZS",
                    "ZT",
                    "ZU",
                    "ZV",
                    "ZW",
                    "ZX",
                    "ZY",
                    "TRN",
                    "TCE",
                    "TCO",
                    "UUID"
                  ]
                },
                "type": {
                  "type": "string",
                  "description": "Type values such as CLIENT_REFERENCE , CP, CS etc."
                },
                "value": {
                  "type": "string",
                  "description": "Actual value of reference code."
                }
              }
            },
            "description": "If customer has more than one reference number e.g. primary order number , secondary order number."
          },
          "additionalServices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Service code."
                },
                "name": {
                  "type": "string",
                  "description": "Service name."
                },
                "description": {
                  "type": "string",
                  "description": "Service description."
                },
                "quantity": {
                  "type": "integer",
                  "description": "Service quantity."
                },
                "unitOfMeasure,": {
                  "type": "string",
                  "description": "Unit of measure."
                }
              },
              "required": [
                "Code",
                "Name"
              ]
            },
            "description": "Additional service required for this order."
          },
          "stops": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "addressInformations ": {
                  "type": "object",
                  "properties": {
                    "addressLine1": {
                      "type": "string",
                      "description": "Address line 1 of stop location."
                    },
                    "addressLine2": {
                      "type": "string",
                      "description": "Address line 2 of stop location."
                    },
                    "cityName": {
                      "type": "string",
                      "description": "City name belongs to stop location."
                    },
                    "stateCode": {
                      "type": "string",
                      "description": "State code of the stop location."
                    },
                    "country": {
                      "type": "string",
                      "description": "Country belongs to stop location."
                    },
                    "zipCode": {
                      "type": "string",
                      "description": "Postal Code."
                    }
                  },
                  "required": [
                    "cityName",
                    "country",
                    "stateCode",
                    "zipCode"
                  ]
                },
                "type": {
                  "type": "string",
                  "description": "Type of stop.",
                  "enum": [ "PICKUP", "INTERMEDIATE", "DELIVERY" ]
                },
                "scheduledTimeFrom": {
                  "type": "string",
                  "description": "The earliest time by which the service provider can reach the stop. ISO8601 UTC date-time format required"
                },
                "scheduledTimeTo": {
                  "type": "string",
                  "description": "The Latest time by which the service provider can reach the stop. ISO8601 UTC date-time format required"
                },
                "stopReferenceNumbers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "typeCode": {
                        "type": "string",
                        "description": "Stop Reference Type code."
                      },
                      "value": {
                        "type": "string",
                        "description": "Actual value of stop reference code."
                      }
                    }
                  },
                  "description": "The collection of reference numbers associated with this stop, its type is same as order reference object."
                },
                "sequenceNo": {
                  "type": "integer",
                  "description": "Stop sequence number, required Required only if multi stop quote request."
                }
              }
            },
            "description": "Stops information for this Order including origin and destination.",
            "required": [
              "addressInformations",
              "type"
            ]
          },
          "requestedDeliveryDate": {
            "type": "string",
            "description": "Requested delivery date of order. ISO8601 UTC date-time format required"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "itemDescription": {
                  "type": "string",
                  "description": "Item's description."
                },
                "itemNumber": {
                  "type": "string",
                  "description": "Item's number."
                },
                "units": {
                  "type": "integer",
                  "description": "Number of units."
                },
                "unitTypeCode": {
                  "type": "string",
                  "description": "Item's unit type.",
                  "enum": [
                    "ACCE",
                    "DRUM",
                    "SKIDS",
                    "ATTCH",
                    "ENVE",
                    "SLIP",
                    "BAGS",
                    "FEET",
                    "SPRS",
                    "BALE",
                    "FIRK",
                    "TOTE",
                    "BASK",
                    "GYLD",
                    "TRKL",
                    "BHDS",
                    "GAYL",
                    "TRLR",
                    "BNDL",
                    "KEGS",
                    "TRNK",
                    "BOXES",
                    "LOOS",
                    "TRAY",
                    "BRRL",
                    "OCTA",
                    "TUBE",
                    "BUCK",
                    "PACK",
                    "UNIT",
                    "CARB",
                    "PAIL",
                    "UNPK",
                    "CASES",
                    "PIEC",
                    "VEH",
                    "CASE",
                    "PALLETS",
                    "BINS",
                    "CHST",
                    "PLTS",
                    "COIL",
                    "RACK",
                    "CARTONS",
                    "RACKS",
                    "CRTS",
                    "REEL",
                    "CTN",
                    "ROLL",
                    "CYLS",
                    "SKID"
                  ]
                },
                "packageUnits": {
                  "type": "integer",
                  "description": "Number of packages."
                },
                "packageTypeCode": {
                  "type": "string",
                  "description": "Package type.",
                  "enum": [
                    "ACCE",
                    "DRUM",
                    "SKIDS",
                    "ATTCH",
                    "ENVE",
                    "SLIP",
                    "BAGS",
                    "FEET",
                    "SPRS",
                    "BALE",
                    "FIRK",
                    "TOTE",
                    "BASK",
                    "GYLD",
                    "TRKL",
                    "BHDS",
                    "GAYL",
                    "TRLR",
                    "BNDL",
                    "KEGS",
                    "TRNK",
                    "BOXES",
                    "LOOS",
                    "TRAY",
                    "BRRL",
                    "OCTA",
                    "TUBE",
                    "BUCK",
                    "PACK",
                    "UNIT",
                    "CARB",
                    "PAIL",
                    "UNPK",
                    "CASES",
                    "PIEC",
                    "VEH",
                    "CASE",
                    "PALLETS",
                    "BINS",
                    "CHST",
                    "PLTS",
                    "COIL",
                    "RACK",
                    "CARTONS",
                    "RACKS",
                    "CRTS",
                    "REEL",
                    "CTN",
                    "ROLL",
                    "CYLS",
                    "SKID"
                  ]
                },
                "weight": {
                  "type": "integer",
                  "description": "Item's weight."
                },
                "weightUomCode": {
                  "type": "string",
                  "description": "Weight- Unit of measure.",
                  "enum": [ "KG", "LB" ]
                },
                "height": {
                  "type": "number",
                  "description": "Item's height."

                },
                "heightUomCode": {
                  "type": "string",
                  "description": "Height- Unit of measure.",
                  "enum": [ "CM", "IN", "FT" ]
                },
                "length": {
                  "type": "number",
                  "description": "Item's length."
                },
                "lengthUomCode": {
                  "type": "string",
                  "description": "Length - Unit of measure.",
                  "enum": [ "CM", "IN", "FT" ]
                },
                "width": {
                  "type": "integer",
                  "description": "Item's width."
                },
                "widthUomCode": {
                  "type": "string",
                  "description": "Width - Unit of measure.",
                  "enum": [ "CM", "IN", "FT" ]
                },
                "volume": {
                  "type": "number",
                  "description": "Item's volume."
                },
                "volumeUomCode": {
                  "type": "string",
                  "description": "Volume - Unit of measure.",
                  "enum": [ "CUCM", "CUIN", "CUFT" ]
                },
                "classCode": {
                  "type": "string",
                  "description": "This code represents product freight class.."
                },
                "nmfcCode": {
                  "type": "string",
                  "description": "Commodity or type of product is assigned a National Motor Freight Classification"
                },
                "declaredValue": {
                  "type": "number",
                  "description": "Item's declared amount value."
                },
                "declaredValueCurrencyCode": {
                  "type": "string",
                  "description": "Item's declared value currency code."
                },
                "itemPrice": {
                  "type": "number",
                  "description": "Item's price value."
                },
                "itemPriceCurrencyCode": {
                  "type": "string",
                  "description": "Item's price currency code."
                },
                "isTemperatureControlled": {
                  "type": "boolean",
                  "description": "Whether item is temperature controlled or not."
                },
                "temperatureInformation": {
                  "type": "object",
                  "properties": {
                    "high": {
                      "type": "string",
                      "description": "High temperature."
                    },
                    "low": {
                      "type": "string",
                      "description": "Low temperature."
                    },
                    "highUom": {
                      "type": "string",
                      "description": "High temperature Unit of measure."
                    },
                    "lowUom": {
                      "type": "string",
                      "description": "Low temperature Unit of measure."
                    }
                  },
                  "description": "Temperature information of the Item."
                },
                "isHazmat": {
                  "type": "boolean",
                  "description": "Whether item is hazardous or not."
                },
                "hazardousItemInfo": {
                  "type": "object",
                  "properties": {
                    "unNumber": {
                      "type": "integer",
                      "description": "Identification number to identify dangerous goods."
                    },
                    "packingGroup": {
                      "type": "integer",
                      "description": "Packaging group."
                    },
                    "receptacleSize": {
                      "type": "integer",
                      "description": "Receptacle size."
                    },
                    "hazardousClass": {
                      "type": "string",
                      "description": "Hazardous class."
                    },
                    "numberofReceptacles": {
                      "type": "integer",
                      "description": "Number of receptacles."
                    },
                    "unitofMeasure": {
                      "type": "string",
                      "description": "Unit of measure."

                    },
                    "containerType": {
                      "type": "string",
                      "description": "Container type."
                    },
                    "hazardousDescription": {
                      "type": "string",
                      "description": "Hazardous description."
                    },
                    "hazardousPhoneNumber": {
                      "type": "string",
                      "description": "Phone number."
                    },
                    "shippingName": {
                      "type": "string",
                      "description": "Shipping Name."
                    }
                  },
                  "description": "Hazardous information if the item is Hazardous material (IsHazmat = true)"
                },
                "htsCode": {
                  "type": "string",
                  "description": "HTS codes are used to classify and define internationally traded goods"
                },
                "sku": {
                  "type": "string",
                  "description": "Stock-keeping unit or SKU refers to a specific item stored to a specific location."
                },
                "purchaseOrderNumber": {
                  "type": "string",
                  "description": "Purchase Order Number."
                },
                "itemReferenceNumbers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Custom reference code."
                      },
                      "type": {
                        "type": "string",
                        "description": "Type values such as CLIENT_REFERENCE , CP, CS etc.",
                        "enum": [
                          "CP",
                          "CS",
                          "NON_OTM_USER_EMAIL",
                          "INCO_TERM",
                          "SHIPPING_SERVICE",
                          "SHIPPING_SERVICE",
                          "PUBLIC_CG",
                          "CG",
                          "NAMED_LOCATION",
                          "SHIPPER_PICKUP_NUM",
                          "CLIENT_REFERENCE",
                          "NON_MANAGED",
                          "ZWF_REPORTED",
                          "ZWF_STD_REASON",
                          "ZWF_XPD_REASON",
                          "ZWF_XPD",
                          "BUS_UNIT",
                          "PRO",
                          "SHIPPER_BOL",
                          "HOUSE_BOL",
                          "SEAL_NUMBER",
                          "OVERSIZE"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Actual value of reference code."
                      }
                    }
                  },
                  "description": "This object holds the collection of reference numbers associated with this items."
                }
              },
              "required": [ "itemCode" ]
            },
            "description": "Item Details."
          },
          "partnerIdentifierCode": {
            "type": "string",
            "description": "Partner identifier code used for uniquely identify the partner."
          },
          "userName": {
            "type": "string",
            "description": "User's Name."
          }
        },
        "required": [
          "partnerIdentifierCode",
          "transportationMode",
          "applicationSource",
          "stops",
          "items"
        ],
        "example": {
          "orderDate": "2020-10-12T12:08:09.31",
          "transportationMode": "SEA",
          "applicationSource": "2",
          "orderNumber": "HouseBill676897",
          "OrderType":"ForwardingShipment",
          "orderNotes": [
            {
              "type": "GoodsDescription",
              "value": "test description"
            }
          ],
          "orderReferenceNumbers": [
            {
              "type": "CREATEDBY",
              "value": "FASANGMKE"
            }
          ],
          "additionalServices": [
            {
              "name": "ServiceLevel",
              "code": "5"
            },
            {
              "name": "InsuranceType",
              "code": "test"
            }
          ],
          "stops": [
            {
              "addressInformation": {
                "addressLine1": "7150 BRYAN DAIRY ROAD",
                "addressLine2": "",
                "cityName": "KENMORE",
                "countryCode": "USA",
                "stateCode": "WA",
                "zipCode": "98028"
              },
              "type": 1,
              "scheduledTimeFrom": "2020-02-20T08:00:00",
              "scheduledTimeTo": "2020-02-20T08:00:00",
              "sequenceNo": 1,
              "stopReferenceNumbers": [
                {
                  "code": "HITPRODEN",
                  "type": "Shipper",
                  "value": "ABC Corporation"
                },
                {
                  "type": "ShipperReference",
                  "value": "TestShipperReference"
                },
                {
                  "type": "Instructions",
                  "value": "testPickupInstructions"
                }
              ]
            },
            {
              "addressInformation": {
                "addressLine1": "7150 BRYAN DAIRY ROAD",
                "addressLine2": "",
                "cityName": "KENMORE",
                "countryCode": "USA",
                "stateCode": "WA",
                "zipCode": "98028"
              },
              "type": 3,
              "sequenceNo": 3,
              "scheduledTimeFrom": "2020-02-20T08:00:00",
              "scheduledTimeTo": "2020-10-20T08:00:00",
              "stopReferenceNumbers": [
                {
                  "code": "FASANGMKE",
                  "type": "Consignee",
                  "value": "Generic Customer Enterprises"
                },
                {
                  "type": "ConsigneeReference",
                  "value": "TestConsigneeReference"
                },
                {
                  "type": "Instructions",
                  "value": "testPickupInstructions"
                },
                {
                  "code": "FASANGMKE",
                  "type": "Customer",
                  "value": "Generic Customer Enterprises"
                }
              ]
            },
            {
              "addressInformation": {
                "addressLine1": "7150 BRYAN DAIRY ROAD",
                "addressLine2": "",
                "cityName": "KENMORE",
                "countryCode": "USA",
                "stateCode": "WA",
                "zipCode": "98028"
              },
              "sequenceNo": 2,
              "type": 2,
              "scheduledTimeFrom": "2020-02-20T08:00:00",
              "scheduledTimeTo": "2020-10-20T08:00:00",
              "stopReferenceNumbers": [
                {
                  "code": "FASANGMKE",
                  "type": "Customer",
                  "value": "Generic Customer Enterprises"
                }
              ]
            }
          ],
          "requestedDeliveryDate": "2020-02-27T15:00:00",
          "items": [
            {
              "itemNumber": "100056006",
              "itemDescription": "CONCRETE BUCKET 1\/2 YD",
              "units": 10,
              "unitTypeCode": "EACH",
              "packageUnits": 2,
              "packageTypeCode": "BAG",
              "weight": 330,
              "weightUomCode": "LB",
              "height": 99.99,
              "heightUomCode": "IN",
              "length": 99.99,
              "lengthUomCode": "IN",
              "width": 150,
              "widthUomCode": "IN",
              "declaredValue": 2285.88,
              "declaredValueCurrencyCode": "USD",
              "volume": 868.03,
              "volumeUomCode": "CUFT",
              "itemPrice": 20.5,
              "itemPriceCurrencyCode": "USD",
              "isTemperatureControlled": false,
              "isHazmat": false,
              "hazardousItemInfo": {
                "unnumber": 0,
                "packingGroup": 0,
                "receptacleSize": 0,
                "hazardousClass": null,
                "numberofReceptacles": 0,
                "unitofMeasure": null,
                "containerType": null,
                "hazardousDescription": null,
                "hazardousPhoneNumber": null,
                "shippingName": null
              },
              "htscode": null,
              "sku": "Sku00001",
              "purchaseOrderNumber": null,
              "itemReferenceNumbers": [
                {
                  "code": "1001",
                  "type": "CommodityCode"
                },
                {
                  "value": "c60",
                  "type": "FreightClass"
                },
                {
                  "value": "60",
                  "type": "POQuantity"
                }
              ]
            }
          ],
          "partnerIdentifierCode": "10-1-TESTCHN2"
        }
      },
      "convertquoteresponse": {
        "properties": {
          "reRatedQuoteResponse": {
            "$ref": "#/components/schemas/commonquoteresponse"
          },
          "orderId": {
            "type": "integer",
            "description": "Order Id.",
            "example": "70661"
          },
          "proNumber": {
            "type": "string",
            "description": "FO Order Code, It is provided for TL orders."
          },
          "bolNumber": {
            "type": "string",
            "description": "Bill of lading (BOL) number, It is provided for LTL orders."
          },
          "statusCode": {
            "type": "string",
            "description": "Status Code value.",
            "example": "200"
          },
          "message": {
            "type": "string",
            "description": "Message details.",
            "example": "Order created successfully!"
          },
          "context": {
            "type": "array",
            "description": "context details.",
            "example": "null"
          }
        },
        "example": {
          "orderId": 1095485,
          "proNumber": null,
          "bolNumber": "GALNY00010",
          "statusCode": 200,
          "message": "Order has been successfully created",
          "context": null
        }
      },
      "commonquoteresponse": {
        "type": "object",
        "properties": {
          "errorDetails": { "$ref": "#/components/schemas/errorDetails" },
          "masterQuoteId": {
            "type": "integer",
            "description": "Unique Identifier for tracking Quote Request."
          },
          "statusCode": {
            "type": "integer",
            "description": "Success http response code 200.",
            "example": "200"
          },
          "message": {
            "type": "string",
            "description": "Success message for generated Quote.",
            "example": "Quote creation succeeded! MasterQuoteId: 51490."
          },
          "priceSearchResponse": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "mode": {
                  "type": "string",
                  "description": "This  is to identify, specific price search response is for which transportation mode."
                },
                "lowestPrice": {
                  "type": "number",
                  "description": "The lowest price amount of quote for this specific mode."
                },
                "quoteDetails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "quoteId": {
                        "type": "integer",
                        "description": "Unique Identifier for Quote."
                      },
                      "carrierCode": {
                        "type": "string",
                        "description": "Code used to uniquely identify the carrier."
                      },
                      "carrierName": {
                        "type": "string",
                        "description": "Name of the carrier."
                      },
                      "serviceLevel": {
                        "type": "string",
                        "description": "Service level.",
                        "enum": [ "Single", "Team", "LTL" ]
                      },
                      "movementType": {
                        "type": "string",
                        "description": "Type of Movement."
                      },
                      "estimatedTransitTime": {
                        "type": "integer",
                        "description": "Estimated transit time in days."
                      },
                      "accessorials": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "accessorialCode": {
                              "type": "string",
                              "description": "Accessorial Code."
                            },
                            "accessorialName": {
                              "type": "string",
                              "description": "Accessorial Name."
                            },
                            "accessorialCost": {
                              "type": "number",
                              "description": "Accessorial Cost ."
                            }
                          }
                        },
                        "description": "This is an array which contains the additional services and charges."
                      },
                      "rateList": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "isOptional": {
                              "type": "boolean",
                              "description": "Is optional."
                            },
                            "currencyCode": {
                              "type": "string",
                              "description": "Currency Code for this Rate."
                            },
                            "code": {
                              "type": "string",
                              "description": "Rate Code."
                            },
                            "typeCode": {
                              "type": "string",
                              "description": "Type Code for this Rate."
                            },
                            "cost": {
                              "type": "string",
                              "description": "Cost."
                            }
                          }
                        },
                        "description": "This is an array which contains the rate split-up."
                      },
                      "legs": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "stops": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "addressInformations ": {
                                    "type": "object",
                                    "properties": {
                                      "locationId": {
                                        "type": "string",
                                        "description": "Id of location."
                                      },
                                      "locationName": {
                                        "type": "string",
                                        "description": "Name of location."
                                      },
                                      "addressLine1": {
                                        "type": "string",
                                        "description": "Address line 1 of stop location."
                                      },
                                      "addressLine2": {
                                        "type": "string",
                                        "description": "Address line 2 of stop location."
                                      },
                                      "cityName": {
                                        "type": "string",
                                        "description": "City name belongs to stop location."
                                      },
                                      "stateCode": {
                                        "type": "string",
                                        "description": "State code of the stop location."
                                      },
                                      "country": {
                                        "type": "string",
                                        "description": "Country belongs to stop location."
                                      },
                                      "zipCode": {
                                        "type": "string",
                                        "description": "Postal Code."
                                      }
                                    },
                                    "required": [
                                      "cityName",
                                      "country",
                                      "stateCode",
                                      "zipCode"
                                    ]
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Type of stop.",
                                    "enum": [ "PICKUP", "INTERMEDIATE", "DELIVERY" ]
                                  },
                                  "scheduledTimeFrom": {
                                    "type": "string",
                                    "description": "The earliest time by which the service provider can reach the stop. ISO8601 UTC date-time format required"
                                  },
                                  "scheduledTimeTo": {
                                    "type": "string",
                                    "description": "The Latest time by which the service provider can reach the stop. ISO8601 UTC date-time format required"
                                  },
                                  "stopContactInformations": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "firstName": {
                                          "type": "string",
                                          "description": "First name of contact person."
                                        },
                                        "lastName": {
                                          "type": "string",
                                          "description": "Last name of contact person."
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "Email for communication."
                                        },
                                        "phoneNumbers": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "Type": {
                                                "type": "string",
                                                "description": "Phone number types.",
                                                "enum": [ "MOBILE", "WORK", "HOME" ]
                                              },
                                              "number": {
                                                "type": "string",
                                                "description": "Contact number."
                                              },
                                              "isPrimary": {
                                                "type": "boolean",
                                                "description": "Is contact primary information."
                                              }
                                            }
                                          },
                                          "description": "Primary and alternate numbers for communication."
                                        },
                                        "title": {
                                          "type": "string",
                                          "description": "Title of contact person."
                                        },
                                        "isPrimary": {
                                          "type": "boolean",
                                          "description": "Is it the primary contact information?."
                                        }
                                      }
                                    },
                                    "description": "Contact Information for each stop."
                                  },
                                  "specialRequirement": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "code": "string",
                                          "description": "Special requirement type."
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "Special requirements value."
                                        }
                                      }
                                    },
                                    "description": "The array of special requirements for this stop."
                                  },
                                  "stopReferenceNumbers": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "typeCode": {
                                          "type": "string",
                                          "description": "Stop Reference Type code."
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "Actual value of stop reference code."
                                        }
                                      }
                                    },
                                    "description": "The collection of reference numbers associated with this stop, its type is same as order reference object."
                                  },
                                  "note": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "description": "Note's type."
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "Note's value."
                                        }
                                      }
                                    }
                                  },
                                  "sequenceNo": {
                                    "type": "integer",
                                    "description": "Stop sequence number, required Required only if multi stop quote request."
                                  }
                                }
                              },
                              "description": "Stops information for this Quote including origin and destination.",
                              "required": [
                                "addressInformations",
                                "type"
                              ]
                            }
                          }
                        },
                        "description": "This is an array which holds the specific route information of this applicable quote price. "
                      },
                      "accessorialsTotalCost": {
                        "type": "number",
                        "description": "Accessorial's Total Cost."
                      },
                      "subTotal": {
                        "type": "number",
                        "description": "Sub Total."
                      },
                      "totalCost": {
                        "type": "number",
                        "description": "Total Cost."
                      },
                      "isNmfcCarrier": {
                        "type": "boolean",
                        "description": "Boolean flag to represent its an NMFC carrier."
                      },
                      "isContractRate": {
                        "type": "boolean",
                        "description": "Boolean flag to represent this quote is contract rate."
                      },
                      "currencyCode": {
                        "type": "string",
                        "description": "Currency Code."
                      },
                      "expiresOn": {
                        "type": "string",
                        "description": "Quote expiry date."
                      },
                      "createdOn": {
                        "type": "string",
                        "description": "Quote created date."
                      }
                    }
                  },
                  "description": "This is an array of object which holds the list of quote details."
                },
                "lowestPriceQuote": {
                  "type": "object",
                  "properties": {
                    "quoteId": {
                      "type": "integer",
                      "description": "Unique Identifier for Quote."
                    },
                    "carrierCode": {
                      "type": "string",
                      "description": "Carrier Code."
                    },
                    "carrierName": {
                      "type": "string",
                      "description": "Carrier Name."
                    },
                    "estimatedTransitTime": {
                      "type": "integer",
                      "description": "Estimated transit time in days."
                    },
                    "lineHaul": {
                      "type": "number",
                      "description": "Line Haul."
                    },
                    "fsc": {
                      "type": "number",
                      "description": "FSC."
                    },
                    "legs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "stops": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "addressInformations ": {
                                  "type": "object",
                                  "properties": {
                                    "locationId": {
                                      "type": "string",
                                      "description": "Id of location."
                                    },
                                    "locationName": {
                                      "type": "string",
                                      "description": "Name of location."
                                    },
                                    "addressLine1": {
                                      "type": "string",
                                      "description": "Address line 1 of stop location."
                                    },
                                    "addressLine2": {
                                      "type": "string",
                                      "description": "Address line 2 of stop location."
                                    },
                                    "cityName": {
                                      "type": "string",
                                      "description": "City name belongs to stop location."
                                    },
                                    "stateCode": {
                                      "type": "string",
                                      "description": "State code of the stop location."
                                    },
                                    "country": {
                                      "type": "string",
                                      "description": "Country belongs to stop location."
                                    },
                                    "zipCode": {
                                      "type": "string",
                                      "description": "Postal Code."
                                    }
                                  },
                                  "required": [
                                    "cityName",
                                    "country",
                                    "stateCode",
                                    "zipCode"
                                  ]
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Type of stop.",
                                  "enum": [ "PICKUP", "INTERMEDIATE", "DELIVERY" ]
                                },
                                "scheduledTimeFrom": {
                                  "type": "string",
                                  "description": "The earliest time by which the service provider can reach the stop. ISO8601 UTC date-time format required"
                                },
                                "scheduledTimeTo": {
                                  "type": "string",
                                  "description": "The Latest time by which the service provider can reach the stop. ISO8601 UTC date-time format required"
                                },
                                "stopContactInformations": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "firstName": {
                                        "type": "string",
                                        "description": "First name of contact person."
                                      },
                                      "lastName": {
                                        "type": "string",
                                        "description": "Last name of contact person."
                                      },
                                      "email": {
                                        "type": "string",
                                        "description": "Email for communication."
                                      },
                                      "phoneNumbers": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "Type": {
                                              "type": "string",
                                              "description": "Phone number types.",
                                              "enum": [ "MOBILE", "WORK", "HOME" ]
                                            },
                                            "number": {
                                              "type": "string",
                                              "description": "Contact number."
                                            },
                                            "isPrimary": {
                                              "type": "boolean",
                                              "description": "Is contact primary information."
                                            }
                                          }
                                        },
                                        "description": "Primary and alternate numbers for communication."
                                      },
                                      "title": {
                                        "type": "string",
                                        "description": "Title of contact person."
                                      },
                                      "isPrimary": {
                                        "type": "boolean",
                                        "description": "Is it the primary contact information?."
                                      }
                                    }
                                  },
                                  "description": "Contact Information for each stop."
                                },
                                "specialRequirement": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "code": "string",
                                        "description": "Special requirement type."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Special requirements value."
                                      }
                                    }
                                  },
                                  "description": "The array of special requirements for this stop."
                                },
                                "stopReferenceNumbers": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "typeCode": {
                                        "type": "string",
                                        "description": "Stop Reference Type code."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Actual value of stop reference code."
                                      }
                                    }
                                  },
                                  "description": "The collection of reference numbers associated with this stop, its type is same as order reference object."
                                },
                                "note": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Note's type."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Note's value."
                                      }
                                    }
                                  }
                                },
                                "sequenceNo": {
                                  "type": "integer",
                                  "description": "Stop sequence number, required Required only if multi stop quote request."
                                }
                              }
                            },
                            "description": "Stops information for this Quote including origin and destination.",
                            "required": [
                              "addressInformations",
                              "type"
                            ]
                          }
                        }
                      },
                      "description": "This is an array which holds the specific route information of this applicable quote price. "
                    },
                    "accessorials": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Accessorial Code."
                          },
                          "name": {
                            "type": "string",
                            "description": "Accessorial Name."
                          },
                          "cost": {
                            "type": "number",
                            "description": "Accessorial Cost ."
                          }
                        }
                      },
                      "description": "This is an array which contains the additional services and charges."
                    },
                    "accessorialsTotalCost": {
                      "type": "number",
                      "description": "Accessorial's Total Cost."
                    },
                    "subTotal": {
                      "type": "number",
                      "description": "Sub Total."
                    },
                    "totalCost": {
                      "type": "number",
                      "description": "Total Cost."
                    },
                    "isNmfcCarrier": {
                      "type": "boolean",
                      "description": "Boolean flag to represent its an NMFC carrier."
                    }
                  }
                },
                "lowestGuaranteedQuotePrice": {
                  "type": "object",
                  "properties": {
                    "quoteId": {
                      "type": "integer",
                      "description": "Unique Identifier for Quote."
                    },
                    "carrierCode": {
                      "type": "string",
                      "description": "Carrier Code."
                    },
                    "carrierName": {
                      "type": "string",
                      "description": "Carrier Name."
                    },
                    "estimatedTransitTime": {
                      "type": "integer",
                      "description": "Estimated transit time in days."
                    },
                    "lineHaul": {
                      "type": "number",
                      "description": "Line Haul."
                    },
                    "fsc": {
                      "type": "number",
                      "description": "FSC."
                    },
                    "legs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "stops": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "addressInformations ": {
                                  "type": "object",
                                  "properties": {
                                    "locationId": {
                                      "type": "string",
                                      "description": "Id of location."
                                    },
                                    "locationName": {
                                      "type": "string",
                                      "description": "Name of location."
                                    },
                                    "addressLine1": {
                                      "type": "string",
                                      "description": "Address line 1 of stop location."
                                    },
                                    "addressLine2": {
                                      "type": "string",
                                      "description": "Address line 2 of stop location."
                                    },
                                    "cityName": {
                                      "type": "string",
                                      "description": "City name belongs to stop location."
                                    },
                                    "stateCode": {
                                      "type": "string",
                                      "description": "State code of the stop location."
                                    },
                                    "country": {
                                      "type": "string",
                                      "description": "Country belongs to stop location."
                                    },
                                    "zipCode": {
                                      "type": "string",
                                      "description": "Postal Code."
                                    }
                                  },
                                  "required": [
                                    "cityName",
                                    "country",
                                    "stateCode",
                                    "zipCode"
                                  ]
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Type of stop.",
                                  "enum": [ "PICKUP", "INTERMEDIATE", "DELIVERY" ]
                                },
                                "scheduledTimeFrom": {
                                  "type": "string",
                                  "description": "The earliest time by which the service provider can reach the stop. ISO8601 UTC date-time format required"
                                },
                                "scheduledTimeTo": {
                                  "type": "string",
                                  "description": "The Latest time by which the service provider can reach the stop. ISO8601 UTC date-time format required"
                                },
                                "stopContactInformations": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "firstName": {
                                        "type": "string",
                                        "description": "First name of contact person."
                                      },
                                      "lastName": {
                                        "type": "string",
                                        "description": "Last name of contact person."
                                      },
                                      "email": {
                                        "type": "string",
                                        "description": "Email for communication."
                                      },
                                      "phoneNumbers": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "Type": {
                                              "type": "string",
                                              "description": "Phone number types.",
                                              "enum": [ "MOBILE", "WORK", "HOME" ]
                                            },
                                            "number": {
                                              "type": "string",
                                              "description": "Contact number."
                                            },
                                            "isPrimary": {
                                              "type": "boolean",
                                              "description": "Is contact primary information."
                                            }
                                          }
                                        },
                                        "description": "Primary and alternate numbers for communication."
                                      },
                                      "title": {
                                        "type": "string",
                                        "description": "Title of contact person."
                                      },
                                      "isPrimary": {
                                        "type": "boolean",
                                        "description": "Is it the primary contact information?."
                                      }
                                    }
                                  },
                                  "description": "Contact Information for each stop."
                                },
                                "specialRequirement": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "code": "string",
                                        "description": "Special requirement type."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Special requirements value."
                                      }
                                    }
                                  },
                                  "description": "The array of special requirements for this stop."
                                },
                                "stopReferenceNumbers": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "typeCode": {
                                        "type": "string",
                                        "description": "Stop Reference Type code."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Actual value of stop reference code."
                                      }
                                    }
                                  },
                                  "description": "The collection of reference numbers associated with this stop, its type is same as order reference object."
                                },
                                "note": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Note's type."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Note's value."
                                      }
                                    }
                                  }
                                },
                                "sequenceNo": {
                                  "type": "integer",
                                  "description": "Stop sequence number, required Required only if multi stop quote request."
                                }
                              }
                            },
                            "description": "Stops information for this Quote including origin and destination.",
                            "required": [
                              "addressInformations",
                              "type"
                            ]
                          }
                        }
                      },
                      "description": "This is an array which holds the specific route information of this applicable quote price. "
                    },
                    "accessorials": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Accessorial Code."
                          },
                          "name": {
                            "type": "string",
                            "description": "Accessorial Name."
                          },
                          "cost": {
                            "type": "number",
                            "description": "Accessorial Cost ."
                          }
                        }
                      },
                      "description": "This is an array which contains the additional services and charges."
                    },
                    "accessorialsTotalCost": {
                      "type": "number",
                      "description": "Accessorial's Total Cost."
                    },
                    "subTotal": {
                      "type": "number",
                      "description": "Sub Total."
                    },
                    "totalCost": {
                      "type": "number",
                      "description": "Total Cost."
                    },
                    "isNmfcCarrier": {
                      "type": "boolean",
                      "description": "Boolean flag to represent its an NMFC carrier."
                    }
                  }
                },
                "bestDealQuotePrice": {
                  "type": "object",
                  "properties": {
                    "quoteId": {
                      "type": "integer",
                      "description": "Unique Identifier for Quote."
                    },
                    "carrierCode": {
                      "type": "string",
                      "description": "Carrier Code."
                    },
                    "carrierName": {
                      "type": "string",
                      "description": "Carrier Name."
                    },
                    "estimatedTransitTime": {
                      "type": "integer",
                      "description": "Estimated transit time in days."
                    },
                    "lineHaul": {
                      "type": "number",
                      "description": "Line Haul."
                    },
                    "fsc": {
                      "type": "number",
                      "description": "FSC."
                    },
                    "legs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "stops": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "addressInformations ": {
                                  "type": "object",
                                  "properties": {
                                    "locationId": {
                                      "type": "string",
                                      "description": "Id of location."
                                    },
                                    "locationName": {
                                      "type": "string",
                                      "description": "Name of location."
                                    },
                                    "addressLine1": {
                                      "type": "string",
                                      "description": "Address line 1 of stop location."
                                    },
                                    "addressLine2": {
                                      "type": "string",
                                      "description": "Address line 2 of stop location."
                                    },
                                    "cityName": {
                                      "type": "string",
                                      "description": "City name belongs to stop location."
                                    },
                                    "stateCode": {
                                      "type": "string",
                                      "description": "State code of the stop location."
                                    },
                                    "country": {
                                      "type": "string",
                                      "description": "Country belongs to stop location."
                                    },
                                    "zipCode": {
                                      "type": "string",
                                      "description": "Postal Code."
                                    }
                                  },
                                  "required": [
                                    "cityName",
                                    "country",
                                    "stateCode",
                                    "zipCode"
                                  ]
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Type of stop.",
                                  "enum": [ "PICKUP", "INTERMEDIATE", "DELIVERY" ]
                                },
                                "scheduledTimeFrom": {
                                  "type": "string",
                                  "description": "The earliest time by which the service provider can reach the stop. ISO8601 UTC date-time format required"
                                },
                                "scheduledTimeTo": {
                                  "type": "string",
                                  "description": "The Latest time by which the service provider can reach the stop. ISO8601 UTC date-time format required"
                                },
                                "stopContactInformations": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "firstName": {
                                        "type": "string",
                                        "description": "First name of contact person."
                                      },
                                      "lastName": {
                                        "type": "string",
                                        "description": "Last name of contact person."
                                      },
                                      "email": {
                                        "type": "string",
                                        "description": "Email for communication."
                                      },
                                      "phoneNumbers": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "Type": {
                                              "type": "string",
                                              "description": "Phone number types.",
                                              "enum": [ "MOBILE", "WORK", "HOME" ]
                                            },
                                            "number": {
                                              "type": "string",
                                              "description": "Contact number."
                                            },
                                            "isPrimary": {
                                              "type": "boolean",
                                              "description": "Is contact primary information."
                                            }
                                          }
                                        },
                                        "description": "Primary and alternate numbers for communication."
                                      },
                                      "title": {
                                        "type": "string",
                                        "description": "Title of contact person."
                                      },
                                      "isPrimary": {
                                        "type": "boolean",
                                        "description": "Is it the primary contact information?."
                                      }
                                    }
                                  },
                                  "description": "Contact Information for each stop."
                                },
                                "specialRequirement": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "code": "string",
                                        "description": "Special requirement type."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Special requirements value."
                                      }
                                    }
                                  },
                                  "description": "The array of special requirements for this stop."
                                },
                                "stopReferenceNumbers": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "typeCode": {
                                        "type": "string",
                                        "description": "Stop Reference Type code."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Actual value of stop reference code."
                                      }
                                    }
                                  },
                                  "description": "The collection of reference numbers associated with this stop, its type is same as order reference object."
                                },
                                "note": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Note's type."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Note's value."
                                      }
                                    }
                                  }
                                },
                                "sequenceNo": {
                                  "type": "integer",
                                  "description": "Stop sequence number, required Required only if multi stop quote request."
                                }
                              }
                            },
                            "description": "Stops information for this Quote including origin and destination.",
                            "required": [
                              "addressInformations",
                              "type"
                            ]
                          }
                        }
                      },
                      "description": "This is an array which holds the specific route information of this applicable quote price. "
                    },
                    "accessorials": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Code": {
                            "type": "string",
                            "description": "Accessorial Code."
                          },
                          "name": {
                            "type": "string",
                            "description": "Accessorial Name."
                          },
                          "cost": {
                            "type": "number",
                            "description": "Accessorial Cost ."
                          }
                        }
                      },
                      "description": "This is an array which contains the additional services and charges."
                    },
                    "accessorialsTotalCost": {
                      "type": "number",
                      "description": "Accessorial's Total Cost."
                    },
                    "subTotal": {
                      "type": "number",
                      "description": "Sub Total."
                    },
                    "totalCost": {
                      "type": "number",
                      "description": "Total Cost."
                    },
                    "isNmfcCarrier": {
                      "type": "boolean",
                      "description": "Boolean flag to represent its an NMFC carrier."
                    }
                  }
                }
              },
              "Description": "It includes the list of quotes details for different modes such as LTL, TL etc."
            }
          }
        },
        "example": {
          "errorDetails": null,
          "masterQuoteId": 40038,
          "statusCode": 200,
          "message": "Quote creation succeeded! MasterQuoteId: 40038.",
          "isRatingCompleted": true,
          "priceSearchResponse": [
            {
              "lowestPrice": 423.11,
              "quoteDetails": [
                {
                  "quoteId": "0000389411",
                  "carrierCode": null,
                  "carrierName": "XPO Logistics Freight, Inc.- Standard and Hazmat",
                  "serviceLevel": "LTL",
                  "movementType": "DIRECT",
                  "estimatedTransitTime": 5,
                  "accessorials": [
                    {
                      "accessorialCode": "RSS",
                      "accessorialName": "State Charge (RSS)",
                      "accessorialCost": 5.0
                    },
                    {
                      "accessorialCode": "HZM",
                      "accessorialName": "Hazardous Material (HZM)",
                      "accessorialCost": 13.5
                    },
                    {
                      "accessorialCode": "RSP",
                      "accessorialName": "Residential Pickup (RSP)",
                      "accessorialCost": 60.0
                    },
                    {
                      "accessorialCode": "LFD",
                      "accessorialName": "Liftgate Delivery (LFD)",
                      "accessorialCost": 75.0
                    },
                    {
                      "accessorialCode": "RSD",
                      "accessorialName": "Residential Delivery (RSD)",
                      "accessorialCost": 60.0
                    }
                  ],
                  "rateList": [
                    {
                      "isOptional": false,
                      "currencyCode": "USD",
                      "code": "LNH",
                      "name": "Line Haul",
                      "typeCode": "F",
                      "cost": 185.52,
                      "unit": null,
                      "unitRate": null
                    },
                    {
                      "isOptional": false,
                      "currencyCode": "USD",
                      "code": "FSF",
                      "name": "Fuel Surcharge",
                      "typeCode": "F",
                      "cost": 24.09,
                      "unit": null,
                      "unitRate": null
                    },
                    {
                      "isOptional": true,
                      "currencyCode": "USD",
                      "code": "AD",
                      "name": "Additional Charge Total",
                      "typeCode": "F",
                      "cost": 213.50,
                      "unit": null,
                      "unitRate": null
                    }
                  ],
                  "legs": null,
                  "accessorialsTotalCost": 213.50,
                  "subTotal": 423.11,
                  "totalCost": 423.11,
                  "isNmfcCarrier": false,
                  "isContractRate": true,
                  "currencyCode": "USD",
                  "expiresOn": null,
                  "createdOn": "2020-07-07T12:25:12.3209099+00:00",
                  "pickUpDate": null,
                  "pickUpDateDisplay": null,
                  "lineHaul": 185.52,
                  "fsc": 24.09,
                  "scac": "CNWY",
                  "totalDistance": 0.0
                },
                {
                  "quoteId": "0000389412",
                  "carrierCode": null,
                  "carrierName": "Roadrunner Transportation Services Inc",
                  "serviceLevel": "LTL",
                  "movementType": "DIRECT",
                  "estimatedTransitTime": 6,
                  "accessorials": [
                    {
                      "accessorialCode": "RSS",
                      "accessorialName": "State Charge (RSS)",
                      "accessorialCost": 12.75
                    },
                    {
                      "accessorialCode": "CHP",
                      "accessorialName": "Church Pickup (CHP)",
                      "accessorialCost": 50.0
                    },
                    {
                      "accessorialCode": "HZM",
                      "accessorialName": "Hazardous Material (HZM)",
                      "accessorialCost": 40.0
                    },
                    {
                      "accessorialCode": "GLHC",
                      "accessorialName": "Linehaul Charge (GLHC)",
                      "accessorialCost": 18.45
                    },
                    {
                      "accessorialCode": "LFD",
                      "accessorialName": "Liftgate Delivery (LFD)",
                      "accessorialCost": 45.0
                    },
                    {
                      "accessorialCode": "RSD",
                      "accessorialName": "Residential Delivery (RSD)",
                      "accessorialCost": 35.0
                    },
                    {
                      "accessorialCode": "RSP",
                      "accessorialName": "Residential Pickup (RSP)",
                      "accessorialCost": 50.0
                    },
                    {
                      "accessorialCode": "GLHC",
                      "accessorialName": "Linehaul Charge (GLHC)",
                      "accessorialCost": 30.0
                    }
                  ],
                  "rateList": [
                    {
                      "isOptional": false,
                      "currencyCode": "USD",
                      "code": "LNH",
                      "name": "Line Haul",
                      "typeCode": "F",
                      "cost": 217.72,
                      "unit": null,
                      "unitRate": null
                    },
                    {
                      "isOptional": false,
                      "currencyCode": "USD",
                      "code": "FSF",
                      "name": "Fuel Surcharge",
                      "typeCode": "F",
                      "cost": 10.89,
                      "unit": null,
                      "unitRate": null
                    },
                    {
                      "isOptional": true,
                      "currencyCode": "USD",
                      "code": "AD",
                      "name": "Additional Charge Total",
                      "typeCode": "F",
                      "cost": 281.20,
                      "unit": null,
                      "unitRate": null
                    }
                  ],
                  "legs": null,
                  "accessorialsTotalCost": 281.20,
                  "subTotal": 509.81,
                  "totalCost": 509.81,
                  "isNmfcCarrier": false,
                  "isContractRate": true,
                  "currencyCode": "USD",
                  "expiresOn": null,
                  "createdOn": "2020-07-07T12:25:12.322908+00:00",
                  "pickUpDate": null,
                  "pickUpDateDisplay": null,
                  "lineHaul": 217.72,
                  "fsc": 10.89,
                  "scac": "RDFS",
                  "totalDistance": 0.0
                },
                {
                  "quoteId": "0000389413",
                  "carrierCode": null,
                  "carrierName": "Saia Motor Freight",
                  "serviceLevel": "LTL",
                  "movementType": "DIRECT",
                  "estimatedTransitTime": 5,
                  "accessorials": [
                    {
                      "accessorialCode": "HZM",
                      "accessorialName": "Hazardous Material (HZM)",
                      "accessorialCost": 15.75
                    },
                    {
                      "accessorialCode": "RSD",
                      "accessorialName": "Residential Delivery (RSD)",
                      "accessorialCost": 73.0
                    },
                    {
                      "accessorialCode": "RSP",
                      "accessorialName": "Residential Pickup (RSP)",
                      "accessorialCost": 73.0
                    },
                    {
                      "accessorialCode": "LFD",
                      "accessorialName": "Liftgate Delivery (LFD)",
                      "accessorialCost": 52.0
                    },
                    {
                      "accessorialCode": "CHP",
                      "accessorialName": "Church Pickup (CHP)",
                      "accessorialCost": 52.0
                    },
                    {
                      "accessorialCode": "RSS",
                      "accessorialName": "State Charge (RSS)",
                      "accessorialCost": 8.5
                    }
                  ],
                  "rateList": [
                    {
                      "isOptional": false,
                      "currencyCode": "USD",
                      "code": "LNH",
                      "name": "Line Haul",
                      "typeCode": "F",
                      "cost": 229.1,
                      "unit": null,
                      "unitRate": null
                    },
                    {
                      "isOptional": false,
                      "currencyCode": "USD",
                      "code": "FSF",
                      "name": "Fuel Surcharge",
                      "typeCode": "F",
                      "cost": 11.75,
                      "unit": null,
                      "unitRate": null
                    },
                    {
                      "isOptional": true,
                      "currencyCode": "USD",
                      "code": "AD",
                      "name": "Additional Charge Total",
                      "typeCode": "F",
                      "cost": 274.25,
                      "unit": null,
                      "unitRate": null
                    }
                  ],
                  "legs": null,
                  "accessorialsTotalCost": 274.25,
                  "subTotal": 515.10,
                  "totalCost": 515.1,
                  "isNmfcCarrier": false,
                  "isContractRate": true,
                  "currencyCode": "USD",
                  "expiresOn": null,
                  "createdOn": "2020-07-07T12:25:12.322908+00:00",
                  "pickUpDate": null,
                  "pickUpDateDisplay": null,
                  "lineHaul": 229.1,
                  "fsc": 11.75,
                  "scac": "SAIA",
                  "totalDistance": 0.0
                },
                {
                  "quoteId": "0000389414",
                  "carrierCode": null,
                  "carrierName": "Estes Express Lines (Guaranteed LTL Standard Transit: 12PM)",
                  "serviceLevel": "LTL",
                  "movementType": "DIRECT",
                  "estimatedTransitTime": 5,
                  "accessorials": [
                    {
                      "accessorialCode": "HZM",
                      "accessorialName": "Hazardous Material (HZM)",
                      "accessorialCost": 15.0
                    },
                    {
                      "accessorialCode": "RSD",
                      "accessorialName": "Residential Delivery (RSD)",
                      "accessorialCost": 25.0
                    },
                    {
                      "accessorialCode": "RSP",
                      "accessorialName": "Residential Pickup (RSP)",
                      "accessorialCost": 25.0
                    },
                    {
                      "accessorialCode": "LFD",
                      "accessorialName": "Liftgate Delivery (LFD)",
                      "accessorialCost": 20.0
                    },
                    {
                      "accessorialCode": "CHP",
                      "accessorialName": "Church Pickup (CHP)",
                      "accessorialCost": 65.0
                    },
                    {
                      "accessorialCode": "RSS",
                      "accessorialName": "State Charge (RSS)",
                      "accessorialCost": 9.0
                    }
                  ],
                  "rateList": [
                    {
                      "isOptional": false,
                      "currencyCode": "USD",
                      "code": "LNH",
                      "name": "Line Haul",
                      "typeCode": "F",
                      "cost": 356.56,
                      "unit": null,
                      "unitRate": null
                    },
                    {
                      "isOptional": false,
                      "currencyCode": "USD",
                      "code": "FSF",
                      "name": "Fuel Surcharge",
                      "typeCode": "F",
                      "cost": 34.42,
                      "unit": null,
                      "unitRate": null
                    },
                    {
                      "isOptional": true,
                      "currencyCode": "USD",
                      "code": "AD",
                      "name": "Additional Charge Total",
                      "typeCode": "F",
                      "cost": 159.00,
                      "unit": null,
                      "unitRate": null
                    }
                  ],
                  "legs": null,
                  "accessorialsTotalCost": 159.00,
                  "subTotal": 549.98,
                  "totalCost": 549.98,
                  "isNmfcCarrier": false,
                  "isContractRate": true,
                  "currencyCode": "USD",
                  "expiresOn": null,
                  "createdOn": "2020-07-07T12:25:12.322908+00:00",
                  "pickUpDate": null,
                  "pickUpDateDisplay": null,
                  "lineHaul": 356.56,
                  "fsc": 34.42,
                  "scac": "EXLA",
                  "totalDistance": 0.0
                },
                {
                  "quoteId": "0000389415",
                  "carrierCode": null,
                  "carrierName": "FedEx Economy",
                  "serviceLevel": "LTL",
                  "movementType": "DIRECT",
                  "estimatedTransitTime": 7,
                  "accessorials": [
                    {
                      "accessorialCode": "HZM",
                      "accessorialName": "Hazardous Material (HZM)",
                      "accessorialCost": 35.0
                    },
                    {
                      "accessorialCode": "CHP",
                      "accessorialName": "Church Pickup (CHP)",
                      "accessorialCost": 152.0
                    },
                    {
                      "accessorialCode": "RSP",
                      "accessorialName": "Residential Pickup (RSP)",
                      "accessorialCost": 144.0
                    },
                    {
                      "accessorialCode": "RSD",
                      "accessorialName": "Residential Delivery (RSD)",
                      "accessorialCost": 144.0
                    },
                    {
                      "accessorialCode": "LFD",
                      "accessorialName": "Liftgate Delivery (LFD)",
                      "accessorialCost": 145.0
                    },
                    {
                      "accessorialCode": "RSS",
                      "accessorialName": "State Charge (RSS)",
                      "accessorialCost": 7.0
                    }
                  ],
                  "rateList": [
                    {
                      "isOptional": false,
                      "currencyCode": "USD",
                      "code": "LNH",
                      "name": "Line Haul",
                      "typeCode": "F",
                      "cost": 300.76,
                      "unit": null,
                      "unitRate": null
                    },
                    {
                      "isOptional": false,
                      "currencyCode": "USD",
                      "code": "FSF",
                      "name": "Fuel Surcharge",
                      "typeCode": "F",
                      "cost": 30.06,
                      "unit": null,
                      "unitRate": null
                    },
                    {
                      "isOptional": true,
                      "currencyCode": "USD",
                      "code": "AD",
                      "name": "Additional Charge Total",
                      "typeCode": "F",
                      "cost": 627.00,
                      "unit": null,
                      "unitRate": null
                    }
                  ],
                  "legs": null,
                  "accessorialsTotalCost": 627.00,
                  "subTotal": 957.82,
                  "totalCost": 957.82,
                  "isNmfcCarrier": false,
                  "isContractRate": true,
                  "currencyCode": "USD",
                  "expiresOn": null,
                  "createdOn": "2020-07-07T12:25:12.322908+00:00",
                  "pickUpDate": null,
                  "pickUpDateDisplay": null,
                  "lineHaul": 300.76,
                  "fsc": 30.06,
                  "scac": "FXNL",
                  "totalDistance": 0.0
                },
                {
                  "quoteId": "0000389416",
                  "carrierCode": null,
                  "carrierName": "FedEx Priority",
                  "serviceLevel": "LTL",
                  "movementType": "DIRECT",
                  "estimatedTransitTime": 4,
                  "accessorials": [
                    {
                      "accessorialCode": "HZM",
                      "accessorialName": "Hazardous Material (HZM)",
                      "accessorialCost": 35.0
                    },
                    {
                      "accessorialCode": "CHP",
                      "accessorialName": "Church Pickup (CHP)",
                      "accessorialCost": 152.0
                    },
                    {
                      "accessorialCode": "RSP",
                      "accessorialName": "Residential Pickup (RSP)",
                      "accessorialCost": 144.0
                    },
                    {
                      "accessorialCode": "RSD",
                      "accessorialName": "Residential Delivery (RSD)",
                      "accessorialCost": 144.0
                    },
                    {
                      "accessorialCode": "LFD",
                      "accessorialName": "Liftgate Delivery (LFD)",
                      "accessorialCost": 145.0
                    },
                    {
                      "accessorialCode": "RSS",
                      "accessorialName": "State Charge (RSS)",
                      "accessorialCost": 7.0
                    }
                  ],
                  "rateList": [
                    {
                      "isOptional": false,
                      "currencyCode": "USD",
                      "code": "LNH",
                      "name": "Line Haul",
                      "typeCode": "F",
                      "cost": 325.41,
                      "unit": null,
                      "unitRate": null
                    },
                    {
                      "isOptional": false,
                      "currencyCode": "USD",
                      "code": "FSF",
                      "name": "Fuel Surcharge",
                      "typeCode": "F",
                      "cost": 34.28,
                      "unit": null,
                      "unitRate": null
                    },
                    {
                      "isOptional": true,
                      "currencyCode": "USD",
                      "code": "AD",
                      "name": "Additional Charge Total",
                      "typeCode": "F",
                      "cost": 627.00,
                      "unit": null,
                      "unitRate": null
                    }
                  ],
                  "legs": null,
                  "accessorialsTotalCost": 627.00,
                  "subTotal": 986.69,
                  "totalCost": 986.69,
                  "isNmfcCarrier": false,
                  "isContractRate": true,
                  "currencyCode": "USD",
                  "expiresOn": null,
                  "createdOn": "2020-07-07T12:25:12.322908+00:00",
                  "pickUpDate": null,
                  "pickUpDateDisplay": null,
                  "lineHaul": 325.41,
                  "fsc": 34.28,
                  "scac": "FXNL",
                  "totalDistance": 0.0
                }
              ],
              "lowestPriceQuote": {
                "quoteId": "0000389411",
                "carrierCode": null,
                "carrierName": "XPO Logistics Freight, Inc.- Standard and Hazmat",
                "serviceLevel": "LTL",
                "movementType": "DIRECT",
                "estimatedTransitTime": 5,
                "accessorials": [
                  {
                    "accessorialCode": "RSS",
                    "accessorialName": "State Charge (RSS)",
                    "accessorialCost": 5.0
                  },
                  {
                    "accessorialCode": "HZM",
                    "accessorialName": "Hazardous Material (HZM)",
                    "accessorialCost": 13.5
                  },
                  {
                    "accessorialCode": "RSP",
                    "accessorialName": "Residential Pickup (RSP)",
                    "accessorialCost": 60.0
                  },
                  {
                    "accessorialCode": "LFD",
                    "accessorialName": "Liftgate Delivery (LFD)",
                    "accessorialCost": 75.0
                  },
                  {
                    "accessorialCode": "RSD",
                    "accessorialName": "Residential Delivery (RSD)",
                    "accessorialCost": 60.0
                  }
                ],
                "rateList": [
                  {
                    "isOptional": false,
                    "currencyCode": "USD",
                    "code": "LNH",
                    "name": "Line Haul",
                    "typeCode": "F",
                    "cost": 185.52,
                    "unit": null,
                    "unitRate": null
                  },
                  {
                    "isOptional": false,
                    "currencyCode": "USD",
                    "code": "FSF",
                    "name": "Fuel Surcharge",
                    "typeCode": "F",
                    "cost": 24.09,
                    "unit": null,
                    "unitRate": null
                  },
                  {
                    "isOptional": true,
                    "currencyCode": "USD",
                    "code": "AD",
                    "name": "Additional Charge Total",
                    "typeCode": "F",
                    "cost": 213.50,
                    "unit": null,
                    "unitRate": null
                  }
                ],
                "legs": null,
                "accessorialsTotalCost": 213.50,
                "subTotal": 423.11,
                "totalCost": 423.11,
                "isNmfcCarrier": false,
                "isContractRate": true,
                "currencyCode": "USD",
                "expiresOn": null,
                "createdOn": "2020-07-07T12:25:12.3209099+00:00",
                "pickUpDate": null,
                "pickUpDateDisplay": null,
                "lineHaul": 185.52,
                "fsc": 24.09,
                "scac": "CNWY",
                "totalDistance": 0.0
              },
              "lowestGuaranteedPriceQuote": {
                "quoteId": "0000389414",
                "carrierCode": null,
                "carrierName": "Estes Express Lines (Guaranteed LTL Standard Transit: 12PM)",
                "serviceLevel": "LTL",
                "movementType": "DIRECT",
                "estimatedTransitTime": 5,
                "accessorials": [
                  {
                    "accessorialCode": "HZM",
                    "accessorialName": "Hazardous Material (HZM)",
                    "accessorialCost": 15.0
                  },
                  {
                    "accessorialCode": "RSD",
                    "accessorialName": "Residential Delivery (RSD)",
                    "accessorialCost": 25.0
                  },
                  {
                    "accessorialCode": "RSP",
                    "accessorialName": "Residential Pickup (RSP)",
                    "accessorialCost": 25.0
                  },
                  {
                    "accessorialCode": "LFD",
                    "accessorialName": "Liftgate Delivery (LFD)",
                    "accessorialCost": 20.0
                  },
                  {
                    "accessorialCode": "CHP",
                    "accessorialName": "Church Pickup (CHP)",
                    "accessorialCost": 65.0
                  },
                  {
                    "accessorialCode": "RSS",
                    "accessorialName": "State Charge (RSS)",
                    "accessorialCost": 9.0
                  }
                ],
                "rateList": [
                  {
                    "isOptional": false,
                    "currencyCode": "USD",
                    "code": "LNH",
                    "name": "Line Haul",
                    "typeCode": "F",
                    "cost": 356.56,
                    "unit": null,
                    "unitRate": null
                  },
                  {
                    "isOptional": false,
                    "currencyCode": "USD",
                    "code": "FSF",
                    "name": "Fuel Surcharge",
                    "typeCode": "F",
                    "cost": 34.42,
                    "unit": null,
                    "unitRate": null
                  },
                  {
                    "isOptional": true,
                    "currencyCode": "USD",
                    "code": "AD",
                    "name": "Additional Charge Total",
                    "typeCode": "F",
                    "cost": 159.00,
                    "unit": null,
                    "unitRate": null
                  }
                ],
                "legs": null,
                "accessorialsTotalCost": 159.00,
                "subTotal": 549.98,
                "totalCost": 549.98,
                "isNmfcCarrier": false,
                "isContractRate": true,
                "currencyCode": "USD",
                "expiresOn": null,
                "createdOn": "2020-07-07T12:25:12.322908+00:00",
                "pickUpDate": null,
                "pickUpDateDisplay": null,
                "lineHaul": 356.56,
                "fsc": 34.42,
                "scac": "EXLA",
                "totalDistance": 0.0
              },
              "bestDealPriceQuote": {
                "quoteId": "0000389411",
                "carrierCode": null,
                "carrierName": "XPO Logistics Freight, Inc.- Standard and Hazmat",
                "serviceLevel": "LTL",
                "movementType": "DIRECT",
                "estimatedTransitTime": 5,
                "accessorials": [
                  {
                    "accessorialCode": "RSS",
                    "accessorialName": "State Charge (RSS)",
                    "accessorialCost": 5.0
                  },
                  {
                    "accessorialCode": "HZM",
                    "accessorialName": "Hazardous Material (HZM)",
                    "accessorialCost": 13.5
                  },
                  {
                    "accessorialCode": "RSP",
                    "accessorialName": "Residential Pickup (RSP)",
                    "accessorialCost": 60.0
                  },
                  {
                    "accessorialCode": "LFD",
                    "accessorialName": "Liftgate Delivery (LFD)",
                    "accessorialCost": 75.0
                  },
                  {
                    "accessorialCode": "RSD",
                    "accessorialName": "Residential Delivery (RSD)",
                    "accessorialCost": 60.0
                  }
                ],
                "rateList": [
                  {
                    "isOptional": false,
                    "currencyCode": "USD",
                    "code": "LNH",
                    "name": "Line Haul",
                    "typeCode": "F",
                    "cost": 185.52,
                    "unit": null,
                    "unitRate": null
                  },
                  {
                    "isOptional": false,
                    "currencyCode": "USD",
                    "code": "FSF",
                    "name": "Fuel Surcharge",
                    "typeCode": "F",
                    "cost": 24.09,
                    "unit": null,
                    "unitRate": null
                  },
                  {
                    "isOptional": true,
                    "currencyCode": "USD",
                    "code": "AD",
                    "name": "Additional Charge Total",
                    "typeCode": "F",
                    "cost": 213.50,
                    "unit": null,
                    "unitRate": null
                  }
                ],
                "legs": null,
                "accessorialsTotalCost": 213.50,
                "subTotal": 423.11,
                "totalCost": 423.11,
                "isNmfcCarrier": false,
                "isContractRate": true,
                "currencyCode": "USD",
                "expiresOn": null,
                "createdOn": "2020-07-07T12:25:12.3209099+00:00",
                "pickUpDate": null,
                "pickUpDateDisplay": null,
                "lineHaul": 185.52,
                "fsc": 24.09,
                "scac": "CNWY",
                "totalDistance": 0.0
              },
              "mode": "LTL"
            }
          ]
        }
      },
      "getquoteresponse": {
        "$ref": "#/components/schemas/commonquoteresponse"

      },
      "quoteresponse": {
        "$ref": "#/components/schemas/commonquoteresponse"

      },
      "orderStatusResponse": {
        "type": "object",
        "description": "Order Status Response.",
        "properties": {
          "errorDetails": { "$ref": "#/components/schemas/errorDetails" },
          "statusCode": {
            "type": "string",
            "description": "Order Status Code.",
            "enum": [
              "Continue",
              "SwitchingProtocols",
              "Processing",
              "EarlyHints",
              "OK",
              "Created",
              "Accepted",
              "NonAuthoritativeInformation",
              "NoContent",
              "ResetContent",
              "PartialContent",
              "MultiStatus",
              "AlreadyReported",
              "IMUsed",
              "MultipleChoices",
              "Ambiguous",
              "MovedPermanently",
              "Moved",
              "Found",
              "Redirect",
              "SeeOther",
              "RedirectMethod",
              "NotModified",
              "UseProxy",
              "Unused",
              "TemporaryRedirect",
              "RedirectKeepVerb",
              "PermanentRedirect",
              "BadRequest",
              "Unauthorized",
              "PaymentRequired",
              "Forbidden",
              "NotFound",
              "MethodNotAllowed",
              "NotAcceptable",
              "ProxyAuthenticationRequired",
              "RequestTimeout",
              "Conflict",
              "Gone",
              "LengthRequired",
              "PreconditionFailed",
              "RequestEntityTooLarge",
              "RequestUriTooLong",
              "UnsupportedMediaType",
              "RequestedRangeNotSatisfiable",
              "ExpectationFailed",
              "MisdirectedRequest",
              "UnprocessableEntity",
              "Locked",
              "FailedDependency",
              "UpgradeRequired",
              "PreconditionRequired",
              "TooManyRequests",
              "RequestHeaderFieldsTooLarge",
              "UnavailableForLegalReasons",
              "InternalServerError",
              "NotImplemented",
              "BadGateway",
              "ServiceUnavailable",
              "GatewayTimeout",
              "HttpVersionNotSupported",
              "VariantAlsoNegotiates",
              "InsufficientStorage",
              "LoopDetected",
              "NotExtended"
            ]
          },
          "totalCount": {
            "type": "integer",
            "description": "Total result count in response."

          },
          "status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/orderStatus"
            },
            "description": "Status is a collections of Shipments/Order events information."
          }
        },
        "example": {
          "errorDetails": null,
          "statusCode": 200,
          "totalCount": 6,
          "status": [
            {
              "partnerIdentifierCode": "TESTCHN2",
              "eventTime": "2020-08-14T07:43:23.02-04:00",
              "estimatedTimeOfArrival": null,
              "lateReasonCode": null,
              "eventCategory": "ORDER",
              "event": {
                "code": "OC",
                "name": "ORDER_CREATED",
                "description": "ORDER CREATED",
                "orderDetails": [
                  {
                    "orderId": 1033752
                  }
                ],
                "shipmentNumbers": [
                  5171729
                ],
                "referenceNumbers": []
              }
            },
            {
              "partnerIdentifierCode": "TESTCHN2",
              "eventTime": "2020-08-14T07:45:00-04:00",
              "estimatedTimeOfArrival": null,
              "lateReasonCode": null,
              "eventCategory": "SHIPMENT",
              "event": {
                "shipmentId": "5171729",
                "code": "X3",
                "name": "ARRIVED_AT_PICKUP",
                "description": "ARRIVED AT PICKUP LOCATION",
                "distanceToStop": null,
                "distanceToStopUom": null,
                "orderDetails": [
                  {
                    "orderId": 1033752
                  }
                ],
                "locationInformation": {
                  "addressInformation": {
                    "locationName": "Test 1",
                    "locationType": "OTHER",
                    "addressLine1": "1800 North Clybourn Avenue",
                    "addressLine2": "",
                    "cityName": "Chicago",
                    "countryCode": "US",
                    "stateCode": "IL",
                    "type": "Pickup",
                    "zipCode": "60606",
                    "region": null,
                    "geoCode": {
                      "latitude": 41.882934,
                      "longitude": -87.636843,
                      "s2CellId": null
                    }
                  }
                },
                "contactInformation": {
                  "firstName": "TestData",
                  "lastName": "Lname",
                  "email": "devcustomer@gmail.com",
                  "phoneNumbers": [
                    {
                      "type": "MOBILE",
                      "number": "7894561230"
                    }
                  ],
                  "title": null,
                  "isPrimary": false
                },
                "carrierInformation": {
                  "code": "270WBANY",
                  "name": "270 WEST HOLDINGS LLC",
                  "scac": null
                },
                "items": [
                  {
                    "productCode": "ACEQ",
                    "units": 10.0,
                    "unitTypeCode": "10",
                    "packageUnits": 0.0,
                    "packageTypeCode": null,
                    "weight": 15.0,
                    "weightUom": "LB",
                    "height": 0.0,
                    "heightUom": "in",
                    "length": 0.0,
                    "lengthUom": "in",
                    "width": 0.0,
                    "widthUom": "in",
                    "sku": null,
                    "nfmcCode": "0",
                    "class": null
                  }
                ]
              }
            },
            {
              "partnerIdentifierCode": "TESTCHN2",
              "eventTime": "2020-08-14T07:48:00-04:00",
              "estimatedTimeOfArrival": "2020-08-14T18:41:00-04:00",
              "lateReasonCode": null,
              "eventCategory": "SHIPMENT",
              "event": {
                "shipmentId": "5171729",
                "code": "AF",
                "name": "DEPARTED_FROM_PICKUP",
                "description": "CARRIER DEPARTED PICK-UP LOCATION WITH SHIPMENT",
                "distanceToStop": null,
                "distanceToStopUom": null,
                "orderDetails": [
                  {
                    "orderId": 1033752
                  }
                ],
                "locationInformation": {
                  "addressInformation": {
                    "locationName": "Test 1",
                    "locationType": "OTHER",
                    "addressLine1": "1800 North Clybourn Avenue",
                    "addressLine2": "",
                    "cityName": "Chicago",
                    "countryCode": "US",
                    "stateCode": "IL",
                    "type": "Pickup",
                    "zipCode": "60606",
                    "region": null,
                    "geoCode": {
                      "latitude": 41.882934,
                      "longitude": -87.636843,
                      "s2CellId": null
                    }
                  }
                },
                "contactInformation": {
                  "firstName": "TestData",
                  "lastName": "Lname",
                  "email": "devcustomer@gmail.com",
                  "phoneNumbers": [
                    {
                      "type": "MOBILE",
                      "number": "7894561230"
                    }
                  ],
                  "title": null,
                  "isPrimary": false
                },
                "carrierInformation": {
                  "code": "270WBANY",
                  "name": "270 WEST HOLDINGS LLC",
                  "scac": null
                },
                "items": [
                  {
                    "productCode": "ACEQ",
                    "units": 10.0,
                    "unitTypeCode": "10",
                    "packageUnits": 0.0,
                    "packageTypeCode": null,
                    "weight": 15.0,
                    "weightUom": "LB",
                    "height": 0.0,
                    "heightUom": "in",
                    "length": 0.0,
                    "lengthUom": "in",
                    "width": 0.0,
                    "widthUom": "in",
                    "sku": null,
                    "nfmcCode": "0",
                    "class": null
                  }
                ]
              }
            },
            {
              "partnerIdentifierCode": "TESTCHN2",
              "eventTime": "2020-08-14T07:48:00-04:00",
              "estimatedTimeOfArrival": "2020-08-17T14:20:00-04:00",
              "lateReasonCode": null,
              "eventCategory": "SHIPMENT",
              "event": {
                "shipmentId": "5171729",
                "code": "X6",
                "name": "IN_TRANSIT",
                "description": "EN ROUTE TO DELIVERY LOCATION",
                "distanceToStop": null,
                "distanceToStopUom": null,
                "orderDetails": [
                  {
                    "orderId": 1033752
                  }
                ],
                "locationInformation": null,
                "contactInformation": null,
                "carrierInformation": {
                  "code": "270WBANY",
                  "name": "270 WEST HOLDINGS LLC",
                  "scac": null
                },
                "items": [
                  {
                    "productCode": "ACEQ",
                    "units": 10.0,
                    "unitTypeCode": "10",
                    "packageUnits": 0.0,
                    "packageTypeCode": null,
                    "weight": 15.0,
                    "weightUom": "LB",
                    "height": 0.0,
                    "heightUom": "in",
                    "length": 0.0,
                    "lengthUom": "in",
                    "width": 0.0,
                    "widthUom": "in",
                    "sku": null,
                    "nfmcCode": "0",
                    "class": null
                  }
                ]
              }
            },
            {
              "partnerIdentifierCode": "TESTCHN2",
              "eventTime": "2020-08-14T07:50:00-04:00",
              "estimatedTimeOfArrival": null,
              "lateReasonCode": null,
              "eventCategory": "SHIPMENT",
              "event": {
                "shipmentId": "5171729",
                "code": "X1",
                "name": "ARRIVED_AT_DELIVERY",
                "description": "ARRIVED AT DELIVERY LOCATION",
                "distanceToStop": null,
                "distanceToStopUom": null,
                "orderDetails": [
                  {
                    "orderId": 1033752
                  }
                ],
                "locationInformation": {
                  "addressInformation": {
                    "locationName": "Test 2",
                    "locationType": "OTHER",
                    "addressLine1": "North Ridgeville Soccer Complex",
                    "addressLine2": "",
                    "cityName": "North Ridgeville",
                    "countryCode": "US",
                    "stateCode": "OH",
                    "type": "Delivery",
                    "zipCode": "44039",
                    "region": null,
                    "geoCode": {
                      "latitude": 41.376396,
                      "longitude": -82.019666,
                      "s2CellId": null
                    }
                  }
                },
                "contactInformation": {
                  "firstName": "TestData",
                  "lastName": "",
                  "email": "devcustomer@gmail.com",
                  "phoneNumbers": [
                    {
                      "type": "MOBILE",
                      "number": "3312244433"
                    }
                  ],
                  "title": null,
                  "isPrimary": false
                },
                "carrierInformation": {
                  "code": "270WBANY",
                  "name": "270 WEST HOLDINGS LLC",
                  "scac": null
                },
                "items": [
                  {
                    "productCode": "ACEQ",
                    "units": 10.0,
                    "unitTypeCode": "10",
                    "packageUnits": 0.0,
                    "packageTypeCode": null,
                    "weight": 15.0,
                    "weightUom": "LB",
                    "height": 0.0,
                    "heightUom": "in",
                    "length": 0.0,
                    "lengthUom": "in",
                    "width": 0.0,
                    "widthUom": "in",
                    "sku": null,
                    "nfmcCode": "0",
                    "class": null
                  }
                ]
              }
            },
            {
              "partnerIdentifierCode": "TESTCHN2",
              "eventTime": "2020-08-14T07:53:00-04:00",
              "estimatedTimeOfArrival": "2020-08-14T11:54:00-04:00",
              "lateReasonCode": null,
              "eventCategory": "SHIPMENT",
              "event": {
                "shipmentId": "5171729",
                "code": "CD",
                "name": "DEPARTED_FROM_DELIVERY",
                "description": "CARRIER DEPARTED DELIVERY LOCATION",
                "distanceToStop": null,
                "distanceToStopUom": null,
                "orderDetails": [
                  {
                    "orderId": 1033752
                  }
                ],
                "locationInformation": {
                  "addressInformation": {
                    "locationName": "Test 2",
                    "locationType": "OTHER",
                    "addressLine1": "North Ridgeville Soccer Complex",
                    "addressLine2": "",
                    "cityName": "North Ridgeville",
                    "countryCode": "US",
                    "stateCode": "OH",
                    "type": "Delivery",
                    "zipCode": "44039",
                    "region": null,
                    "geoCode": {
                      "latitude": 41.376396,
                      "longitude": -82.019666,
                      "s2CellId": null
                    }
                  }
                },
                "contactInformation": {
                  "firstName": "TestData",
                  "lastName": "",
                  "email": "devcustomer@gmail.com",
                  "phoneNumbers": [
                    {
                      "type": "MOBILE",
                      "number": "3312244433"
                    }
                  ],
                  "title": null,
                  "isPrimary": false
                },
                "carrierInformation": {
                  "code": "270WBANY",
                  "name": "270 WEST HOLDINGS LLC",
                  "scac": null
                },
                "items": [
                  {
                    "productCode": "ACEQ",
                    "units": 10.0,
                    "unitTypeCode": "10",
                    "packageUnits": 0.0,
                    "packageTypeCode": null,
                    "weight": 15.0,
                    "weightUom": "LB",
                    "height": 0.0,
                    "heightUom": "in",
                    "length": 0.0,
                    "lengthUom": "in",
                    "width": 0.0,
                    "widthUom": "in",
                    "sku": null,
                    "nfmcCode": "0",
                    "class": null
                  }
                ]
              }
            }
          ]
        }
      },
      "orderStatus": {
        "description": "Order Status Details.",
        "discriminator": {
          "propertyName": "eventCategory",
          "mapping": {
            "Order": "#/components/schemas/orderEvent",
            "Shipment": "#/components/schemas/shipmentEvent"
          }
        },
        "type": "object",
        "properties": {
          "partnerIdentifierCode": {
            "type": "string",
            "description": "Unique identifier for the Partners in XPO."
          },
          "eventTime": {
            "format": "date-time",
            "type": "string",
            "description": "date time when the event was reported."
          },
          "estimatedTimeOfArrival": {
            "format": "date-time",
            "type": "string",
            "description": "Shipment Estimated time of arrival."
          },
          "lateReasonCode": {
            "type": "string",
            "description": "If the shipment is arrived late, this field hold the value of late reason code."
          },
          "eventCategory": {
            "enum": [
              "Order",
              "Shipment"
            ],
            "type": "string",
            "description": "This enum value which represents, this is a Shipment event or Order event."
          }
        }
      },
      "shipmentEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/orderStatus"
          },
          {
            "description": "Event object which contains event related information for Shipment.",
            "type": "object",
            "properties": {
              "event": {
                "type": "object",
                "properties": {
                  "shipmentId": {
                    "type": "string",
                    "description": "Unique identifier of shipment in XPO."
                  },
                  "code": {
                    "type": "string",
                    "description": "Represents type of events.",
                    "enum": [
                      "AA : PICKUP_APPOINTMENT",
                      "AB : DELIVERY_APPOINTMENT",
                      "X3 : ARRIVED_AT_PICKUP",
                      "CP : COMPLETED_LODING",
                      "AF : DEPARTED_FROM_PICKUP",
                      "X6 : IN_TRANSIT",
                      "X1 : ARRIVED_AT_DELIVERY",
                      "D1 : COMPLETED_UNLOADING",
                      "CD : DELIVERED",
                      "AH : ATTEMPTED_DELIVERY",
                      "SD : SHIPMENT_DELAYED"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the event."
                  },
                  "description": {
                    "type": "string",
                    "description": "Indicate the description of event."
                  },
                  "distanceToStop": {
                    "type": "number",
                    "description": "Distance to the last stop."
                  },
                  "distanceToStopUom": {
                    "type": "string",
                    "description": "Distance to the last stop unit of measure."
                  },
                  "orderDetails": {
                    "type": "object",
                    "properties": {
                      "orderId": {
                        "type": "integer",
                        "description": "Unique identifier of order in XPO Connect."
                      }
                    },
                    "description": "This object contains the order related information."
                  },
                  "locationInformation": {
                    "type": "object",
                    "properties": {
                      "addressInformation": {
                        "type": "object",
                        "properties": {
                          "locationName": {
                            "type": "string",
                            "description": "Name of location."
                          },
                          "addressLine1": {
                            "type": "string",
                            "description": "Address line 1 of stop location."
                          },
                          "addressLine2": {
                            "type": "string",
                            "description": "Address line 2 of stop location."
                          },
                          "cityName": {
                            "type": "string",
                            "description": "City name belongs to stop location."
                          },
                          "stateCode": {
                            "type": "string",
                            "description": "State code of the stop location."
                          },
                          "country": {
                            "type": "string",
                            "description": "Country belongs to stop location."
                          },
                          "zipCode": {
                            "type": "string",
                            "description": "Postal Code."
                          },
                          "region": {
                            "type": "string",
                            "description": "Region."
                          },
                          "geoCode": {
                            "type": "object",
                            "properties": {
                              "latitude": {
                                "type": "number",
                                "description": "latitude value of location."
                              },
                              "longitude": {
                                "type": "number",
                                "description": "longitude value of location."
                              },
                              "s2CellId": {
                                "type": "string",
                                "description": "s2CellId  of location."
                              }
                            }
                          }
                        },
                        "description": "Address Details."
                      }
                    },
                    "description": "Location Information including Address Details."
                  },
                  "contactInformation": {
                    "type": "object",
                    "properties": {
                      "firstName": {
                        "type": "string",
                        "description": "First name of contact person."
                      },
                      "lastName": {
                        "type": "string",
                        "description": "Last name of contact person."
                      },
                      "email": {
                        "type": "string",
                        "description": "Email for communication."
                      },
                      "phoneNumbers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Type": {
                              "type": "string",
                              "description": "Phone number types.",
                              "enum": [ "MOBILE", "WORK", "HOME" ]
                            },
                            "number": {
                              "type": "string",
                              "description": "Contact number."
                            },
                            "isPrimary": {
                              "type": "boolean",
                              "description": "Is contact primary information."
                            }
                          }
                        },
                        "description": "Primary and alternate numbers for communication."
                      },
                      "title": {
                        "type": "string",
                        "description": "Title of contact person."
                      },
                      "isPrimary": {
                        "type": "boolean",
                        "description": "Is it the primary contact information?."
                      }
                    },
                    "description": "Contact Information."
                  },
                  "carrierInformation": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Carrier Code."
                      },
                      "name": {
                        "type": "string",
                        "description": "Carrier Name."
                      },
                      "scac": {
                        "type": "string",
                        "description": "Carrier SCAC value."
                      }
                    },
                    "description": "Carrier Details."
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "productCode": {
                          "type": "string",
                          "description": "Item's Product Code."
                        },
                        "units": {
                          "type": "number",
                          "description": "Number of units."
                        },
                        "unitTypeCode": {
                          "type": "string",
                          "description": "Item's unit type."
                        },
                        "packageUnits": {
                          "type": "number",
                          "description": "Number of packages."
                        },
                        "packageTypeCode": {
                          "type": "string",
                          "description": "Package type."
                        },
                        "weight": {
                          "type": "number",
                          "description": "Item's weight."
                        },
                        "weightUom": {
                          "type": "string",
                          "description": "Weight- Unit of measure."
                        },
                        "height": {
                          "type": "number",
                          "description": "Item's height."
                        },
                        "heightUom": {
                          "type": "string",
                          "description": "Height- Unit of measure."
                        },
                        "length": {
                          "type": "number",
                          "description": "Item's length."
                        },
                        "lengthUom": {
                          "type": "string",
                          "description": "Length - Unit of measure."
                        },
                        "width": {
                          "type": "number",
                          "description": "Item's width."
                        },
                        "widthUom": {
                          "type": "string",
                          "description": "Width - Unit of measure."
                        },
                        "sku": {
                          "type": "string",
                          "description": "Stock-keeping unit or SKU refers to a specific item stored to a specific location."
                        },
                        "class": {
                          "type": "string",
                          "description": "This code represents product freight class.."
                        },
                        "nmfcCode": {
                          "type": "string",
                          "description": "Commodity or type of product is assigned a National Motor Freight Classification"
                        }
                      }
                    },
                    "description": "All item details."
                  }
                }
              }
            }
          }
        ]
      },
      "orderEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/orderStatus"
          },
          {
            "description": "Event object which contains event related information for Order.",
            "type": "object",
            "properties": {
              "event": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Represents type of events.",
                    "enum": [
                      "OC : ORDER_CREATED",
                      "OU : ORDER_UPDATED",
                      "OL : ORDER_CANCELLED"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the event."
                  },
                  "description": {
                    "type": "string",
                    "description": "Indicate the description of event."
                  },
                  "orderDetails": {
                    "type": "object",
                    "properties": {
                      "orderId": {
                        "type": "integer",
                        "description": "Unique identifier of order in XPO Connect."
                      }
                    },
                    "description": "This object contains the order related information."
                  },
                  "shipmentNumbers": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "Shipment Id."
                    },
                    "description": "This field contains the collection shipment ids tied to this order."
                  },
                  "referenceNumbers": {
                    "description": "This collection contains the reference number details associated with this order.",
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Reference Type."
                      },
                      "value": {
                        "type": "string",
                        "description": "Reference Value."
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "errorDetails": {
        "type": "array",
        "items": {
          "type": "string",
          "description": "Error message."
        },
        "description": "Error details while generating quotes."
      },
      "successtoken": {
        "properties": {
          "access_token": {
            "type": "string",
            "description": "Returned Bearer token to be used for subsequent API calls.",
            "example": "eyJhbGciOiJSUzI1NiIsImtpZCI6IkU1OEQ3N0M3MEE2MkRCMUQwMDYwODRCNUNCREI0QkVBMUJGRjhGM0YiLCJ0eXAiOiJKV1QiLCJ4NXQiOiI1WTEzeHdwaTJ4MEFZSVMxeTl0TDZodl9qejgifQ.eyJuYmYiOjE1ODc1NzQxMDYsImV4cCI6MTU4NzU4MTMwNiwiaXNzIjoiaHR0cHM6Ly9sb2dpbi1zYW5kYm94LmF1dGh4cG8uY29tIiwiYXVkIjpbImh0dHBzOi8vbG9naW4tc2FuZGJveC5hdXRoeHBvLmNvbS9yZXNvdXJjZXMiLCJ4cG8tcmF0ZXMtYXBpIl0sImNsaWVudF9pZCI6Inhwby1rcmFmdC1oZWluei1pbnRlZ3JhdGlvbiIsInNjb3BlIjpbInhwby1yYXRlcy1hcGkiXX0.dnoOVJQdZTFTUIY8uWf4izO7gLmY8fIXZ4N7tlWMhxkZdk6uD8VtOoY8BaJodruSpYXD2qDDHBKQe0VN-VGFBOyjx1hBXt7MSNJM_KP9H66m1VVGouuO4NV9knhTogUK_Mmt4wsfUhpFhR6MZDPkDFkLI7RpajcOfqJCQE8w7dq_AWpcD8R1sWozWcuaJHZ9su0d6x_FIwbA58iZXi7Mw1iWBPi1uuemo3iL5sKyng8V5Pp3IPELUgTFxugtcIEkw9uw3NMcXhT6qLUzfjFaXGJMyxHY-P2VaCgrt6FURkltvef9kqd2_5mB-oJNB4CEqIw9QLOHcW62OnIoi_6Tiw"
          },
          "expires_in": {
            "type": "integer",
            "description": "Amount of time till token is valid. **7200 seconds (2 hours).**",
            "example": 7200
          },
          "token_type": {
            "type": "string",
            "description": "Type of token. **Bearer.**",
            "example": "Bearer"
          }
        }
      },
      "documentOrderRequest": {
        "description": "Documents Request class",
        "type": "object",
        "discriminator": {
          "propertyName": "transportationMode",
          "mapping": {
            "TL": "#/components/schemas/TLDocumentOrder",
            "LTL": "#/components/schemas/LTLDocumentOrder"
          }
        },
        "properties": {
          "partnerIdentifierCode": {
            "description": "Partner identifier",
            "type": "string"
          },
          "transportationMode": {
            "description": "Transportation mode - ex. LTL, TL",
            "type": "string"
          },
          "shipmentIds": {
            "description": "Required only if Documents needs to be retireved by Shipment Id(s).",
            "type": "array",
            "items": { "type": "string" }
          },
          "orderIds": {
            "description": "Required only if Documents needs to be retireved by Order Id(s).",
            "type": "array",
            "items": {
              "format": "int64",
              "type": "integer"
            }
          },
          "documentType": {
            "description": "Document Type",
            "type": "array",
            "items": { "type": "string" }
          },
          "fileFormat": {
            "description": "File Format",
            "type": "array",
            "items": { "type": "string" }
          },
          "from": {
            "format": "date-time",
            "description": "From Date",
            "type": "string"
          },
          "to": {
            "format": "date-time",
            "description": "To Date",
            "type": "string"
          },
          "isDocumentContentRequired": {
            "description": "Request document content or not",
            "type": "boolean"
          }
        },
        "required": [ "partnerIdentifierCode", "transportationMode", "shipmentIds", "orderIds" ],
        "example": {
          "partnerIdentifierCode": "2-1-TESTCHN2",
          "transportationMode": "TL",
          "shipmentIds": [ "5121741", "5138261", "5137486" ],
          "orderIds": [],
          "documentType": [
            "BOL",
            "csnv"
          ],
          "fileFormat": [
            "tif"
          ],
          "from": null,
          "to": null,
          "isDocumentContentRequired": false
        }
      },
      "TLDocumentOrder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/documentOrderRequest"
          },
          {
            "type": "object",
            "properties": {
              "documentType": {
                "description": "Document Type",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [ "CSNV: Customer Invoice", "BOL: Bill Of Lading", "SPL: Shipping Label", "POD : Proof Of Delivery" ]
                }
              }
            }
          }
        ]
      },
      "LTLDocumentOrder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/documentOrderRequest"
          },
          {
            "type": "object",
            "properties": {
              "documentType": {
                "description": "Document Type",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [ "BOL: Bill Of Lading", "SPL: Shipping Label" ]
                }
              }
            }
          }
        ]
      },
      "documentOrderResponse": {
        "type": "object",
        "properties": {
          "documentInfo": {
            "description": "Collection of Document Info",
            "type": "array",
            "items": { "$ref": "#/components/schemas/documentInfo" }
          }
        },
        "example": {
          "documentInfo": [
            {
              "orderId": 0,
              "shipmentId": "5121741",
              "documents": [
                {
                  "id": "fdfaf862-f4b0-45d8-a87c-a4400ad9f8d3",
                  "type": "BOL",
                  "fileName": "38474970.TIF",
                  "fileFormat": "TIF",
                  "uploadedDateTime": "2020-07-12T13:02:42.8664078-04:00",
                  "version": "1.0",
                  "content": null
                },
                {
                  "id": "1a7168be-b5c0-47ba-9d3c-301b75e3909f",
                  "type": "BOL",
                  "fileName": "38474969.TIF",
                  "fileFormat": "TIF",
                  "uploadedDateTime": "2020-07-12T13:02:42.8664078-04:00",
                  "version": "1.0",
                  "content": null
                },
                {
                  "id": "98d4c4a3-5588-403a-a920-73e10c509c9e",
                  "type": "CSNV",
                  "fileName": "38566453.TIF",
                  "fileFormat": "TIF",
                  "uploadedDateTime": "2020-07-12T13:02:42.8664078-04:00",
                  "version": "1.0",
                  "content": null
                }
              ]
            },
            {
              "orderId": 0,
              "shipmentId": "5138261",
              "documents": [
                {
                  "id": "1f9a127b-4b65-4309-b0f0-b53f9d61717c",
                  "type": "BOL",
                  "fileName": "38589911.TIF",
                  "fileFormat": "TIF",
                  "uploadedDateTime": "2020-07-12T12:39:33.7136296-04:00",
                  "version": "1.0",
                  "content": null
                }
              ]
            },
            {
              "orderId": 0,
              "shipmentId": "5137486",
              "documents": [
                {
                  "id": "a0536fb8-cfe1-4e95-a2d8-1089e8113606",
                  "type": "CSNV",
                  "fileName": "38591954.TIF",
                  "fileFormat": "TIF",
                  "uploadedDateTime": "2020-07-12T12:40:34.3451616-04:00",
                  "version": "1.0",
                  "content": null
                }
              ]
            }
          ]
        }
      },
      "documentInfo": {
        "type": "object",
        "properties": {
          "orderId": {
            "format": "int64",
            "description": "Order Id",
            "type": "integer"
          },
          "shipmentId": {
            "description": "Shipment Id",
            "type": "string"
          },
          "documents": {
            "description": "Collection of Documents",
            "type": "array",
            "items": { "$ref": "#/components/schemas/document" }
          }
        }
      },
      "document": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Document identifier",
            "type": "string"
          },
          "type": {
            "description": "Document type",
            "type": "string"
          },
          "fileName": {
            "description": "Document File name",
            "type": "string"
          },
          "fileFormat": {
            "description": "Document File format",
            "type": "string"
          },
          "uploadedDateTime": {
            "format": "date-time",
            "description": "Document uploaded date",
            "type": "string"
          },
          "version": {
            "description": "Document version",
            "type": "string"
          },
          "content": {
            "$ref": "#/components/schemas/documentContent",
            "description": "Document content detail"
          }
        }
      },
      "documentContent": {
        "type": "object",
        "properties": {
          "fileContent": {
            "description": "File content",
            "type": "string"
          },
          "encoding": {
            "description": "File encoding",
            "type": "string"
          },
          "mediaType": {
            "description": "Media type",
            "type": "string"
          }
        }
      },
      "fileContentResult": {
        "type": "object",
        "properties": {
          "fileContents": {
            "format": "byte",
            "type": "string"
          },
          "contentType": {
            "type": "string",
            "readOnly": true
          },
          "fileDownloadName": { "type": "string" },
          "lastModified": {
            "format": "date-time",
            "type": "string"
          },
          "entityTag": {
            "type": "object",
            "properties": {
              "tag": {
                "type": "object",
                "properties": {
                  "buffer": {
                    "type": "string",
                    "readOnly": true
                  },
                  "offset": {
                    "format": "int32",
                    "type": "integer",
                    "readOnly": true
                  },
                  "length": {
                    "format": "int32",
                    "type": "integer",
                    "readOnly": true
                  },
                  "value": {
                    "type": "string",
                    "readOnly": true
                  },
                  "hasValue": {
                    "type": "boolean",
                    "readOnly": true
                  }
                },
                "readOnly": true
              },
              "isWeak": {
                "type": "boolean",
                "readOnly": true
              }
            }
          },
          "enableRangeProcessing": { "type": "boolean" }
        }
      },
      "multipleDcoumentsRequest": {
        "type": "object",
        "discriminator": {
          "propertyName": "transportationMode",
          "mapping": {
            "TL": "#/components/schemas/TLDocuments",
            "LTL": "#/components/schemas/LTLDocuments"
          }
        },
        "properties": {
          "transportationMode": {
            "description": "Transportation Mode such as TL, LTL, RAIL, DRAY etc.",
            "type": "string"
          },
          "partnerIdentifierCode": {
            "description": "Unique identifier for the Partners in XPO Connect",
            "type": "string"
          }
        },
        "required": [ "transportationMode", "partnerIdentifierCode", "documents" ],
        "example": {
          "partnerIdentifierCode": "2-1-TESTCHN2",
          "transportationMode": "TL",
          "documents": [
            {
              "id": "360c2f53-5d06-4a76-b91b-43db31ed993",
              "type": "CSNV",
              "fileFormat": "TIF"
            },
            {
              "id": "7b416017-af0d-42c1-8c44-b1b314567429",
              "type": "CSNV",
              "fileFormat": "TIF"
            }
          ]
        }
      },
      "TLDocuments": {
        "allOf": [
          {
            "$ref": "#/components/schemas/multipleDcoumentsRequest"
          },
          {
            "type": "object",
            "properties": {
              "documents": {
                "description": "List of document file info",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique Id to identify the document",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of Document.",
                      "type": "string",
                      "enum": [ "CSNV: Customer Invoice", "BOL: Bill Of Lading", "SPL: Shipping Label", "POD : Proof Of Delivery" ]
                    },
                    "fileFormat": {
                      "description": "Type of the file such as PDF, PNG, JPG etc.",
                      "type": "string"
                    }
                  },
                  "required": [ "id" ]
                }
              }
            }
          }
        ]
      },
      "LTLDocuments": {
        "allOf": [
          {
            "$ref": "#/components/schemas/multipleDcoumentsRequest"
          },
          {
            "type": "object",
            "properties": {
              "documents": {
                "description": "List of document file info",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique Id to identify the document",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of Document.",
                      "type": "string",
                      "enum": [ "BOL: Bill Of Lading", "SPL: Shipping Label" ]
                    },
                    "fileFormat": {
                      "description": "Type of the file such as PDF, PNG, JPG etc.",
                      "type": "string"
                    }
                  },
                  "required": [ "id", "type" ]
                }
              }
            }
          }
        ]
      },
      "deleteOrderResponse": {
        "description": "Delete Order Response class",
        "type": "object",
        "properties": {
          "orderId": {
            "type": "integer",
            "description": "Requested cancel Order Id."
          },
          "shipmentId": {
            "type": "string",
            "description": "Requested cancel Order's Shipment Id."
          },
          "statusCode": {
            "type": "integer",
            "description": "Status code value."
          },
          "message": {
            "type": "string",
            "description": "Message details."
          }
        },
        "example": {
          "orderId": 1120450,
          "shipmentId": null,
          "statusCode": 200,
          "message": "Order cancel request has been successfully logged. A notification has been sent to the sales representative for further processing."
        }
      },
      "error401": {
        "properties": {
          "statusCode": {
            "type": "string",
            "description": "Status Code value.",
            "example": "401"
          },
          "message": {
            "type": "string",
            "description": "Unauthorized.",
            "example": "Unauthorized"
          },
          "context": {
            "type": "array",
            "description": "Error details.",
            "items": {
              "type": "object",
              "properties": {
                "Key": {
                  "type": "string",
                  "description": "Error context key.",
                  "example": "TOKEN_VALIDATION"
                },
                "value": {
                  "type": "string",
                  "description": "Error context value,.",
                  "example": "Token has expired."
                }
              }
            }
          }
        }
      },
      "error400": {
        "properties": {
          "statusCode": {
            "type": "string",
            "description": "Status Code value.",
            "example": "400"
          },
          "message": {
            "type": "string",
            "description": "Error Message.",
            "example": "Bad Request"
          },
          "context": {
            "type": "array",
            "description": "Error details.",
            "items": {
              "type": "object",
              "properties": {
                "Key": {
                  "type": "string",
                  "description": "Error context key.",
                  "example": "TOKEN_GENERATION_FAILED"
                },
                "value": {
                  "type": "string",
                  "description": "Error context value,.",
                  "example": "Invalid Client"
                }
              }
            }
          }
        }
      },
      "error500": {
        "properties": {
          "statusCode": {
            "type": "string",
            "description": "Status Code value.",
            "example": "500"
          },
          "message": {
            "type": "string",
            "description": "Internal server error.",
            "example": "Internal server error"
          },
          "context": {
            "type": "array",
            "description": "Error details.",
            "items": {
              "type": "object",
              "properties": {
                "Key": {
                  "type": "string",
                  "description": "Error context key.",
                  "example": "BACKEND_SERVICE_COMMUNICATION"
                },
                "value": {
                  "type": "string",
                  "description": "Error context value,.",
                  "example": "Error communicating with the backend service."
                }
              }
            }
          }
        }
      },
      "CancelActionRequest": {
        "type": "object",
        "properties": {
          "Entity": {
            "type": "object",
            "properties": {
              "WorkOrderId": {
                "type": "string",
                "description": "Unique Sales Order Number."
              }
            }
          }
        },
        "required": [
          "WorkOrderId"
        ],
        "example": {
          "Entity": {
            "WorkOrderId": "000004FQBHSIU000000000"
          }
        }
      },
      "CancelFinalRequest": {
        "type": "object",
        "properties": {
          "Entity": {
            "type": "object",
            "properties": {
              "WorkOrderId": {
                "type": "string",
                "description": "Unique Sales Order Number."
              }
            }
          }
        },
        "required": [
          "WorkOrderId"
        ],
        "example": {
          "Entity": {
            "WorkOrderId": "000004FQBHSIU000000000"
          }
        }
      },
      "CancelActionResponse": {
        "properties": {

          "cancel": {
            "type": "boolean",
            "description": "Cancel status.",
            "example": "true"
          }
        },
        "example": {
          "cancel": false
        }
      },
      "CancelFinalResponse": {
        "properties": {

        },
        "example": {
        }
      },
      "equipmentCategoryCode": {
        "type": "string",
        "description": "Type of Equipment used to move your shipment, such as Dry Van, Flatbed etc.",
        "enum": [
          "DB",
          "CTN",
          "VN",
          "FB",
          "CS",
          "RF",
          "TRACTORONL",
          "OTH",
          "Sprinter",
          "Cargo",
          "Van",
          "LS",
          "LSR",
          "TRR"
        ]
      },
      "equipmentTypeCode": {
        "type": "string",
        "description": "Equipment type is the classification under equipment category, such as Dry Van 53, Dry Van 58 etc.",
        "enum": [
          "AC",
          "BT",
          "C",
          "CI",
          "CONT",
          "CR",
          "DD",
          "DT",
          "F",
          "F45",
          "F48",
          "F53",
          "F60",
          "FA",
          "FD",
          "FH",
          "FM",
          "FR",
          "FT",
          "FZ",
          "HB",
          "HOP",
          "LA",
          "LB",
          "MV",
          "MX",
          "NU",
          "OT",
          "PO",
          "R",
          "R2",
          "R48",
          "R53",
          "RA",
          "RG",
          "RL",
          "RM",
          "RN",
          "RZ",
          "SD",
          "SDCK",
          "ST",
          "TA",
          "TN",
          "TRAC",
          "TS",
          "TT",
          "V",
          "V2",
          "VA",
          "VAN",
          "VB",
          "VC",
          "VF",
          "VG",
          "VH",
          "VI",
          "VL",
          "VM",
          "VN",
          "VN53",
          "VR48",
          "VR53",
          "VS",
          "VT",
          "VV",
          "VZ",
          "VR",
          "VRM",
          "VRZ",
          "VHC",
          "COFC",
          "CS",
          "RGE",
          "SD48",
          "SD53",
          "C20",
          "C40",
          "C53",
          "LTL",
          "OD",
          "INT",
          "AIR",
          "LCL",
          "CC20",
          "CC40",
          "CC48",
          "CC53",
          "CH20",
          "CH40",
          "CH48",
          "CH53",
          "HEAT",
          "CONE",
          "NA",
          "CargoVan",
          "Sprinter",
          "LS",
          "LSR",
          "HC40",
          "HCOC",
          "HHCC",
          "TRR",
          "MNV",
          "CBV",
          "18D",
          "22D",
          "24D",
          "28D",
          "VSPR",
          "VZM",
          "RZM"
        ]
      },
      "equipmentRequired": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Order"
          },
          {
            "type": "object",
            "properties": {
              "equipmentTypeCode": {
                "$ref": "#/components/schemas/equipmentTypeCode"
              },
              "equipmentCategoryCode": {
                "$ref": "#/components/schemas/equipmentCategoryCode"
              }
            },
            "required": [ "equipmentTypeCode", "equipmentCategoryCode" ]
          }
        ]
      },
      "equipmentNotRequired": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Order"
          },
          {
            "type": "object",
            "properties": {
              "equipmentTypeCode": {
                "$ref": "#/components/schemas/equipmentTypeCode"
              },
              "equipmentCategoryCode": {
                "$ref": "#/components/schemas/equipmentCategoryCode"
              }
            }
          }
        ]
      },
      "customerInvoiceRequest": {
        "type": "object",
        "properties": {
            "orderId": {
                "description": "Order Id",
                "type": "integer"
            },
            "partnerIdentifierCode": {
                "type": "string",
                "description": "Unique identifier for the Partners in XPO."
            },
            "from": {
                "type": "string",
                "description": "From Date to pull Invoices via date range (This is the invoice creation date)."
            },
            "to": {
                "type": "string",
                "description": "To Date to pull Invoices via date range (This is the invoice creation date)."
            },
            "shipmentNumber": {
                "type": "string",
                "description": "Shipment number."
            },
            "orderReferences": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "referenceType": {
                            "type": "string",
                            "description": "Order reference number type e.g. proNumber, bolNumber."
                        },
                        "referenceNumber": {
                            "type": "string",
                            "description": "Order reference number value."
                        }
                    }
                }
            }
        },
        "required": [ "partnerIdentifierCode" ],
        "example": {
            "orderId": 0,
            "partnerIdentifierCode": "2-1-TESTCHN2",
            "from": "2020-07-23T09:00:00-04:00",
            "to": "2020-07-25T10:00:00-05:00",
            "shipmentNumber": null,
            "orderReferences": [
                {
                    "referenceType": "proNumber",
                    "referenceNumber": "9661151"
                }
            ]
        }
      },
      "customerInvoiceResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "description": "Response Status Code."
          },
          "totalCount": {
            "type": "integer",
            "description": "Total result count in response."
          },
          "details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "customerBilling": {
                  "type": "object",
                  "properties": {
                    "invoiceNumber": {
                      "type": "string",
                      "description": "Unique Identifier for Invoice."
                    },
                    "invoiceDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date when invoice is generated."
                    },
                    "status": {
                      "type": "string",
                      "description": "Invoice Status e.g. New/In-Progress/Paid."
                    },
                    "invoiceType": {
                      "type": "string",
                      "description": "Type of invoice - customer / carrier."
                    },
                    "invoiceDueDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Invoice due date."
                    },
                    "shipmentNumber": {
                      "type": "string",
                      "description": "Shipment reference number."
                    },
                    "proNumber": {
                      "type": "string",
                      "description": "Pro number."
                    },
                    "paymentTerms": {
                      "type": "string",
                      "description": "Payment Terms."
                    },
                    "shipmentDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Shipment date."
                    },
                    "deliveryDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Delivry Date."
                    },
                    "distance": {
                      "type": "number",
                      "format": "double",
                      "description": "Billed distance in the invoice"
                    },
                    "distanceUnit": {
                      "type": "string",
                      "description": "Measuring unit of distance in the invoice"
                    },
                    "serviceType": {
                      "type": "string",
                      "description": "Service Type - Team/Single."
                    },
                    "payments": {
                      "type": "object",
                      "properties": {
                        "billedAmount": {
                          "type": "number",
                          "format": "double",
                          "description": "Billed Amount in invoice."
                        },
                        "totalPaymentsAdjustments": {
                          "type": "number",
                          "format": "double",
                          "description": "Total adjusted payment amount in invoice."
                        },
                        "balanceDue": {
                          "type": "number",
                          "format": "double",
                          "description": "Balance due."
                        },
                        "accessorialCharges": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "Accessorial code billed with items in the invoice."
                              },
                              "chargedAmount": {
                                "type": "number",
                                "format": "double",
                                "description": "Accessorial charged amount billed with items in the invoice."
                              },
                              "billedQuantity": {
                                "type": "number",
                                "format": "double",
                                "description": "Total number of items billed in the invoice."
                              },
                              "billedQuantityUom": {
                                "type": "string",
                                "description": "Unit of measure for the items."
                              }
                            }
                          },
                          "nullable": true
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "commodities": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Item's code."
                          },
                          "description": {
                            "type": "string",
                            "description": "Item's description."
                          }
                        }
                      }
                    },
                    "totalQuantity": {
                      "type": "integer",
                      "description": "Item's quantity."
                    },
                    "quantityUom": {
                      "type": "string",
                      "description": "Measuring unit for Item."
                    },
                    "totalWeight": {
                      "type": "number",
                      "format": "double",
                      "description": "Total weight."
                    },
                    "weightUom": {
                      "type": "string",
                      "description": "Weight measuring unit."
                    }
                  }
                },
                "addresses": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceAddress"
                  }
                },
                "stopsInformation": {
                  "type": "object",
                  "properties": {
                    "stopType": {
                      "type": "string",
                      "description": "Type of address."
                    },
                    "stopAddress": {
                      "type": "object",
                      "properties": {
                        "addressLine1": {
                          "type": "string",
                          "description": "Address Line1."
                        },
                        "addressLine2": {
                          "type": "string",
                          "description": "Address Line2."
                        },
                        "city": {
                          "type": "string",
                          "description": "City name."
                        },
                        "state": {
                          "type": "string",
                          "description": "State code."
                        },
                        "postalCode": {
                          "type": "string",
                          "description": "Postal code."
                        },
                        "countryCode": {
                          "type": "string",
                          "description": "Country code."
                        }
                      }
                    },
                    "contactDetails": {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string",
                          "description": "Contact person's first name."
                        },
                        "lastName": {
                          "type": "string",
                          "description": "Contact person's last name."
                        },
                        "email": {
                          "type": "string",
                          "description": "Contact person's email."
                        },
                        "phoneNumbers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Phone number type."
                              },
                              "number": {
                                "type": "string",
                                "description": "Phone number."
                              }
                            }
                          }
                        },
                        "title": {
                          "type": "string",
                          "description": "Contact person's title."
                        },
                        "isPrimary": {
                          "type": "boolean",
                          "description": "Is primary contact?"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                }
              }
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Error code."
                },
                "value": {
                  "type": "string",
                  "description": "Error details."
                }
              }
            }
          }
        },
        "example": {
          "statusCode": 200,
          "totalCount": 1,
          "details": [
            {
              "customerBilling": {
                "invoiceNumber": "9661151",
                "shipmentNumber": "01272021163237",
                "shipmentDate": "2021-01-28T00:00:00-05:00",
                "deliveryDate": "2021-01-30T00:00:00-05:00",
                "distance": 778.7000,
                "payments": {
                  "billedAmount": 2935.8400,
                  "totalPaymentsAdjustments": 0.0,
                  "balanceDue": 2935.8400,
                  "accessorialCharges": [
                    {
                      "code": "LNH",
                      "chargedAmount": 2935.8400,
                      "billedQuantity": 1.0000
                    }
                  ]
                }
              },
              "commodities": {
                "items": [
                  {
                    "code": "ACEQ",
                    "description": "AIR CONDITIONING EQUIPMENT"
                  }
                ],
                "totalQuantity": 10,
                "quantityUom": "BAGS ",
                "totalWeight": 500.0000,
                "weightUom": "LB"
              },
              "addresses": [
                {
                  "addressType": "Shipper",
                  "addressDetails": {
                    "addressLine1": "1800 North Clybourn Avenue",
                    "addressLine2": "",
                    "city": "Chicago",
                    "state": "IL",
                    "postalCode": "60606",
                    "countryCode": "USA"
                  },
                  "contactDetails": {
                    "firstName": "TestData Lname",
                    "phoneNumbers": [
                      {
                        "number": "7894561230"
                      }
                    ],
                    "isPrimary": true
                  }
                },
                {
                  "addressType": "Consignee",
                  "addressDetails": {
                    "addressLine1": "1234 Warehouse",
                    "addressLine2": "",
                    "city": "Richmond",
                    "state": "VA",
                    "postalCode": "23223",
                    "countryCode": "USA"
                  },
                  "contactDetails": {
                    "firstName": "TestData Lname",
                    "phoneNumbers": [
                      {
                        "number": "3312244433"
                      }
                    ],
                    "isPrimary": true
                  }
                }
              ],
              "stopsInformation": [
                {
                  "stopType": "Pickup",
                  "stopAddress": {
                    "addressLine1": "1800 North Clybourn Avenue",
                    "addressLine2": "",
                    "city": "Chicago",
                    "state": "IL",
                    "postalCode": "60606",
                    "countryCode": "USA"
                  },
                  "contactDetails": {
                    "firstName": "TestData Lname",
                    "phoneNumbers": [
                      {
                        "number": "7894561230"
                      }
                    ],
                    "isPrimary": true
                  }
                },
                {
                  "stopType": "Delivery",
                  "stopAddress": {
                    "addressLine1": "1234 Warehouse",
                    "addressLine2": "",
                    "city": "Richmond",
                    "state": "VA",
                    "postalCode": "23223",
                    "countryCode": "USA"
                  },
                  "contactDetails": {
                    "firstName": "TestData Lname",
                    "phoneNumbers": [
                      {
                        "number": "3312244433"
                      }
                    ],
                    "isPrimary": true
                  }
                }
              ]
            }
          ]
        }
      },
      "carrierInvoiceRequest": {
        "type": "object",
        "properties": {
          "orderNumber": {
            "description": "Order Number",
            "type": "integer"
          },
          "partnerIdentifierCode": {
            "type": "string",
            "description": "Unique identifier for the Partners in XPO."
          },
          "shipmentNumber": {
            "type": "string",
            "description": "Shipment number."
          },
          "orderReferences": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "referenceType": {
                  "type": "string",
                  "description": "Order reference number type e.g. proNumber, bolNumber."
                },
                "referenceNumber": {
                  "type": "string",
                  "description": "Order reference number value."
                }
              }
            }
          }
        },
        "required": [ "partnerIdentifierCode" ],
        "example": {
          "orderNumber": "9541587",
          "partnerIdentifierCode": "2-2-TESTCHN2",
          "shipmentNumber": null,
          "orderReferences": null
        }
      },
      "carrierInvoiceResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "description": "Response Status Code."
          },
          "totalCount": {
            "type": "integer",
            "description": "Total result count in response."
          },
          "details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "carrierBilling": {
                  "type": "object",
                  "properties": {
                    "invoiceNumber": {
                      "type": "string",
                      "description": "Unique Identifier for Invoice."
                    },
                    "invoiceDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date when invoice is generated."
                    },
                    "status": {
                      "type": "string",
                      "description": "Invoice Status e.g. New/In-Progress/Paid."
                    },
                    "orderStatus": {
                      "type": "string",
                      "description": "Order Status e.g. Delivered."
                    },
                    "invoiceType": {
                      "type": "string",
                      "description": "Type of invoice - customer / carrier."
                    },
                    "invoiceDueDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Invoice due date."
                    },
                    "carrierName": {
                      "type": "string",
                      "description": "Name of Carrier."
                    },
                    "carrierRep": {
                      "type": "string",
                      "description": "Carrier Representative Name."
                    },
                    "settledDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Settled date."
                    },
                    "approvedDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Approved date."
                    },
                    "salesRep": {
                      "type": "string",
                      "description": "Sales Representative Name."
                    },
                    "currencyCode": {
                      "type": "string",
                      "description": "Currency Code."
                    },
                    "payments": {
                      "type": "object",
                      "properties": {
                        "amountPaid": {
                          "type": "number",
                          "format": "double",
                          "description": "Aount Paids."
                        },
                        "balanceDue": {
                          "type": "number",
                          "format": "double",
                          "description": "Balance due."
                        },
                        "achChequeNumber": {
                          "type": "string",
                          "description": "Cheque Number Reference."
                        },
                        "achChequeDate": {
                          "type": "string",
                          "description": "Cheque Date."
                        },
                        "mcNumber": {
                          "type": "string",
                          "description": "MCNumber."
                        },
                        "paymentTerms": {
                          "type": "string",
                          "description": "Payment terms."
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "addresses": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceAddress"
                  }
                }
              }
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Error code."
                },
                "value": {
                  "type": "string",
                  "description": "Error details."
                }
              }
            }
          }
        },
        "example": {
          "statusCode": 200,
          "totalCount": 1,
          "details": [
            {
              "carrierBilling": {
                "invoiceNumber": "2114278-0-A",
                "invoiceDate": "2020-11-28T00:00:00-05:00",
                "orderStatus": "Delivered",
                "carrierName": "XPO LOGISTICS EXPRESS LLC",
                "carrrierRep": "Lesterlot Lara Lagunas",
                "salesRep": "Nathaniel Wheeling",
                "settledDate": "2020-12-17T00:00:00-05:00",
                "approvedDate": "2020-12-17T00:00:00-05:00",
                "payments": {
                  "balanceDue": 610.0000,
                  "amountPaid": 0.0000,
                  "mcNumber": "219694",
                  "paymentTerms": "1 Day Terms"
                }
              },
              "addresses": [
                {
                  "addressType": "PayTo",
                  "addressDetails": {
                    "addressLine1": "",
                    "addressLine2": "",
                    "city": "Buchanan",
                    "postalCode": "49107",
                    "countryCode": "USA"
                  }
                }
              ]
            }
          ]
        }
      },
      "shipmentSearchRequest": {
        "type": "object",
        "properties": {
          "shipmentStatus": {
            "type": "string",
            "description": "Status of the shipment (All,NotStarted,InRoute,Delivered)"
          },
          "estimateTimeArrival": {
            "type": "object",
            "properties": {
              "fromDate": {
                "type": "string",
                "description": "Booking From date"
              },
              "toDate": {
                "t": null,
                "type": "string",
                "description": "Booking To Date"
              }
            }
          },
          "estimateTimeDeparture": {
            "type": "object",
            "properties": {
              "fromDate": {
                "type": "string",
                "description": "Booking To (from date)"
              },
              "toDate": {
                "type": "string",
                "description": "Booking To (to Date)"
              }
            }
          },
          "lastUpdatedOn": {
            "type": "object",
            "properties": {
              "fromDate": {
                "type": "string",
                "description": "Last Updated On (from date)"
              },
              "toDate": {
                "type": "string",
                "description": "Last Updated On (to Date)"
              }
            }
          },
          "referenceNumbers": {
            "description": "This collection contains the reference number details associated with this shipment.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Reference Type."
                },
                "value": {
                  "type": "string",
                  "description": "Reference Value."
                }
              }
            }
          },
          "partnerIdentifierCode": {
            "type": "string",
            "description": "Unique identifier for the Partners in XPO."
          },
          "pageNumber": {
            "type": "string",
            "description": "Allows partner to set which page of the result to consume"
          },
          "pageSize": {
            "type": "string",
            "description": "Allows partner to set how many results are included in a page."
          }
        },
        "required": [ "partnerIdentifierCode" ],
        "example": {
          "shipmentNumber": 1,
          "shipmentStatus": "Delivered",
          "estimateTimeArrival": {
            "fromDate": "2021-03-07T00:00:00+00:00",
            "toDate": "2021-03-09T00:00:00+00:00"
          },
          "estimateTimeDeparture": {
            "fromDate": "2021-03-10T00:00:00+00:00",
            "toDate": "2021-03-11T00:00:00+00:00"
          },
          "lastUpdatedOn": {
            "fromDate": "2021-03-08T00:00:00+00:00",
            "toDate": "2021-03-08T00:00:00+00:00"
          },
          "referenceNumbers": [
            {
              "type": "",
              "value": ""
            }
          ],
          "partnerIdentifierCode": "10-1-TESTCHN2",
          "pageNumber": 1,
          "pageSize": 50
        }
      },
      "shipmentSearchResponse": {
        "type": "object",
        "properties": {
          "shipments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "shipmentNumber": {
                  "type": "string",
                  "description": "This field represents the unique shipment number generated from TMS"
                },
                "masterBillNumber": {
                  "type": "string",
                  "description": "master bill number"
                },
                "houseBillNumber": {
                  "type": "string",
                  "description": "house bill number"
                },
                "globalTrackingNumber": {
                  "type": "string",
                  "description": "XPO Global Tracking number"
                },
                "shipmentMode": {
                  "type": "string",
                  "description": "This represents mode of transportation"
                },
                "originSiteName": {
                  "type": "string",
                  "description": "Origin location site "
                },
                "estimatedPickupDate": {
                  "type": "string",
                  "description": "Estimated pickup date"
                },
                "estimatedPickupTime": {
                  "type": "string",
                  "description": "Estimated pickup time"
                },
                "destinationSiteName": {
                  "type": "string",
                  "description": "Destination location site"
                },
                "estimatedDeliveryDate": {
                  "type": "string",
                  "description": "Estimated delivery date"
                },
                "estimatedDeliveryTime": {
                  "type": "string",
                  "description": "Estimated delivery time"
                },
                "shipper": {
                  "type": "string",
                  "description": "Shipper name"
                },
                "consignee": {
                  "type": "string",
                  "description": "Consignee name"
                },
                "milestone": {
                  "type": "string",
                  "description": "Milestone"
                },
                "shipmentStatus": {
                  "type": "string",
                  "description": "Status of shipment"
                }

              }
            },
            "description": "Shipment Information"
          },
          "totalItemCount": {
            "type": "string",
            "description": "total count of shipments"
          },
          "currentPage": {
            "type": "string",
            "description": "current page number"
          },
          "pageSize": {
            "type": "string",
            "description": "count of shipments in a single page"
          },
          "totalPagesCount": {
            "type": "string",
            "description": "Total page available for the filter applied"
          }
        },
        "example": {
          "shipments": [
            {
              "shipmentNumber": 10389921,
              "shipmentMode": "SEA",
              "masterBillNumber": "TESTBOLNOTI0316",
              "houseBillNumber": "TESTNOTI1603",
              "globalTrackingNumber": "XPOTESTNOTI1603",
              "originSiteName": "CNNGB - NINGBO",
              "estimatedPickupDate": "2021-03-16",
              "estimatedPickupTime": "00:00",
              "destinationSiteName": "USMKE - MILWAUKEE",
              "estimatedDeliveryDate": "2021-03-23",
              "estimatedDeliveryTime": "00:53",
              "shipper": "FANTASTIC IDEAS INTERNATIONAL TRADING CO LTD",
              "consignee": "Generic Customer ENTERPRISES",
              "milestone": "Delivered MKE",
              "shipmentStatus": "Delivered"
            }
          ],
          "totalItemCount": 986,
          "currentPage": 1,
          "pageSize": 50,
          "totalPagesCount": 20
        }
      },
      "shipmentDetailsResponse": {
        "type": "object",
        "properties": {
          "shipmentDetails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "globalTrackingNumber": {
                  "type": "string",
                  "description": "XPO Global Tracking number"
                },
                "shipmentNumber": {
                  "type": "string",
                  "description": "This field represents the unique shipment number generated from TMS"
                },
                "masterBillNumber": {
                  "type": "string",
                  "description": "Master booking number"
                },
                "houseBillNumber": {
                  "type": "string",
                  "description": "House Bill Number"
                },
                "transportMode": {
                  "type": "string",
                  "description": "This represents mode of transportation"
                },
                "estimatedDeparture": {
                  "type": "string",
                  "description": "Estimated departure date"
                },
                "estimatedArrival": {
                  "type": "string",
                  "description": "Estimated arrival date"
                },
                "insuranceValue": {
                  "type": "string",
                  "description": "Insurance Value"
                },
                "insuranceValueCurrency": {
                  "type": "string",
                  "description": "insurance Value Currency"
                },
                "insuranceType": {
                  "type": "string",
                  "description": "Insurance Type"
                },
                "goodsDescription": {
                  "type": "string",
                  "description": "Description of good transported"
                },
                "serviceLevel": {
                  "type": "string",
                  "description": "Service Level"
                },
                "payCode": {
                  "type": "string",
                  "description": "Pay Code"
                },
                "totalQuantity": {
                  "type": "string",
                  "description": "total qunatity being shipped"
                },
                "totalWeight": {
                  "type": "string",
                  "description": "total weight of goods transported"
                },
                "chargeableWeight": {
                  "type": "string",
                  "description": "Chargeable Weight"
                },
                "weightUom": {
                  "type": "string",
                  "description": "weightUom"
                },
                "origin": {
                  "type": "string",
                  "description": "Origin location name"
                },
                "destination": {
                  "type": "string",
                  "description": "Destination location name"
                },
                "incoTerms": {
                  "type": "string",
                  "description": "Inco Terms"
                },
                "additionalTerms": {
                  "type": "string",
                  "description": "Additional Terms"
                },
                "lastMilestone": {
                  "type": "string",
                  "description": "last milestone"
                },
                "lastMilestoneDate": {
                  "type": "string",
                  "description": "Date for last milestone"
                },
                "importBrokerCode": {
                  "type": "string",
                  "description": "Import Broker Code"
                },
                "importBrokerName": {
                  "type": "string",
                  "description": "Import Broker Name"
                },
                "exportBrokerCode": {
                  "type": "string",
                  "description": "Export Broker Code"
                },
                "exportBrokerName": {
                  "type": "string",
                  "description": "Export Broker Name"
                },
                "locations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "locationType": {
                        "type": "string",
                        "description": "",
                        "enum": [
                          "Pickup",
                          "Delivery"
                        ]
                      },
                      "organizationCode": {
                        "type": "string",
                        "description": "Organization Code"
                      },
                      "organizationName": {
                        "type": "string",
                        "description": "Organization Name"
                      },
                      "address1": {
                        "type": "string",
                        "description": "Address line 1"
                      },
                      "address2": {
                        "type": "string",
                        "description": "Address line 2"
                      },
                      "city": {
                        "type": "string",
                        "description": "City"
                      },
                      "stateProvince": {
                        "type": "string",
                        "description": "State"
                      },
                      "postalCode": {
                        "type": "string",
                        "description": "Postal code"
                      },
                      "countryCode": {
                        "type": "string",
                        "description": "Country code"
                      },
                      "countryName": {
                        "type": "string",
                        "description": "Country Name"
                      },
                      "reference": {
                        "type": "string",
                        "description": "Reference"
                      },
                      "instructions": {
                        "type": "string",
                        "description": "Instructions"
                      }
                    }
                  },
                  "description": "Location Details"
                },
                "pickupDetails": {
                  "type": "object",
                  "properties": {
                    "shippersReference": {
                      "type": "string",
                      "description": "Reference of shipper"
                    },
                    "instructions": {
                      "type": "string",
                      "description": "Instruction for pickup"
                    },
                    "estimatedPickup": {
                      "type": "string",
                      "description": "Estimated date/time for Pickup"
                    },
                    "actualPickup": {
                      "type": "string",
                      "description": "Actual pickup date/time"
                    },
                    "readyTime": {
                      "type": "string",
                      "description": "Ready Time"
                    },
                    "closeTime": {
                      "type": "string",
                      "description": "Close Time"
                    },
                    "requestedBy": {
                      "type": "string",
                      "description": "Requested By"
                    }
                  },
                  "description": "Details of pickup"
                },
                "deliveryDetails": {
                  "type": "object",
                  "properties": {
                    "consigneeReference": {
                      "type": "string",
                      "description": "Reference of consignee"
                    },
                    "instructions": {
                      "type": "string",
                      "description": "Instruction for delivery"
                    },
                    "estimatedDelivery": {
                      "type": "string",
                      "description": "Estimated delivery date/time"
                    },
                    "actualDelivery": {
                      "type": "string",
                      "description": "Actual delivery date/time"
                    },
                    "requestedBy": {
                      "type": "string",
                      "description": "Requested By"
                    }
                  },
                  "description": "Details of delivery"
                },
                "notes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Type"
                      },
                      "value": {
                        "type": "string",
                        "description": "Value"
                      }
                    }
                  },
                  "description": "Notes"
                },
                "orders": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "orderNumber": {
                        "type": "string",
                        "description": "Order Number"
                      },
                      "clientReference": {
                        "type": "string",
                        "description": "Client reference number for order"
                      },
                      "orderLines": {
                        "type": "object",
                        "properties": {},
                        "description": "Details of line items in order"
                      },
                      "references": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Code"
                          },
                          "value": {
                            "type": "string",
                            "description": "Value"
                          }
                        },
                        "description": "References in shipment level"
                      }
                    }
                  },
                  "description": "Order Details"
                },
                "packingLineDetails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "productNumber": {
                        "type": "string",
                        "description": "Product Number"
                      },
                      "packageQuantity": {
                        "type": "string",
                        "description": "Package Quantity"
                      },
                      "packageUOM": {
                        "type": "string",
                        "description": "PackageUOM"
                      },
                      "height": {
                        "type": "string",
                        "description": "Height"
                      },
                      "length": {
                        "type": "string",
                        "description": "Length"
                      },
                      "width": {
                        "type": "string",
                        "description": "Width"
                      },
                      "hlwUom": {
                        "type": "string",
                        "description": "hlwUom"
                      },
                      "weight": {
                        "type": "string",
                        "description": "Weight"
                      },
                      "wightUom": {
                        "type": "string",
                        "description": "wightUom"
                      },
                      "volume": {
                        "type": "string",
                        "description": "Volume"
                      },
                      "volumeUom": {
                        "type": "string",
                        "description": "volumeUom"
                      },
                      "poNumber": {
                        "type": "string",
                        "description": "poNumber"
                      },
                      "containerLinkNum": {
                        "type": "string",
                        "description": "Container Link Number"
                      },
                      "containerNumber": {
                        "type": "string",
                        "description": "Container Number"
                      },
                      "references": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "Code"
                            },
                            "value": {
                              "type": "string",
                              "description": "Value"
                            }
                          }
                        },
                        "description": "References"
                      }

                    }
                  },
                  "description": "Details of packaging line items"
                },
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "itemCode": {
                        "type": "string",
                        "description": "Item Code"
                      },
                      "description": {
                        "type": "string",
                        "description": "Item Description"
                      },
                      "quantity": {
                        "type": "string",
                        "description": "Quantity"
                      },
                      "quanityUom": {
                        "type": "string",
                        "description": "quanityUom"
                      },
                      "length": {
                        "type": "string",
                        "description": "Length"
                      },
                      "width": {
                        "type": "string",
                        "description": "Width"
                      },
                      "height": {
                        "type": "string",
                        "description": "Height"
                      },
                      "hlwUom": {
                        "type": "string",
                        "description": "hlwUom"
                      },
                      "commodityCode": {
                        "type": "string",
                        "description": "Commodity Code"
                      },
                      "serialNumber": {
                        "type": "string",
                        "description": "Serial Number"
                      },
                      "containerNumber": {
                        "type": "string",
                        "description": "containerNumber"
                      },
                      "packagingDetails": {
                        "type": "object",
                        "properties": {},
                        "description": "Packaging Details"
                      },
                      "packingLineReferenceNumbers": {
                        "type": "object",
                        "properties": {},
                        "description": "Packing Line Reference Numbers"
                      }
                    }
                  },
                  "description": "Items details"
                },
                "containers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "linkNum": {
                        "type": "string",
                        "description": "Link Number"
                      },
                      "containerNumber": {
                        "type": "string",
                        "description": "Unique identifier for container"
                      },
                      "sealNumber": {
                        "type": "string",
                        "description": "Seal Number"
                      },
                      "goodsWeight": {
                        "type": "string",
                        "description": "Goods Weight"
                      },
                      "grossWeight": {
                        "type": "string",
                        "description": "Gross Weight"
                      },
                      "tareWeight": {
                        "type": "string",
                        "description": "Tare Weight"
                      },
                      "grossWeightUom": {
                        "type": "string",
                        "description": "grossWeightUom"
                      },
                      "estimatedPickUp": {
                        "type": "string",
                        "description": "Estimated Pick Up Date/Time"
                      },
                      "actualPickUp": {
                        "type": "string",
                        "description": "Actual Pick Up Date/Time"
                      },
                      "wharfGateOut": {
                        "type": "string",
                        "description": "wharfGateOut Date/Time"
                      },
                      "estimatedFullDelivery": {
                        "type": "string",
                        "description": "Estimated Full Delivery Date/Time"
                      },
                      "actualFullDelivery": {
                        "type": "string",
                        "description": "Actual Full Delivery Date/Time"
                      },
                      "emptyReturnReqBy": {
                        "type": "string",
                        "description": "Empty Return Request By"
                      },
                      "emptyReturnedOn": {
                        "type": "string",
                        "description": "empty Returned On"
                      },
                      "export": {
                        "type": "object",
                        "properties": {
                          "emptyRequiredBy": {
                            "type": "string",
                            "description": "Empty Required By"
                          },
                          "emptyReleasedFromCY": {
                            "type": "string",
                            "description": "Empty Released From CY"
                          },
                          "estimatedPickup": {
                            "type": "string",
                            "description": "Estimated pickup date/time"
                          },
                          "actualPickup": {
                            "type": "string",
                            "description": "Actual pick up date/time for container"
                          },
                          "fCLGateIn": {
                            "type": "string",
                            "description": "This field represents when did the container gate in at the port"
                          },
                          "fCLVesselLoaded": {
                            "type": "string",
                            "description": "This field represents when did the vessel get loaded"
                          }
                        },
                        "description": "Container information at origin side"
                      },
                      "import": {
                        "type": "object",
                        "properties": {
                          "fCLUnload": {
                            "type": "string",
                            "description": "when did the container physically unloaded from vessel"
                          },
                          "gateOut": {
                            "type": "string",
                            "description": "when did the container leave the gate"
                          },
                          "estimatedFullDelivery": {
                            "type": "string",
                            "description": "End customer estimated date/time for full delivery"
                          },
                          "actualFullDelivery": {
                            "type": "string",
                            "description": "End customer actual date/time for full delivery"
                          },
                          "emptyReturnReqBy": {
                            "type": "string",
                            "description": "Empty Return Requested By"
                          },
                          "emptyReturnOn": {
                            "type": "string",
                            "description": "Empty Return On"
                          }
                        },
                        "description": "Container information at destination side"
                      },
                      "containerType": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Code"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description"
                          },
                          "ISOCode": {
                            "type": "string",
                            "description": "ISOCode"
                          }
                        },
                        "description": "Container Type"
                      },
                      "reference": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Code"
                          },
                          "value": {
                            "type": "string",
                            "description": "Value"
                          }
                        },
                        "description": "Reference"
                      }
                    }
                  },
                  "description": "Containers Details"
                },
                "transportLegs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "legOrder": {
                        "type": "string",
                        "description": "order in which legs are executed"
                      },
                      "mode": {
                        "type": "string",
                        "description": "Mode of transport"
                      },
                      "type": {
                        "type": "string",
                        "description": "Type"
                      },
                      "vessel": {
                        "type": "string",
                        "description": "Vessel number"
                      },
                      "voyageFlightNum": {
                        "type": "string",
                        "description": "Voyage Flight Number"
                      },
                      "portOfLoading": {
                        "type": "string",
                        "description": "Port of landing"
                      },
                      "portOfLoadingName": {
                        "type": "string",
                        "description": "Name of port of landing"
                      },
                      "portOfDischarge": {
                        "type": "string",
                        "description": "Name of port of Discharge"
                      },
                      "portOfDischargeName": {
                        "type": "string",
                        "description": "Name of port of discharge"
                      },
                      "estimatedTimeOfArrival": {
                        "type": "string",
                        "description": "Estimated Time Of Arrival Date/Time"
                      },
                      "estimatedTimeOfDeparture": {
                        "type": "string",
                        "description": "Estimated Time Of Departure Date/Time"
                      },
                      "actualTimeOfArrival": {
                        "type": "string",
                        "description": "Actual Time Of Arrival Date/Time"
                      },
                      "actualTimeOfDeparture": {
                        "type": "string",
                        "description": "Actual Time Of Departure Date/Time"
                      },
                      "carrier": {
                        "type": "object",
                        "properties": {
                          "carrierCode": {
                            "type": "string",
                            "description": "Carrier Code"
                          },
                          "carrierName": {
                            "type": "string",
                            "description": "Carrier Name"
                          },
                          "carrierSCAC": {
                            "type": "string",
                            "description": "Carrier SCAC"
                          },
                          "reference": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "description": "Code"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Value"
                                }
                              }
                            },
                            "description": "Transport leg references"
                          }
                        },
                        "description": "Carriers for the Legs"
                      }
                    }
                  },
                  "description": "Transport information of shipment"
                },
                "shipmentReferences": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Code"
                      },
                      "value": {
                        "type": "string",
                        "description": "Value"
                      }
                    }
                  },
                  "description": "Shipment References"
                }
              },
              "description": "Shipment Information"
            }
          }
        },
        "required": [ "shipmentNumber" ],
        "example": {
          "shipmentDetails": [
            {
              "globalTrackingNumber": "",
              "shipmentNumber": "S21CXXXXXX",
              "masterBillNumber": "MAER32XXXXXX",
              "houseBillNumber": "XBJ21XXXXXX",
              "transportMode": "SEA",
              "estimatedDeparture": "2021-03-08T00:00:00+00:00",
              "estimatedArrival": "2021-04-08T10:20:00+00:00",
              "insuranceValue": "",
              "insuranceValueCurrency": "",
              "insuranceType": "",
              "goodsDescription": "good desc example",
              "serviceLevel": "STD",
              "payCode": "",
              "totalQuantity": 232,
              "totalWeight": 8468.0000,
              "weightUom": "KG",
              "origin": "",
              "destination": "",
              "incoTerms": "EXW",
              "additionalTerms": "add trem ex",
              "lastMilestone": "Booking Confirmed",
              "lastMilestoneDate": "2021-04-11T01:09:07.39+00:00",
              "importBrokerCode": "",
              "importBrokerName": "",
              "exportBrokerCode": "",
              "exportBrokerName": "",
              "locations": [
                {
                  "locationType": "Shipper",
                  "organizationCode": "Shipper",
                  "organizationName": "NANTONG FUHUANG ",
                  "address1": "NO. 508 NAMHAI EAST RD",
                  "address2": "ATTN: MISS CHEN",
                  "city": "HAIMEN JIANGSU ",
                  "stateProvince": "32",
                  "postalCode": "223XXX",
                  "countryCode": "CN",
                  "countryName": "CN",
                  "reference": "",
                  "instructions": ""
                },
                {
                  "locationType": "Consignee",
                  "organizationCode": "Consignee",
                  "organizationName": "XYZ Group Inc",
                  "address1": "77 E 12th St",
                  "address2": "",
                  "city": "New York",
                  "stateProvince": "NY",
                  "postalCode": "100XX",
                  "countryCode": "US",
                  "countryName": "US",
                  "reference": "",
                  "instructions": ""
                }
              ],
              "pickupDetails": {
                "shippersReference": "",
                "instructions": "",
                "estimatedPickup": "2021-03-11T04:06:00+00:00",
                "actualPickup": "2021-03-12T00:40:00+00:00",
                "readyTime": "2021-03-11T04:06:00+00:00",
                "closeTime": "",
                "requestedBy": ""
              },
              "deliveryDetails": {
                "consigneeReference": "",
                "instructions": "",
                "estimatedDelivery": "2021-04-08T10:20:00+00:00",
                "actualDelivery": "2021-04-09T09:14:00+00:00",
                "requestedBy": ""
              },
              "notes": [
                {
                  "type": "Marks & Numbers",
                  "value": "mark ex"
                },
                {
                  "type": "Special Instructions",
                  "value": "Special instructions example"
                }
              ],
              "orders": [],
              "packingLineDetails": [
                {
                  "productNumber": "2",
                  "packageQuantity": 200,
                  "packageUOM": "CTN",
                  "height": 3.0000,
                  "length": 2.0000,
                  "width": 1.0000,
                  "hlwUom": "M",
                  "weight": 8000.0000,
                  "wightUom": "KG",
                  "volume": 1200.0000,
                  "volumeUom": "M3",
                  "poNumber": "",
                  "containerLinkNum": "KASA031XXXX",
                  "containerNumber": "KASA031XXXX",
                  "references": [
                    {
                      "code": "Item Number",
                      "value": "ITEMNUM1"
                    },
                    {
                      "code": "PO Number",
                      "value": "PO 23y67"
                    },
                    {
                      "code": "Inner Qty",
                      "value": "100.000"
                    },
                    {
                      "code": "Inner Qty UOM",
                      "value": "PCS"
                    }
                  ]
                },
                {
                  "productNumber": "2",
                  "packageQuantity": 32,
                  "packageUOM": "CTN",
                  "height": 6.0000,
                  "length": 5.0000,
                  "width": 4.0000,
                  "hlwUom": "IN",
                  "weight": 468.0000,
                  "wightUom": "KG",
                  "volume": 0.0630,
                  "volumeUom": "M3",
                  "poNumber": "",
                  "containerLinkNum": "SBVD927XXXX",
                  "containerNumber": "SBVD927XXXX",
                  "references": [
                    {
                      "code": "Item Number",
                      "value": "ITEMXXXX"
                    },
                    {
                      "code": "PO Number",
                      "value": "PO y8g74"
                    },
                    {
                      "code": "Inner Qty",
                      "value": "115.000"
                    },
                    {
                      "code": "Inner Qty UOM",
                      "value": "PCS"
                    }
                  ]
                }
              ],
              "items": [
                {
                  "itemCode": "2",
                  "description": "good desc example",
                  "quantity": 200,
                  "quanityUom": "CTN",
                  "length": 2.0000,
                  "width": 1.0000,
                  "height": 3.0000,
                  "hlwUom": "M",
                  "commodityCode": "GEN",
                  "serialNumber": 1,
                  "containerNumber": "KASA031XXXX",
                  "packagingDetails": {},
                  "packingLineReferenceNumbers": {}
                },
                {
                  "itemCode": "2",
                  "description": "good desc example",
                  "quantity": 32,
                  "quanityUom": "CTN",
                  "length": 5.0000,
                  "width": 4.0000,
                  "height": 6.0000,
                  "hlwUom": "IN",
                  "commodityCode": "GEN",
                  "serialNumber": 2,
                  "containerNumber": "SBVD9XXXXXX",
                  "packagingDetails": {},
                  "packingLineReferenceNumbers": {}
                }
              ],
              "containers": [
                {
                  "linkNum": "",
                  "containerNumber": "KASA0XXXXXX",
                  "sealNumber": "2840000",
                  "goodsWeight": 28411.6570,
                  "grossWeight": 28411.6570,
                  "tareWeight": 20411.6570,
                  "grossWeightUom": "KG",
                  "estimatedPickUp": "2021-03-10T23:06:00-05:00",
                  "actualPickUp": "2021-03-11T19:40:00-05:00",
                  "wharfGateOut": "2021-03-30T20:00:00-04:00",
                  "estimatedFullDelivery": "2021-04-08T06:20:00-04:00",
                  "actualFullDelivery": "2021-04-09T05:14:00-04:00",
                  "emptyReturnReqBy": "2021-03-06T19:00:00-05:00",
                  "emptyReturnedOn": "2021-03-28T20:00:00-04:00",
                  "containerType": {
                    "code": "40STD",
                    "description": "KASA0XXXXXX"
                  }
                },
                {
                  "containerNumber": "SBVD9XXXXXX",
                  "sealNumber": "08537",
                  "goodsWeight": 468.0000,
                  "grossWeight": 468.0000,
                  "tareWeight": 0.0000,
                  "grossWeightUom": "KG",
                  "estimatedPickUp": "2021-03-10T19:00:00-05:00",
                  "actualPickUp": "2021-03-11T19:00:00-05:00",
                  "wharfGateOut": "2021-03-29T20:00:00-04:00",
                  "estimatedFullDelivery": "2021-04-06T20:00:00-04:00",
                  "actualFullDelivery": "2021-04-09T05:14:00-04:00",
                  "emptyReturnReqBy": "2021-03-06T19:00:00-05:00",
                  "emptyReturnedOn": "2021-03-28T20:00:00-04:00",
                  "export": {
                    "emptyRequiredBy": "",
                    "emptyReleasedFromCY": "",
                    "estimatedPickup": "",
                    "actualPickup": "",
                    "fCLGateIn": "",
                    "fCLVesselLoaded": ""
                  },
                  "import": {
                    "FCLUnload": "",
                    "GateOut": "",
                    "EstimatedFullDelivery": "",
                    "ActualFullDelivery": "",
                    "EmptyReturnReqBy": "",
                    "EmptyReturnOn": ""
                  },
                  "containerType": {
                    "code": "20GP",
                    "description": "SBVD9XXXXXX",
                    "ISOCode": ""
                  },
                  "reference": {
                    "code": "20GP",
                    "value": ""
                  }
                }
              ],
              "transportLegs": [
                {
                  "legOrder": 0,
                  "mode": "",
                  "type": "",
                  "vessel": "",
                  "voyageFlightNum": "",
                  "portOfLoading": "CNSHA",
                  "portOfLoadingName": "Shanghai Hongqiao International Apt",
                  "portOfDischarge": "CNLYG",
                  "portOfDischargeName": "NANTONG FUHUANG FURNITURE",
                  "estimatedTimeOfArrival": "",
                  "estimatedTimeOfDeparture": "2021-03-11T04:06:00+00:00",
                  "actualTimeOfArrival": "",
                  "actualTimeOfDeparture": "2021-03-12T00:40:00+00:00",
                  "carrier": {
                    "references": [
                      {
                        "code": "LT",
                        "value": "Main"
                      }
                    ]
                  },
                  "references": {
                    "code": "",
                    "value": ""
                  }
                },
                {
                  "legOrder": 252,
                  "mode": "",
                  "portOfLoading": "USNYC",
                  "portOfLoadingName": "Mohawk Group Inc",
                  "portOfDischarge": "USNYC",
                  "portOfDischargeName": "New York",
                  "estimatedTimeOfArrival": "2021-04-08T10:20:00+00:00",
                  "actualTimeOfArrival": "2021-04-09T09:14:00+00:00",
                  "carrier": {
                    "references": [
                      {
                        "code": "LT",
                        "value": "Main"
                      }
                    ]
                  },
                  "references": {
                    "code": "",
                    "value": ""
                  }
                },
                {
                  "legOrder": 1,
                  "mode": "Sea",
                  "vessel": "EMPRESS DRAGON",
                  "voyageFlightNum": "324565",
                  "portOfLoading": "USNYC",
                  "portOfLoadingName": "New York",
                  "portOfDischarge": "CNSHA",
                  "portOfDischargeName": "Shanghai Hongqiao International Apt",
                  "estimatedTimeOfArrival": "2021-04-07T03:14:00+00:00",
                  "estimatedTimeOfDeparture": "2021-03-08T02:07:00+00:00",
                  "carrier": {
                    "carrierCode": "MAERSK_YY",
                    "carrierName": "MAERSK",
                    "carrierSCAC": "MAEU",
                    "references": [
                      {
                        "code": "LT",
                        "value": "Main"
                      }
                    ]
                  },
                  "references": {
                    "code": "",
                    "value": ""
                  }
                }
              ],
              "shipmentReferences": [
                {
                  "code": "Ex Works",
                  "value": "EXW"
                },
                {
                  "code": "Standard",
                  "value": "STD"
                },
                {
                  "code": "Original Bill Required at Destination",
                  "value": "OBR"
                },
                {
                  "code": "Full Container Load",
                  "value": "FCL"
                },
                {
                  "code": "Shipment ID #",
                  "value": "S21CXXXXXX"
                },
                {
                  "code": "Shipment Status",
                  "value": "BOOKED"
                },
                {
                  "code": "Cargo Ready Date",
                  "value": "2021-03-04T00:00:00"
                },
                {
                  "code": "Actual SO Release Date",
                  "value": "2021-03-06T00:00:00"
                },
                {
                  "code": "SI Cut Off",
                  "value": "2021-03-05T00:00:00"
                },
                {
                  "code": "Controlling Office/Agent",
                  "value": "DEST"
                },
                {
                  "code": "Entry Details",
                  "value": "ENSXXXXX"
                },
                {
                  "code": "Shipment Status",
                  "value": "Booking Confirmed"
                }
              ]
            }
          ]
        }
      },
      "InvoiceAddress": {
        "type": "object",
        "properties": {
          "addressType": {
            "type": "string"
          },
          "addressDetails": {
            "type": "object",
            "properties": {
              "addressLine1": {
                "type": "string",
                "description": "Address Line1."
              },
              "addressLine2": {
                "type": "string",
                "description": "Address Line2."
              },
              "city": {
                "type": "string",
                "description": "City name."
              },
              "state": {
                "type": "string",
                "description": "State code."
              },
              "postalCode": {
                "type": "string",
                "description": "Postal code."
              },
              "countryCode": {
                "type": "string",
                "description": "Country code."
              }
            }
          },
          "contactDetails": {
            "type": "object",
            "properties": {
              "firstName": {
                "type": "string",
                "description": "First name of contact person."
              },
              "lastName": {
                "type": "string",
                "description": "Last name of contact person."
              },
              "email": {
                "type": "string",
                "description": "Email for communication."
              },
              "phoneNumbers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Phone number types.",
                      "enum": [ "MOBILE", "WORK", "HOME" ]
                    },
                    "number": {
                      "type": "string",
                      "description": "Contact number."
                    }
                  }
                },
                "description": "Primary and alternate numbers for communication."
              },
              "title": {
                "type": "string",
                "description": "Title of contact person."
              },
              "isPrimary": {
                "type": "boolean",
                "description": "Is it the primary contact information?."
              }
            }
          }
        }
      },
      "shipmentBookingRequest": {
        "type": "object",
        "properties": {
          "masterBillNumber": {
            "type": "string",
            "description": "Carriers unique tracking number for entire booking."
          },
          "partnerIdentifierCode": {
            "type": "string",
            "description": "Partner identifier code used to uniquely identify the partner."
          },
          "shipment": {
            "description": "This object holds the data of shipments under master bill number.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "houseBillNumber": {
                  "type": "string",
                  "description": "Required if request contains more than one shipment object."
                },
                "transportMode": {
                  "type": "string",
                  "description": "Mode of Transportation such as TL, LTL, Air, Ocean etc."
                },
                "goodsDescription": {
                  "type": "string",
                  "description": "Description of goods."
                },
                "totalQuantity": {
                  "type": "int",
                  "description": "Total quantity being shipped."
                },
                "quantityUomCode": {
                  "type": "string",
                  "description": "Unit of measurement for quantity."
                },
                "totalWeight": {
                  "type": "int",
                  "description": "Total weight of goods transported."
                },
                "chargeableWeight": {
                  "type": "int",
                  "description": "Total chargeable weight of goods transported."
                },
                "weightUomCode": {
                  "type": "string",
                  "description": "Unit of measurement for weight."
                },
                "originCode": {
                  "type": "string",
                  "description": "UNLOC Code of origin."
                },
                "originETD": {
                  "type": "string",
                  "description": "Main carrier first port estimated item of delivery."
                },
                "destinationCode": {
                  "type": "string",
                  "description": "UNLOC Code of destination."
                },
                "destinationETA": {
                  "type": "string",
                  "description": "Main carrier first port estimated time of arrival."
                },
                "incoTermsCode": {
                  "type": "string",
                  "description": ""
                },
                "additionalTerms": {
                  "type": "string",
                  "description": ""
                },
                "location": {
                  "description": "This holds the array of locations for this shipment including pickup  and destination location.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "locationType": {
                        "type": "string",
                        "description": "Type of location, such as Pickup or Delivery."
                      },
                      "locationCode": {
                        "type": "string",
                        "description": "Unique id to identify this location."
                      },
                      "locationName": {
                        "type": "string",
                        "description": "Name of the location."
                      },
                      "addressLine1": {
                        "type": "string",
                        "description": "The address line 1 of the stop location."
                      },
                      "addressLine2": {
                        "type": "string",
                        "description": "The address line 2 of the stop location."
                      },
                      "XPO's Shipment API allows partner to retrieve shipment data.": null,
                      "cityName": {
                        "type": "string",
                        "description": "The city to which the stop belongs."
                      },
                      "stateCode": {
                        "type": "string",
                        "description": "State code."
                      },
                      "zipCode": {
                        "type": "string",
                        "description": "Postal code."
                      },
                      "countryCode": {
                        "type": "string",
                        "description": "The country code to which the stop belongs."
                      },
                      "countryName": {
                        "type": "string",
                        "description": "The country to which the stop belongs."
                      },
                      "instructions": {
                        "type": "string",
                        "description": "instructions."
                      },
                      "locationReferenceNumbers": {
                        "type": "array",
                        "description": "This object holds the collection of reference numbers associated with this stop.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "Location Reference Type code."
                            },
                            "value": {
                              "type": "string",
                              "description": "Actual value of location reference code."
                            }
                          }
                        }
                      },
                      "dates": {
                        "type": "array",
                        "description": "",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": ""
                            },
                            "value": {
                              "type": "string",
                              "description": ""
                            }
                          }
                        }
                      }

                    },
                    "required": [ "locationType" ]
                  }
                },
                "notes": {
                  "description": "Notes associated with a shipment stored in this object.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Type of notes."
                      },
                      "value": {
                        "type": "string",
                        "description": "This indicates the value for the note."
                      }
                    }
                  }
                },
                "packingLineDetails": {
                  "description": "This object hold the item details of that shipment..",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "productNumber": {
                        "type": "string",
                        "description": "Product code of the item."
                      },
                      "itemNumber": {
                        "type": "string",
                        "description": "Item number."
                      },
                      "packageQuantity": {
                        "type": "string",
                        "description": "Number of packages."
                      },
                      "packageTypeCode": {
                        "type": "string",
                        "description": "Type of packages."
                      },
                      "packageDescription": {
                        "type": "string",
                        "description": "Package Description."
                      },
                      "height": {
                        "type": "string",
                        "description": "Height of package."
                      },
                      "length": {
                        "type": "string",
                        "description": "Length of the package."
                      },
                      "width": {
                        "type": "string",
                        "description": "Width of package."
                      },
                      "hlwUomCode": {
                        "type": "string",
                        "description": "Unit of measure for height/ width/length."
                      },
                      "weight": {
                        "type": "string",
                        "description": "Weight of the package."
                      },
                      "weightUomCode": {
                        "type": "string",
                        "description": "Weight - unit of measure."
                      },
                      "volume": {
                        "type": "string",
                        "description": "volume of package."
                      },
                      "volumeUomCode": {
                        "type": "string",
                        "description": "Volume - unit of measure."
                      },
                      "nmfc": {
                        "type": "string",
                        "description": "NMFC"
                      },
                      "unNumber": {
                        "type": "string",
                        "description": "UNNumber"
                      },
                      "containerNumber": {
                        "type": "string",
                        "description": "Indicates which container the goods are packed into."
                      },
                      "packingLineReferenceNumbers": {
                        "description": "This object holds the collection of reference numbers associated with this items.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "Custom reference code."
                            },
                            "value": {
                              "type": "string",
                              "description": "Actual value of reference code."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "container": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "containerNumber": {
                        "type": "string",
                        "description": "Unique identifier for container."
                      },
                      "sealNumber": {
                        "type": "string",
                        "description": "Seal Number"
                      },
                      "goodsWeight": {
                        "type": "string",
                        "description": "weight of goods in container."
                      },
                      "grossWeight": {
                        "type": "string",
                        "description": "gross weight of the container."
                      },
                      "tareWeight": {
                        "type": "string",
                        "description": "TareWeight."
                      },
                      "weightUomCode": {
                        "type": "string",
                        "description": "weight-  unit of measure."
                      },
                      "export": {
                        "type": "object",
                        "description": "Container information at origin side.",
                        "properties": {
                          "emptyRequiredBy": {
                            "type": "Date/Time",
                            "description": "Date customer needs an empty container to be delivered for them to load."
                          },
                          "emptyReleasedFromCY": {
                            "type": "Date/Time",
                            "description": "Actual date when carrier released empty container from port."
                          },
                          "estimatedPickup": {
                            "type": "Date/Time",
                            "description": "Estimated date when carrier can pickup full container."
                          },
                          "actualPickUp": {
                            "type": "Date/Time",
                            "description": "Actual date when the carrier picked up the full container."
                          },
                          "fclWharfGateIn": {
                            "type": "Date/Time",
                            "description": "Actual date when full container arrived at the port."
                          },
                          "fclVesselLoaded": {
                            "type": "Date/Time",
                            "description": "Actual date when container was loaded onto vessel."
                          }
                        }
                      },
                      "import": {
                        "type": "object",
                        "description": "Container information at destination side.",
                        "properties": {
                          "estimatedFullDelivery": {
                            "type": "Date/Time",
                            "description": "Estimated date when container will be delivered to the final destination."
                          }
                        }
                      },
                      "containerType": {
                        "type": "object",
                        "description": "Type of container.",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Container typecode."
                          },
                          "description": {
                            "type": "string",
                            "description": "description for Container typecode."
                          },
                          "isoCode": {
                            "type": "string",
                            "description": "ISOCode"
                          }
                        }
                      },
                      "containerReferenceNumbers": {
                        "description": "This object holds the collection of reference numbers associated with this container.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "Reference Type code."
                            },
                            "value": {
                              "type": "string",
                              "description": "Actual value of reference code."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "transportLegs": {
                  "description": "Transport information of shipment.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "legOrder": {
                        "type": "string",
                        "description": "order in which legs are executed."
                      },
                      "transportationMode": {
                        "type": "string",
                        "description": "Mode of Transportation such as TL, LTL, Air, Ocean etc."
                      },
                      "legType": {
                        "type": "string",
                        "description": "leg Type"
                      },
                      "vesselName": {
                        "type": "string",
                        "description": "Vessel number"
                      },
                      "voyageFlightNumber": {
                        "type": "string",
                        "description": "voyageFlightNumber"
                      },
                      "portOfLoadingCode": {
                        "type": "string",
                        "description": "UNLOC Codes"
                      },
                      "portOfLoadingName": {
                        "type": "string",
                        "description": "Name of port of landing"
                      },
                      "portOfDischargeCode": {
                        "type": "string",
                        "description": "UNLOC Codes"
                      },
                      "portOfDischargeName": {
                        "type": "string",
                        "description": "Name of port of discharge"
                      },
                      "estimatedTimeOfArrival": {
                        "type": "string",
                        "description": "estimatedTime Of Arrival"
                      },
                      "estimatedTimeOfDeparture": {
                        "type": "string",
                        "description": "estimated Time Of Departure"
                      },
                      "actualTimeOfArrival": {
                        "type": "string",
                        "description": "actualTimeOfArrival"
                      },
                      "actualTimeOfDeparture": {
                        "type": "string",
                        "description": "actualTimeOfDeparture"
                      },
                      "carrier": {
                        "type": "object",
                        "description": "Carriers for each Legs",
                        "properties": {
                          "carrierCode": {
                            "type": "string",
                            "description": "carrier Code"
                          },
                          "carrierName": {
                            "type": "string",
                            "description": "carrier Name"
                          },
                          "carrierSCAC": {
                            "type": "string",
                            "description": "carrierSCAC"
                          }
                        }
                      },
                      "tripLegReferenceNumbers": {
                        "description": "Carrier Booking Reference.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "custom reference code."
                            },
                            "value": {
                              "type": "string",
                              "description": "Actual value of reference code."
                            }
                          }
                        }
                      }
                    },
                    "required": [ "legOrder" ]
                  }

                },
                "shipmentReferenceNumbers": {
                  "description": "shipment Reference Numbers collection.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "custom reference code."
                      },
                      "value": {
                        "type": "string",
                        "description": "Actual value of reference code."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [ "partnerIdentifierCode", "masterBillNumber", "Shipment" ],
        "example": {
          "masterBillNumber": "test2masterbill",
          "partnerIdentifierCode": "10-1-MOHAWKNYC",
          "shipment": [
            {
              "houseBillNumber": "test2housebill",
              "transportationMode": "Sea",
              "goodsDescription": "Test Goods Description",
              "totalQuantity": 14,
              "quantityUomCode": "PLT",
              "totalWeight": 13,
              "chargeableWeight": 10,
              "weightUomCode": "KG",
              "originCode": "CNSHG",
              "originETD": "2021-06-01T09:10:42.476Z",
              "destinationCode": "USLGB",
              "destinationETA": "2021-06-01T09:10:42.476Z",
              "incoTermsCode": "FOB",
              "additionalTerms": "Additional terms Connect",
              "location": [
                {
                  "locationType": "Pickup",
                  "locationCode": "FASANGMKE",
                  "locationName": "WUHU MATY AIR-CONDITIONING EQUIPMENT CO, LTD",
                  "addressLine1": "SILVERLAKE ROAD AND HENGSHAN ROAD",
                  "addressLine2": "INTERSECTION OF WEDA, WUHU, ANHUI PROVINCE, CINA",
                  "cityName": "WUHU",
                  "countryCode": "CN",
                  "countryName": "China"
                },
                {
                  "locationType": "Consignee",
                  "locationCode": "MOHAWKNYC",
                  "locationName": "Mohawk Group Inc",
                  "addressLine1": "37 E 18TH ST",
                  "cityName": "NEW YORK",
                  "stateCode": "NY",
                  "zipCode": "10003",
                  "countryCode": "US",
                  "countryName": "United States"
                },
                {
                  "locationType": "Delivery",
                  "locationCode": "HITPRODEN",
                  "locationName": "GEODIS",
                  "addressLine1": "1101 Whitaker Rd",
                  "cityName": "Plainfield",
                  "stateCode": "IN",
                  "zipCode": "46168",
                  "countryCode": "US",
                  "countryName": "United States",
                  "dates": [
                    {
                      "type": "ESTIMATEDDELIVERY",
                      "value": "2021-06-09T10:00:57.528Z"
                    },
                    {
                      "type": "ACTUALDELIVERY",
                      "value": "2021-06-07T10:00:57.528Z"
                    },
                    {
                      "type": "REQUESTEDBY",
                      "value": "2021-06-01T10:00:57.528Z"
                    }
                  ]
                },
                {
                  "locationType": "Shipper",
                  "locationCode": "WUHMATWUH1",
                  "locationName": "WUHU MATY AIR-CONDITIONING EQUIPMENT CO, LTD",
                  "addressLine1": "SILVERLAKE ROAD AND HENGSHAN ROAD",
                  "addressLine2": "INTERSECTION OF WEDA, WUHU, ANHUI PROVINCE, CINA",
                  "cityName": "WUHU",
                  "countryCode": "CN",
                  "countryName": "China",
                  "dates": [
                    {
                      "type": "ESTIMATEDPICKUP",
                      "value": "2021-06-02T10:00:57.528Z"
                    },
                    {
                      "type": "ACTUALPICKUP",
                      "value": "2021-06-03T10:00:57.528Z"
                    },
                    {
                      "type": "READYTIME",
                      "value": "2021-06-03T10:00:57.528Z"
                    },
                    {
                      "type": "CLOSETIME",
                      "value": "2021-06-06T10:00:57.528Z"
                    },
                    {
                      "type": "REQUESTEDBY",
                      "value": "2021-06-01T10:00:57.528Z"
                    }
                  ]
                },
                {
                  "locationType": "ControllingCustomer",
                  "locationCode": "MOHAWKNYC",
                  "locationName": "Mohawk Group Inc",
                  "addressLine1": "37 E 18TH ST",
                  "cityName": "NEW YORK",
                  "stateCode": "NY",
                  "zipCode": "10003",
                  "countryCode": "US",
                  "countryName": "United States"
                }
              ],
              "notes": [
                {
                  "type": "Special Instructions",
                  "value": "Special Instructions"
                }
              ],
              "packingLineDetails": [
                {
                  "productNumber": "1",
                  "itemNumber": "TESTNUM000001",
                  "packageQuantity": 650,
                  "packageTypeCode": "CTN",
                  "packageDescription": "DEHUMIDIFIER",
                  "height": 10,
                  "length": 10,
                  "width": 10,
                  "hlwUomCode": "IN",
                  "weight": 15.0,
                  "weightUomCode": "KG",
                  "volume": 70.670,
                  "volumeUomCode": "M3",
                  "nmfc": "testNMFC",
                  "unNumber": "testUNNumber",
                  "containerNumber": "TEST3165730",
                  "packingLineReferenceNumbers": [
                    {
                      "code": "INNERQTY",
                      "value": "750"
                    },
                    {
                      "code": "INNERQTYUOM",
                      "value": "PCE"
                    },
                    {
                      "code": "PONUMBER",
                      "value": "TEST000001"
                    }
                  ]
                }
              ],
              "container": [
                {
                  "containerNumber": "TEST3165730",
                  "sealNumber": "5656565",
                  "goodsWeight": 15978.64,
                  "grossWeight": 15978.640,
                  "tareWeight": 0.0,
                  "weightUomCode": "KG",
                  "export": {
                    "emptyRequiredBy": "2021-06-05T09:10:42.476Z",
                    "emptyReleasedFromCY": "2021-06-04T09:10:42.476Z",
                    "estimatedPickup": "2021-06-01T09:10:42.476Z",
                    "actualPickUp": "2021-06-02T09:10:42.476Z",
                    "fclWharfGateIn": "2021-06-03T09:10:42.476Z",
                    "fclVesselLoaded": "2021-06-04T09:10:42.476Z"
                  },
                  "import": {
                    "estimatedFullDelivery": "2021-06-08T09:10:42.476Z"
                  },
                  "containerType": {
                    "code": "40HC",
                    "description": "Forty foot high cube",
                    "isoCode": "45G0-40' LONG, 9'6 HIGH, 8' WIDE"
                  },
                  "containerReferenceNumbers": [
                    {
                      "code": "ET",
                      "value": "Reference3"
                    }
                  ]
                }
              ],
              "transportLegs": [
                {
                  "legOrder": 1,
                  "transportationMode": "ROA",
                  "legType": "OTH",
                  "voyageFlightNumber": "050R",
                  "portOfLoadingCode": "CNWUH",
                  "portOfLoadingName": "Wuhu",
                  "portOfDischargeCode": "CNSGH",
                  "portOfDischargeName": "Shanghai",
                  "estimatedTimeOfArrival": "2021-04-13T09:00",
                  "estimatedTimeOfDeparture": "2021-04-12T09:00",
                  "actualTimeOfArrival": "2021-04-13T09:00",
                  "actualTimeOfDeparture": "2021-04-12T09:00",
                  "carrier": {
                    "carrierCode": "LEOVINEPV1",
                    "carrierName": "LEON VINCENT OVERSEAS"
                  },
                  "tripLegReferenceNumbers": [
                    {
                      "code": "Test",
                      "value": "Test referencez"
                    }
                  ]
                },
                {
                  "legOrder": 2,
                  "transportationMode": "SEA",
                  "legType": "MAI",
                  "vesselName": "MSC JOSSELINE",
                  "voyageFlightNumber": "050R",
                  "portOfLoadingCode": "CNSGH",
                  "portOfLoadingName": "Shanghai",
                  "portOfDischargeCode": "USLGB",
                  "portOfDischargeName": "Long Beach",
                  "estimatedTimeOfArrival": "2021-04-19T09:00",
                  "estimatedTimeOfDeparture": "2021-04-13T09:00",
                  "actualTimeOfArrival": "2021-04-19T09:00",
                  "actualTimeOfDeparture": "2021-04-13T09:00",
                  "carrier": {
                    "carrierCode": "LEOVINEPV2",
                    "carrierName": "LEON VINCENT OVERSEAS"
                  },
                  "tripLegReferenceNumbers": [
                    {
                      "code": "Test",
                      "value": "Test referencez"
                    }
                  ]
                },
                {
                  "legOrder": 3,
                  "transportationMode": "ROA",
                  "legType": "OTH",
                  "voyageFlightNumber": "050R",
                  "portOfLoadingCode": "USLGB",
                  "portOfLoadingName": "Long Beach",
                  "portOfDischargeCode": "USPAF",
                  "portOfDischargeName": "Plainfield",
                  "estimatedTimeOfArrival": "2021-04-22T09:00",
                  "estimatedTimeOfDeparture": "2021-04-20T09:00",
                  "actualTimeOfArrival": "2021-04-22T09:00",
                  "actualTimeOfDeparture": "2021-04-20T09:00",
                  "carrier": {
                    "carrierCode": "LEOVINEPV3",
                    "carrierName": "LEON VINCENT OVERSEAS"
                  },
                  "tripLegReferenceNumbers": [
                    {
                      "code": "Test",
                      "value": "Test referencez"
                    }
                  ]
                }
              ],
              "shipmentReferenceNumbers": [
                {
                  "code": "Cargo Ready Date",
                  "value": "2021-04-19T19:22:00"
                },
                {
                  "code": "Space Release",
                  "value": "testvalue1"
                },
                {
                  "code": "SI Cut Off",
                  "value": "2021-04-19T19:22:00"
                },
                {
                  "code": "Actual SO Release Date",
                  "value": "2021-04-19T19:22:00"
                },
                {
                  "code": "Shipment Status",
                  "value": "SHIPPED"
                },
                {
                  "code": "Controlling Office/Agent",
                  "value": "OTHER"
                },
                {
                  "code": "PO Number",
                  "value": "1234"
                }
              ]
            }
          ]
        }
      },
      "shipmentBookingResponse": {
        "type": "object",
        "properties": {
          "BookingResponses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "GlobalTrackingNumbers": {
                  "type": "string",
                  "description": "GlobalTrackingNumbers"
                },
                "HwbNumber": {
                  "type": "string",
                  "description": "HwbNumber"
                }
              }
            }
          },
          "StatusCode": {
            "type": "string",
            "description": "StatusCode OK"
          },
          "Message": {
            "type": "string",
            "description": "Message"
          }
        },
        "example": {
          "BookingResponses": [
            {
              "GlobalTrackingNumbers": "XPONC11O3RREZY4F21",
              "HwbNumber": "test2housebill"
            }
          ],
          "StatusCode": "OK",
          "Message": "C21000444"
        }
      }
    }
  }
}
